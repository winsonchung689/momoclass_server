<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xue.repository.dao.UserMapper">

  <resultMap id="BaseResultMap" type="com.xue.entity.model.Message">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="photo" property="photo" javaType="[B" jdbcType="BLOB"/>
  </resultMap>
  <resultMap id="BaseSchedule" type="com.xue.entity.model.Schedule">
    <result column="add_date" jdbcType="VARCHAR" property="add_date" />
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>
  <resultMap id="BaseUser" type="com.xue.entity.model.User">
    <result column="nick_name" jdbcType="VARCHAR" property="nick_name" />
    <result column="role" jdbcType="VARCHAR" property="role" />
  </resultMap>
  <resultMap id="BaseRestaurantUser" type="com.xue.entity.model.RestaurantUser">
    <result column="nick_name" jdbcType="VARCHAR" property="nick_name" />
    <result column="role" jdbcType="VARCHAR" property="role" />
  </resultMap>
  <resultMap id="BaseBookUser" type="com.xue.entity.model.BookUser">
    <result column="nick_name" jdbcType="VARCHAR" property="nick_name" />
    <result column="role" jdbcType="VARCHAR" property="role" />
  </resultMap>
  <resultMap id="BaseBookDetail" type="com.xue.entity.model.BookDetail">
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>

  <resultMap id="BaseRestaurantOrder" type="com.xue.entity.model.RestaurantOrder">
    <result column="nick_name" jdbcType="VARCHAR" property="nick_name" />
    <result column="role" jdbcType="VARCHAR" property="role" />
  </resultMap>

  <resultMap id="BaseRestaurantMenu" type="com.xue.entity.model.Menu">
    <result column="category" jdbcType="VARCHAR" property="category" />
  </resultMap>

  <resultMap id="BasePptMenu" type="com.xue.entity.model.PptMenu">
    <result column="category" jdbcType="VARCHAR" property="category" />
  </resultMap>

  <resultMap id="BaseLesson" type="com.xue.entity.model.Lesson">
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>
  <resultMap id="BaseLessonPackage" type="com.xue.entity.model.LessonPackage">
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>
  <resultMap id="BaseSignUp" type="com.xue.entity.model.SignUp">
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>
  <resultMap id="BaseGift" type="com.xue.entity.model.Gift">
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>
  <resultMap id="BaseArrangement" type="com.xue.entity.model.Arrangement">
    <result column="dayofweek" jdbcType="VARCHAR" property="dayofweek" />
  </resultMap>
  <resultMap id="BaseLeave" type="com.xue.entity.model.Leave">
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>
  <resultMap id="BaseAllCount" type="com.xue.entity.model.AllCount">
    <result column="student_count" jdbcType="INTEGER" property="student_count" />
  </resultMap>
  <resultMap id="BaseBookCount" type="com.xue.entity.model.BookCount">
    <result column="amount" jdbcType="FLOAT" property="amount" />
  </resultMap>
  <resultMap id="BaseAnalyzeCount" type="com.xue.entity.model.AnalyzeCount">
    <result column="sign_count" jdbcType="FLOAT" property="sign_count" />
  </resultMap>
  <resultMap id="BaseGoodsList" type="com.xue.entity.model.GoodsList">
    <result column="goods_name" jdbcType="VARCHAR" property="goods_name" />
  </resultMap>
  <resultMap id="BaseGoodsLike" type="com.xue.entity.model.GoodsLike">
    <result column="goods_id" jdbcType="VARCHAR" property="goods_id" />
  </resultMap>
  <resultMap id="BaseGroupBuy" type="com.xue.entity.model.GroupBuy">
    <result column="goods_id" jdbcType="VARCHAR" property="goods_id" />
  </resultMap>
  <resultMap id="BaseOrder" type="com.xue.entity.model.Order">
    <result column="nick_name" jdbcType="VARCHAR" property="nick_name" />
  </resultMap>
  <resultMap id="BaseNote" type="com.xue.entity.model.Note">
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>
  <resultMap id="BaseBook" type="com.xue.entity.model.Book">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
  </resultMap>
  <resultMap id="BaseAnnouncement" type="com.xue.entity.model.Announcement">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
  </resultMap>
  <resultMap id="BasePost" type="com.xue.entity.model.Post">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
  </resultMap>
  <resultMap id="BasePostComment" type="com.xue.entity.model.PostComment">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
  </resultMap>
  <resultMap id="BasePostLike" type="com.xue.entity.model.PostLike">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
  </resultMap>
  <resultMap id="BaseCommunicateRecord" type="com.xue.entity.model.CommunicateRecord">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
  </resultMap>
  <resultMap id="BasePoints" type="com.xue.entity.model.Points">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
  </resultMap>
  <resultMap id="BaseContract" type="com.xue.entity.model.Contract">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
    <result column="contract" jdbcType="VARCHAR" property="contract" />
  </resultMap>
  <resultMap id="BaseWebsite" type="com.xue.entity.model.Website">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
  </resultMap>
  <resultMap id="BaseGiftList" type="com.xue.entity.model.GiftList">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
  </resultMap>
  <resultMap id="BaseCard" type="com.xue.entity.model.Card">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
  </resultMap>
  <resultMap id="BaseCardRecord" type="com.xue.entity.model.CardRecord">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
  </resultMap>
  <resultMap id="BaseAlbum" type="com.xue.entity.model.Album">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
  </resultMap>
  <resultMap id="BaseMerchant" type="com.xue.entity.model.Merchant">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
  </resultMap>


  <!-- 获取全部appid商户 -->
  <select id="getMerchantByAppid" parameterType="com.xue.entity.model.Merchant" resultMap="BaseMerchant">
    select * from merchant where appid =#{param1} and delete_status = 0;
  </select>

  <!-- 获取商户 -->
  <select id="getMerchant" parameterType="com.xue.entity.model.Merchant" resultMap="BaseMerchant">
    select * from merchant where studio =#{param1} and campus =#{param2} and appid =#{param3} and delete_status = 0;
  </select>

  <!-- 获取课评模版 -->
  <select id="getCommentModel" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,comment,class_target,studio from class_comment where class_target_bak = '模版' and studio ='大雄工作室' and campus ='大雄工作室' and delete_status = 0 order by class_target;
  </select>

  <!-- 获取课评 -->
  <select id="getMessage" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
      select * from class_comment where class_target_bak = #{param4} and studio = #{param1} and campus =#{param5} and delete_status = 0 order by create_time desc,id asc limit #{param2},#{param3};
  </select>

  <select id="getAlbum" parameterType="com.xue.entity.model.Album" resultMap="BaseAlbum">
    select * from album where student_name =#{param1} and studio = #{param2} and campus =#{param3} and delete_status = 0 order by create_time desc limit #{param4},#{param5};
  </select>

  <select id="getContract" parameterType="com.xue.entity.model.Contract" resultMap="BaseContract">
    select * from contract where studio = #{param1} and campus =#{param2} and delete_status = 0 order by create_time desc limit 1;
  </select>

  <select id="getExhibitionByType" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select * from class_comment where class_target_bak =#{param2} and studio =#{param1} and delete_status = 0 order by create_time desc limit #{param3},#{param4};
  </select>

  <!-- 获取全量发帖 -->
  <select id="getPostPublic" parameterType="com.xue.entity.model.Post" resultMap="BasePost">
    select id,openid,uuids,content,studio,create_time from post where delete_status = 0 and is_private = 0 order by create_time desc limit #{param1},#{param2};
  </select>

  <!-- 获取本画室发帖 -->
  <select id="getPostPrivate" parameterType="com.xue.entity.model.Post" resultMap="BasePost">
    select id,openid,uuids,content,studio,create_time from post where delete_status = 0 and studio =#{param3} order by create_time desc limit #{param1},#{param2};
  </select>

  <!-- 获取回帖 -->
  <select id="getPostComment" parameterType="com.xue.entity.model.PostComment" resultMap="BasePostComment">
    select * from post_comment where delete_status = 0 and post_id =#{param1} order by create_time desc limit 100;
  </select>

  <select id="getLeaveMessage" parameterType="com.xue.entity.model.PostComment" resultMap="BasePostComment">
    select * from post_comment where delete_status = 0 and studio =#{param1} and type =#{param2} order by create_time desc limit 30;
  </select>

  <!-- 获取点赞 -->
  <select id="getPostLike" parameterType="com.xue.entity.model.PostLike" resultMap="BasePostLike">
    select id,openid,post_id,studio,create_time from post_like where delete_status = 0 and post_id =#{param1} order by create_time desc;
  </select>

  <select id="getPostLikeByOpenid" parameterType="com.xue.entity.model.PostLike" resultMap="BasePostLike">
    select * from post_like where post_id =#{param1} and openid =#{param2} order by create_time desc;
  </select>

  <!-- 获取全部 -->
  <select id="getMessageClient" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,'null' photo,comment,create_time,class_name,class_target,studio from class_comment where class_target_bak ='课评' and delete_status = 0 and student_name like "%"#{param1}"%" and studio = #{param2} order by create_time desc
  </select>

  <!-- 获取全部 -->
  <select id="getMessageInName" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select * from class_comment where class_target_bak =#{param5} and delete_status = 0 and find_in_set(student_name,#{param1}) and studio = #{param2} and campus =#{param6} order by create_time desc limit #{param3},#{param4};
  </select>

  <!-- 获取全部 -->
  <select id="getMessageGrowth" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select * from class_comment where class_target_bak ='课评' and delete_status = 0 and find_in_set(student_name,#{param1}) and studio = #{param2} order by create_time desc limit #{param3},#{param4};
  </select>


  <!-- 获取范画 -->
  <select id="getModel" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select * from class_comment where class_target='范画' and delete_status = 0 and studio = #{param1} and campus =#{param4} order by create_time desc,id asc limit #{param2},#{param3};
  </select>

  <select id="getAllOnlineTeacher" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select * from class_comment where class_target_bak ='网课' and delete_status = 0 order by create_time;
  </select>

  <select id="getOnlineTeacher" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select * from class_comment where class_target_bak =#{param1} and delete_status = 0 order by create_time desc,id asc limit #{param2},#{param3};
  </select>

  <select id="getOnlineTeacherByOpenid" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select * from class_comment where class_target_bak ='网课' and openid =#{param1}  and delete_status = 0
  </select>

  <select id="getCommunicateRecord" parameterType="com.xue.entity.model.CommunicateRecord" resultMap="BaseCommunicateRecord">
    select * from communicate_record where delete_status = 0 and studio = #{param1} and campus =#{param4} order by create_time desc,id asc limit #{param2},#{param3};
  </select>

  <select id="getCommunicateLike" parameterType="com.xue.entity.model.CommunicateRecord" resultMap="BaseCommunicateRecord">
    select id,student_name,studio,campus,openid,content,create_time,uuids from communicate_record where delete_status = 0 and studio = #{param1} and (student_name like "%"#{param2}"%" or content like "%"#{param2}"%" or openid like "%"#{param2}"%")  and campus =#{param3} order by create_time desc,id asc;
  </select>

  <select id="getCommunicateById" parameterType="com.xue.entity.model.CommunicateRecord" resultMap="BaseCommunicateRecord">
    select * from communicate_record where id =#{param1} ;
  </select>

  <!-- 获取范画 -->
  <select id="getMamaShare" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target='打卡' and delete_status = 0 order by create_time desc limit #{param1},#{param2};
  </select>

  <!-- 获取广告 -->
  <select id="getUuidByTarget" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select * from class_comment where class_target=#{param1} and studio = #{param2} and campus = #{param3} and delete_status = 0 order by create_time desc limit 1;
  </select>

  <!-- 获取奖状模板 -->
  <select id="getCertificateModel" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select photo from class_comment where class_target='奖状模板' and class_name=#{param1} and delete_status = 0 order by create_time desc limit 1
  </select>

  <!-- 获取奖状模板 -->
  <select id="getCertificateModelName" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select class_name from class_comment where class_target='奖状模板' and delete_status = 0
  </select>

  <!-- 获取相框模板 -->
  <select id="getFrameModel" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,class_name,uuids from class_comment where class_target=#{param4} and studio in (#{param1},'大雄工作室') and delete_status = 0 order by id limit #{param2},#{param3};
  </select>

  <!-- 获取课程体系 -->
  <select id="getClassSys" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio,uuids from class_comment where class_target = #{param1} and delete_status = 0 and studio = #{param2} and campus =#{param5} order by create_time desc limit #{param3},#{param4};
  </select>

  <!-- 获取课程体系 -->
  <select id="getUuidById" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select * from class_comment where delete_status = 0 and id = #{param1};
  </select>

  <!-- 获取教程列表 -->
  <select id="getCourseList" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target = '教程列表' and delete_status = 0 and studio = #{param1} order by create_time desc limit #{param2},#{param3};
  </select>

  <!-- 获取教程详情 -->
  <select id="getCourseDetail" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target = '教程详情' and delete_status = 0 and studio = #{param1} and class_name = #{param2} order by create_time limit #{param3},#{param4};
  </select>

  <!-- 获取主页 -->
  <select id="getHome" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio,uuids from class_comment where class_target='主页' and delete_status = 0 and studio = #{param1} order by create_time desc limit 1
  </select>

  <!-- 获取奖状 -->
  <select id="getCertificate" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target='奖状' and delete_status = 0 and studio = #{param1} order by create_time desc
  </select>

  <!-- 获取付款码 -->
  <select id="getPaycode" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,'null' photo,comment,create_time,class_name,class_target,studio,uuids from class_comment where class_target='付款码' and delete_status = 0 and student_name = #{param1} order by create_time desc limit 1
  </select>

  <!-- 获取个人奖状 -->
  <select id="getCertificateByName" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,'null' photo,comment,create_time,class_name,class_target,studio from class_comment where class_target='奖状' and studio = #{param1} and delete_status = 0 and student_name = #{param2} order by create_time desc
  </select>

  <!-- 获取全部 -->
  <select id="getSearch" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,'null' photo,comment,create_time,class_name,class_target,studio from class_comment where (student_name like "%"#{param1}"%" or class_name like "%"#{param1}"%") and class_target_bak =#{param5} and studio = #{param2} and campus =#{param6} and delete_status = 0  order by create_time desc limit #{param3},#{param4};
  </select>

  <!-- 获取详情 -->
  <select id="getDetails" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select * from class_comment where id = #{param1} and delete_status = 0
  </select>

  <select id="getMessageByDurationDate" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select * from class_comment where studio =#{param1} and campus =#{param2} and date_format(create_time, '%Y-%m-%d') =#{param3} and duration =#{param4} and class_target_bak ='课评' and delete_status = 0
  </select>

  <!-- 获取详情 -->
  <select id="getDetailsUrlByDate" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select * from class_comment where studio= #{param1} and cast(replace(replace(duration,':',''),'-','') as signed)=cast(replace(replace(#{param2},':',''),'-','') as signed) and student_name= #{param3} and date_format(create_time, '%Y-%m-%d')= #{param4} and campus =#{param5} and class_target_bak =#{param6} and delete_status = 0
  </select>

  <!-- 积分明细 -->
  <select id="getPointsRecordByStudent" parameterType="com.xue.entity.model.Points" resultMap="BasePoints">
    select * from points_record where delete_status = 0 and student_name = #{param1} and studio = #{param2} and campus = #{param3} and subject = #{param4} and date_format(create_time, '%Y-%m-%d') between #{param5} and #{param6} order by create_time desc
  </select>

  <select id="getPointsRecordById" parameterType="com.xue.entity.model.Points" resultMap="BasePoints">
    select * from points_record where delete_status = 0 and id = #{param1}
  </select>

  <!-- 获取学生照片 -->
  <select id="getStudentPhoto" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,'null' photo,comment,create_time,class_name,class_target,studio from class_comment where class_target = '礼品乐园' and delete_status = 0 and student_name =#{param1} and studio =#{param2} and campus =#{param3} order by create_time desc limit 1;
  </select>

  <!-- 删除详情 -->
  <select id="deleteStudentPhoto" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    update class_comment set delete_status = 1 where class_target = '礼品乐园' and student_name =#{param1} and studio =#{param2}
  </select>

  <!-- 删除详情 -->
  <select id="deleteHome" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    update class_comment set delete_status = 1 where class_target = '主页' and studio =#{param1}
  </select>

  <select id="deleteGoodsLike" parameterType="com.xue.entity.model.GoodsLike" resultMap="BaseResultMap">
    update goods_like set delete_status = #{param3} where goods_id =#{param1} and openid =#{param2}
  </select>

  <select id="deletePostLike" parameterType="com.xue.entity.model.GoodsLike" resultMap="BaseResultMap">
    update post_like set delete_status = #{param3} where post_id =#{param1} and openid =#{param2}
  </select>

  <!-- 删除详情 -->
  <select id="deleteMyOrder" parameterType="com.xue.entity.model.Order" resultMap="BaseResultMap">
    update `order` set delete_status = 1 where id = #{param1};
  </select>

  <!-- 删除详情 -->
  <select id="deleteNote" parameterType="com.xue.entity.model.Note" resultMap="BaseResultMap">
    delete from class_note where id = #{param1};
  </select>

  <!-- 删除通知 -->
  <select id="deleteNotice" parameterType="com.xue.entity.model.Announcement" resultMap="BaseResultMap">
    delete from announcement where id = #{param1};
  </select>

  <!-- 删除详情 -->
  <select id="deleteUser" parameterType="com.xue.entity.model.User" resultMap="BaseResultMap">
    update user set delete_status = 1 where id = #{param1};
  </select>

  <!-- 删除相册 -->
  <select id="deleteAlbum" parameterType="com.xue.entity.model.Album" resultMap="BaseResultMap">
    update album set delete_status = 1 where id = #{param1};
  </select>

  <!-- 删除商户 -->
  <select id="deleteMerchant" parameterType="com.xue.entity.model.Merchant" resultMap="BaseResultMap">
    update merchant set delete_status = 1 where id = #{param1};
  </select>

  <!-- 删除礼品清单 -->
  <select id="deleteGiftList" parameterType="com.xue.entity.model.GiftList" resultMap="BaseResultMap">
    update gift_list set delete_status = 1 where id = #{param1};
  </select>

  <select id="deleteCard" parameterType="com.xue.entity.model.Card" resultMap="BaseResultMap">
    update card set delete_status = 1 where id = #{param1};
  </select>

  <select id="deleteCardRecord" parameterType="com.xue.entity.model.Card" resultMap="BaseResultMap">
    update card_record set delete_status = 1 where id = #{param1};
  </select>

  <select id="deletePointsRecordById" parameterType="com.xue.entity.model.Points" resultMap="BaseResultMap">
    update points_record set delete_status = 1 where id = #{param1};
  </select>

  <select id="deletePointsRecordByStudent" parameterType="com.xue.entity.model.Points" resultMap="BaseResultMap">
    update points_record set delete_status = 1 where student_name = #{param1} and studio = #{param2} and campus = #{param3} and subject = #{param4}
  </select>

  <!-- 删除详情 -->
  <select id="deliverMyOrder" parameterType="com.xue.entity.model.Order" resultMap="BaseResultMap">
    update `order` set status = #{param2} where id = #{param1};
  </select>

  <!-- 获取详情 -->
  <select id="deleteComment" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
     delete from class_comment where id =#{param1} and studio =#{param2}
  </select>

  <!-- 获取详情 -->
  <select id="updateVideoTop" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    update class_comment set create_time =#{param2} where id =#{param1} and delete_status = 0
  </select>

  <!-- 删除帖子 -->
  <select id="deletePost" parameterType="com.xue.entity.model.Post" resultMap="BaseResultMap">
    update post set delete_status = 1 where id =#{param1}
  </select>

  <select id="deletePostComment" parameterType="com.xue.entity.model.PostComment" resultMap="BaseResultMap">
    update post_comment set delete_status = 1 where id =#{param1}
  </select>


  <!-- 删除账单 -->
  <select id="deleteBookDetail" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    update account_book set delete_status = 1 where id =#{param1} and studio =#{param2}
  </select>

  <select id="deleteCommunicateRecord" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    update communicate_record set delete_status = 1 where id =#{param1} and studio =#{param2}
  </select>

  <!-- 获取详情 -->
  <select id="updateUuids" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    update class_comment set uuids =#{param3} where id =#{param1} and studio =#{param2}
  </select>

  <!-- 获取详情 -->
  <select id="updateUuids_c" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    update class_comment set uuids_c =#{param3} where id =#{param1} and studio =#{param2}
  </select>


  <!-- 删除商品 -->
  <select id="deleteGoodsList" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseResultMap">
    update goods_list set delete_status = 1 where id =#{param1} and studio =#{param2}
  </select>

  <!-- 删除团购 -->
  <select id="deleteGroupBuy" parameterType="com.xue.entity.model.GroupBuy" resultMap="BaseResultMap">
    update `order` set delete_status = 1 where goods_id =#{param1} and leader_id =#{param2} and type =#{param3}
  </select>

  <!-- 删除安排 -->
  <select id="deleteArrangement" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseResultMap">
    update schedule_arrangement set delete_status = 1 where id =#{param1} and studio =#{param2}
  </select>

  <!-- 更改课程名 -->
  <select id="modifyOrderCutPrice" parameterType="com.xue.entity.model.Order" resultMap="BaseResultMap">
    update `order` set cut_price =#{param3} where goods_id =#{param1} and leader_id =#{param2}
  </select>


  <!-- 更改商品简介 -->
  <select id="modifyGoodsIntro" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseResultMap">
    update goods_list set goods_intro =#{param4} where id =#{param1} and studio =#{param2} and campus =#{param3}
  </select>

  <select id="modifyGoodsPhoto" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseResultMap">
    update goods_list set photo =#{param4} where id =#{param1} and studio =#{param2} and campus =#{param3}
  </select>

  <!-- 更改商品名称 -->
  <select id="modifyGoodsName" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseResultMap">
    update goods_list set goods_name =#{param4} where id =#{param1} and studio =#{param2} and campus =#{param3}
  </select>

  <!-- 更改成团人数 -->
  <select id="modifyGoodsGroupNum" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseResultMap">
    update goods_list set group_num =#{param4} where id =#{param1} and studio =#{param2} and campus =#{param3}
  </select>

  <!-- 更改团购价 -->
  <select id="modifyGoodsGroupPrice" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseResultMap">
    update goods_list set group_price =#{param4} where id =#{param1} and studio =#{param2} and campus =#{param3}
  </select>

  <select id="modifyGoodsPayType" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseResultMap">
    update goods_list set pay_type =#{param4} where id =#{param1} and studio =#{param2} and campus =#{param3}
  </select>

  <!-- 更改单价 -->
  <select id="modifyGoodsPrice" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseResultMap">
    update goods_list set goods_price =#{param4} where id =#{param1} and studio =#{param2} and campus =#{param3}
  </select>

  <!-- 更改砍价 -->
  <select id="modifyGoodsCutStep" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseResultMap">
    update goods_list set cut_step =#{param4} where id =#{param1} and studio =#{param2} and campus =#{param3}
  </select>

  <!-- 更改秒杀价 -->
  <select id="modifyGoodsSeckillPrice" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseResultMap">
    update goods_list set seckill_price =#{param4} where id =#{param1} and studio =#{param2} and campus =#{param3}
  </select>

  <!-- 更改过期时间 -->
  <select id="modifyGoodsExpiredTime" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseResultMap">
    update goods_list set expired_time =#{param4} where id =#{param1} and studio =#{param2} and campus =#{param3}
  </select>

  <!-- 更改地址及电话号码 -->
  <select id="updateLocation" parameterType="com.xue.entity.model.User" resultMap="BaseResultMap">
    update user set location=#{param2} where openid =#{param1}
  </select>

  <select id="updatePhoneNumber" parameterType="com.xue.entity.model.User" resultMap="BaseResultMap">
    update user set phone_number =#{param2} where openid =#{param1}
  </select>

  <select id="updateWechatId" parameterType="com.xue.entity.model.User" resultMap="BaseResultMap">
    update user set wechat_id =#{param2} where openid =#{param1}
  </select>

  <select id="updateUserStudentName" parameterType="com.xue.entity.model.User" resultMap="BaseResultMap">
    update user set student_name =#{param2} where openid =#{param1} and student_name ='no_name'
  </select>

  <!-- 更改用户名 -->
  <select id="updateNewName" parameterType="com.xue.entity.model.User" resultMap="BaseResultMap">
    update user set nick_name =#{param2} where openid =#{param1}
  </select>

  <!-- 更新公约文字 -->
  <select id="updateContractText" parameterType="com.xue.entity.model.Contract" resultMap="BaseResultMap">
    update contract set contract =#{param3} where studio =#{param1} and campus =#{param2}
  </select>

  <!-- 更新公约图片 -->
  <select id="updateContractUuid" parameterType="com.xue.entity.model.Contract" resultMap="BaseResultMap">
    update contract set uuid =#{param3} where studio =#{param1} and campus =#{param2}
  </select>

  <!-- 更新公约类型 -->
  <select id="updateContractType" parameterType="com.xue.entity.model.Contract" resultMap="BaseResultMap">
    update contract set type =#{param3} where studio =#{param1} and campus =#{param2}
  </select>

  <!-- 更改提前预约天数 -->
  <select id="changeArrangementDays" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseResultMap">
    update schedule_arrangement set days =#{param3} where studio =#{param1} and campus =#{param2}
  </select>

  <!-- 更改课程表明细 -->
  <select id="changeArrangementById" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseResultMap">
    update schedule_arrangement set repeat_week=#{repeat_week},repeat_duration=#{repeat_duration},is_repeat =#{is_repeat},class_number =#{class_number},subject =#{subject},duration =#{duration},upcoming=#{upcoming},limits=#{limits},is_reserved =#{is_reserved} where id =#{id} and studio =#{studio}
  </select>

  <!-- 更改课程名 -->
  <select id="changeScheduleClassName" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseResultMap">
    update class_schedule set class_number =#{param4} where class_number =#{param1} and studio =#{param2} and duration =#{param3} and subject =#{param5} and campus =#{param6} and dayofweek(add_date)=#{param7}
  </select>

  <!-- 更改课程时间 -->
  <select id="changeScheduleDuration" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseResultMap">
    update class_schedule set duration =#{param4} where class_number =#{param1} and studio =#{param2} and duration =#{param3} and subject =#{param5} and campus =#{param6} and dayofweek(add_date)=#{param7}
  </select>

  <!-- 更改通知时间 -->
  <select id="changeScheduleHours" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseResultMap">
    update schedule_arrangement set hours =#{param2} where id =#{param1}
  </select>

  <!-- 更改课程名 -->
  <select id="changeSignUpClassName" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseResultMap">
    update sign_up_record set class_number =#{param4} where class_number =#{param1} and studio =#{param2} and duration =#{param3} and subject =#{param5} and campus =#{param6}
  </select>


  <!-- 更改课程名 -->
  <select id="changeScheduleSubject" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseResultMap">
    update class_schedule set subject =#{param4} where subject =#{param1} and studio =#{param2} and duration =#{param3} and class_number =#{param5} and campus =#{param6} and dayofweek(add_date)=#{param7}
  </select>


  <!-- 获取详情 -->
  <select id="deleteSignUpRecord" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    update sign_up_record set delete_status = 1 where id =#{param1} and studio =#{param2}
  </select>

  <!-- 更新结课状态 -->
  <select id="updateSignUpEndingByAll" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    update sign_up_record set ending_status = 1 where student_name =#{param1} and studio =#{param2} and date_format(create_time,'%Y-%m-%d') &lt;= #{param3}
  </select>

  <!-- 更新单个结课状态 -->
  <select id="updateSignUpEndingById" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    update sign_up_record set ending_status = 0 where id =#{param1} and studio =#{param2}
  </select>

  <select id="updateLeaveAllRecord" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    update leave_record set ending_status = 1 where student_name =#{param1} and studio =#{param2} and campus =#{param3}
  </select>

  <!-- 获取详情 -->
  <select id="deleteGiftRecord" parameterType="com.xue.entity.model.Gift" resultMap="BaseGift">
    delete from gift_record where id =#{param1} and studio =#{param2}
  </select>

  <!-- 获取详情 -->
  <select id="deleteLeaveAllRecord" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    update leave_record set delete_status = 1 where student_name =#{param1} and studio =#{param2} and leave_type = #{param3} and subject = #{param4}
  </select>

  <!-- 删除请假记录 -->
  <select id="deleteLeaveRecord" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    update leave_record set delete_status = 1 where id =#{param1} and studio =#{param2}
  </select>

  <!-- 删除请假记录 -->
  <select id="cancelLeave" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    update leave_record set delete_status = 1 where student_name =#{param1} and studio =#{param2} and subject =#{param3} and campus =#{param4} and date_time =#{param5} and duration =#{param6}
  </select>

  <!-- 刪除课程表 -->
  <select id="deleteSchedule" parameterType="com.xue.entity.model.Schedule" resultMap="BaseResultMap">
    update class_schedule set delete_status = 1 where id =#{param1} and studio =#{param2}
  </select>

  <!-- 刪除课程表 -->
  <select id="deleteScheduleBySubject" parameterType="com.xue.entity.model.Schedule" resultMap="BaseResultMap">
    update class_schedule set delete_status = 1 where student_name =#{param1} and studio =#{param2} and subject =#{param3} and campus =#{param4}
  </select>

  <!-- 确认课程 -->
  <select id="confirmSchedule" parameterType="com.xue.entity.model.Schedule" resultMap="BaseResultMap">
    update class_schedule set status = 1 where id =#{param1} and studio =#{param2}
  </select>

  <!-- 获取删除学生 -->
  <select id="deleteLesson" parameterType="com.xue.entity.model.Lesson" resultMap="BaseResultMap">
    update lesson set delete_status = 1,create_time=#{param3} where id =#{param1} and studio =#{param2}
  </select>

  <select id="deleteLessonForever" parameterType="com.xue.entity.model.Lesson" resultMap="BaseResultMap">
    delete from lesson where id =#{param1} and studio =#{param2}
  </select>

  <!-- 恢复学生 -->
  <select id="recoverLesson" parameterType="com.xue.entity.model.Lesson" resultMap="BaseResultMap">
    update lesson set delete_status = 0,create_time=#{param3} where id =#{param1} and studio =#{param2}
  </select>

  <select id="deleteLessonPackage" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseResultMap">
    update lesson_package set delete_status = 1 where id =#{param1}
  </select>

  <select id="deleteLessonPackageByName" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseResultMap">
    update lesson_package set delete_status = 1 where student_name =#{param1} and studio =#{param2} and subject =#{param3} and campus =#{param4}
  </select>

  <select id="recoverLessonPackageByName" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseResultMap">
    update lesson_package set delete_status = 0 where student_name =#{param1} and studio =#{param2} and subject =#{param3} and campus =#{param4}
  </select>

  <!-- 获取课程表 -->
  <select id="getClassNumber" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseArrangement">
    select id,dayofweek,class_number,duration,limits,photo,studio from schedule_arrangement where studio = #{param1} and dayofweek =#{param2} and duration =#{param3} and delete_status = 0 order by class_number
  </select>

  <!-- 获取课程表 -->
  <select id="getSchedule" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select * from class_schedule where dayofweek(add_date)=#{param1} and studio = #{param2} and subject = #{param3} and campus =#{param4} and student_type ='ordinary' and delete_status = 0 order by duration,subject,class_number
  </select>

  <select id="getScheduleById" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select * from class_schedule where id=#{param1}
  </select>


  <select id="getScheduleCheck" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select * from class_schedule where student_type ='transferred' and add_date=#{param1} and duration = #{param2} and class_number = #{param3} and subject =#{param4} and studio =#{param5} and campus =#{param6} and student_name =#{param7} and delete_status = 0
  </select>

  <select id="getScheduleByDuration" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select * from class_schedule where add_date=#{param1} and duration = #{param2} and class_number = #{param3} and subject =#{param4} and studio =#{param5} and campus =#{param6} and delete_status = 0
  </select>


  <select id="getScheduleCheckArrangement" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select * from class_schedule where student_type= 'ordinary' and dayofweek(add_date)=#{param1} and duration = #{param2} and class_number = #{param3} and subject =#{param4} and studio =#{param5} and campus =#{param6} and student_name =#{param7} and delete_status = 0
  </select>

  <!-- 获取课程表 -->
  <select id="getScheduleAll" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select * from class_schedule where dayofweek(add_date)=#{param1} and studio = #{param2} and campus =#{param3} and student_type ='ordinary' and delete_status = 0 order by duration,subject,class_number
  </select>

  <select id="getScheduleByStudent" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select * from class_schedule where studio = #{param1} and campus =#{param2} and subject =#{param3} and student_name =#{param4} and student_type ='ordinary' and delete_status = 0 ;
  </select>

  <select id="getScheduleByStudentDay" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select * from class_schedule where studio =#{param1} and dayofweek(add_date) =#{param2} and replace(replace(duration,':',''),'-','') =replace(replace(#{param3},':',''),'-','') and class_number =#{param4} and subject =#{param5} and campus =#{param6} and student_name =#{param7}  and student_type ='ordinary' and is_try = 0 and delete_status = 0
  </select>

  <!-- 获取课程表 -->
  <select id="getScheduleAllDistinct" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select distinct add_date,duration,studio,class_number,subject,remind,student_type from class_schedule where dayofweek(add_date)=#{param1} and studio = #{param2} and campus = #{param3} and delete_status = 0 order by duration,subject,class_number
  </select>

  <!-- 获取课程表 -->
  <select id="getScheduleByUser" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select * from class_schedule where dayofweek(add_date)=#{param1} and studio = #{param2} and student_name = #{param3} and campus = #{param4} and delete_status = 0 order by duration,subject,class_number
  </select>

  <select id="getScheduleByUserDurationSt" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select * from class_schedule where dayofweek(add_date)=#{param1} and studio = #{param2} and student_name = #{param3} and campus = #{param4} and SUBSTRING(duration, 1, 5)= #{param5} and delete_status = 0 order by duration,subject,class_number
  </select>

  <!-- 获取课程表 -->
  <select id="getScheduleDetail" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select * from class_schedule where dayofweek(add_date)=#{param1} and duration = #{param2} and studio= #{param3} and class_number= #{param4} and subject= #{param5} and campus =#{param6} and student_type = 'ordinary' and delete_status = 0 and is_try = 0 order by duration
  </select>


  <!-- 获取课程表 -->
  <select id="getScheduleByClassOrdinary" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select * from class_schedule where dayofweek(add_date)=#{param1} and duration = #{param2} and studio= #{param3} and class_number= #{param4} and subject= #{param5} and campus= #{param6} and delete_status = 0 and student_type ='ordinary' order by duration
  </select>

  <!-- 获取课程表 -->
  <select id="getScheduleByClassTransferred" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select * from class_schedule where add_date = #{param1} and duration = #{param2} and studio= #{param3} and class_number= #{param4} and subject= #{param5} and campus= #{param6} and delete_status = 0 and student_type ='transferred' order by duration
  </select>

  <!-- 获取课程表 -->
  <select id="deleteScheduleByDate" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    update class_schedule set delete_status = 1 where dayofweek(add_date)=#{param1} and duration = #{param2} and studio= #{param3} and class_number= #{param4} and subject= #{param5} and student_type ='ordinary' order by duration
  </select>

  <!-- 取消约课 -->
  <select id="cancelBook" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    update class_schedule set delete_status = 1 where add_date=#{param1} and duration = #{param2} and studio= #{param3} and class_number= #{param4} and subject= #{param5} and campus =#{param6} and student_name =#{param7} and student_type ='transferred' order by duration
  </select>

  <select id="deleteBBookeDetail" parameterType="com.xue.entity.model.BookDetail" resultMap="BaseBookDetail">
    update book_detail set delete_status = 1 where id = #{param1}
  </select>

  <!-- 获取课插班生 -->
  <select id="getTransfer" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select id,add_date,age,student_name,duration,create_time,studio,update_time,student_type,class_number,subject from class_schedule where add_date = #{param1} and studio = #{param2} and subject = #{param3} and campus= #{param4} and student_type ='transferred' and delete_status = 0 order by duration
  </select>

  <!-- 获取课插班生 -->
  <select id="getTransferAll" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select id,add_date,age,student_name,duration,create_time,studio,update_time,student_type,class_number,subject from class_schedule where add_date = #{param1} and studio = #{param2} and campus= #{param3} and student_type ='transferred' and delete_status = 0 order by duration
  </select>

  <!-- 获取账本 -->
  <select id="getBookDetail" parameterType="com.xue.entity.model.Book" resultMap="BaseBook">
    select id,studio,type,mark,amount,create_time from account_book where studio = #{param1} and date_format(create_time, '%Y-%m-%d') &lt;= #{param2} and date_format(create_time, '%Y-%m-%d') &gt;= #{param4} and type = #{param3} and delete_status = 0 order by create_time desc
  </select>

  <select id="getBookByStudio" parameterType="com.xue.entity.model.Book" resultMap="BaseBook">
    select id,studio,type,mark,amount,create_time from account_book where mark like "%"#{param1}"%" and type ="收入" and studio = "大雄工作室" and delete_status = 0 order by create_time desc limit 1
  </select>

  <select id="getBookDetailAll" parameterType="com.xue.entity.model.Book" resultMap="BaseBook">
    select id,studio,type,mark,amount,create_time from account_book where studio = #{param1} and date_format(create_time, '%Y-%m-%d') &lt;= #{param2} and date_format(create_time, '%Y-%m-%d') &gt;= #{param3}  and delete_status = 0 order by create_time desc
  </select>

  <select id="getBookDetailByMark" parameterType="com.xue.entity.model.Book" resultMap="BaseBook">
    select id,studio,type,mark,amount,create_time from account_book where mark like "%"#{param1}"%" and date_format(create_time, '%Y-%m-%d') &lt;= #{param2} and date_format(create_time, '%Y-%m-%d') &gt;= #{param3}  and delete_status = 0 order by create_time desc
  </select>

  <!-- 获取课插班生 -->
  <select id="searchBookDetail" parameterType="com.xue.entity.model.Book" resultMap="BaseBook">
    select id,studio,type,mark,amount,create_time from account_book where studio = #{param1} and (create_time like "%"#{param2}"%" or mark like "%"#{param2}"%") and type = #{param3} and delete_status = 0 order by create_time desc
  </select>

  <select id="updateBookMark" parameterType="com.xue.entity.model.Book" resultMap="BaseBook">
    update account_book set mark=#{param2} where id=#{param1}
  </select>

  <select id="updateBookAmount" parameterType="com.xue.entity.model.Book" resultMap="BaseBook">
    update account_book set amount=#{param2} where id=#{param1}
  </select>

  <select id="updateBookCreateTime" parameterType="com.xue.entity.model.Book" resultMap="BaseBook">
    update account_book set create_time=#{param2} where id=#{param1}
  </select>

  <select id="getBookByMonth" parameterType="com.xue.entity.model.BookCount" resultMap="BaseBookCount">
    select date_format(create_time, '%Y-%m') create_time,sum(if(type="收入",amount,0)) income,sum(if(type="支出",amount,0)) expenditure from account_book where studio = #{param1} and campus =#{param2} and delete_status = 0 group by date_format(create_time, '%Y-%m') order by date_format(create_time,'%Y-%m') desc
  </select>

  <select id="getBookByDate" parameterType="com.xue.entity.model.BookCount" resultMap="BaseBookCount">
    select date_format(create_time, '%Y-%m-%d') create_time,sum(if(type="收入",amount,0)) income,sum(if(type="支出",amount,0)) expenditure from account_book where studio = #{param1} and campus =#{param2} and delete_status = 0 group by date_format(create_time, '%Y-%m-%d') order by date_format(create_time,'%Y-%m-%d') desc
  </select>

  <select id="getAnalyzeSignUpByStudent" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select student_name,count(1) sign_count,sum(count) lesson_count from sign_up_record where mark &lt;&gt; '录前消课' and mark not like '%转让%' and studio = #{param1} and campus =#{param2} and delete_status = 0 and count > 0 and date_format(create_time,'%Y-%m-%d') between #{param3} and #{param4} group by student_name
  </select>

  <select id="getAnalyzeSignUpBySubject" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select student_name,count(1) sign_count,sum(count) lesson_count from sign_up_record where mark &lt;&gt; '录前消课' and mark not like '%转让%' and studio = #{param1} and campus =#{param2} and subject =#{param3} and delete_status = 0 and count > 0 and date_format(create_time,'%Y-%m-%d') between #{param4} and #{param5} group by student_name
  </select>


  <select id="getAnalyzeSignUpByMonthByStudent" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select student_name,count(1) sign_count,sum(count) lesson_count from sign_up_record where mark &lt;&gt; '录前消课' and mark not like '%转让%' and studio = #{param1} and campus =#{param2} and delete_status = 0 and count > 0 and date_format(create_time,'%Y-%m') between #{param3} and #{param4} group by student_name
  </select>

  <select id="getAnalyzeSignUpByMonthBySubject" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select student_name,count(1) sign_count,sum(count) lesson_count from sign_up_record where mark &lt;&gt; '录前消课' and mark not like '%转让%' and studio = #{param1} and campus =#{param2} and subject =#{param3} and delete_status = 0 and count > 0 and date_format(create_time,'%Y-%m') between #{param4} and #{param5} group by student_name
  </select>

  <select id="getAnalyzeSignUpDetail" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select * from sign_up_record where mark &lt;&gt; '录前消课' and mark not like '%转让%' and studio = #{param1} and campus =#{param2} and delete_status = 0 and date_format(create_time, '%Y-%m-%d')=#{param3}  order by create_time desc
  </select>

  <select id="getAnalyzeSignUpDetailByStudent" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select * from sign_up_record where mark &lt;&gt; '录前消课' and mark not like '%转让%' and studio = #{param1} and campus =#{param2} and delete_status = 0 and date_format(create_time, '%Y-%m-%d')=#{param3} and student_name=#{param4} order by create_time desc
  </select>

  <select id="getAnalyzeSignUpDetailBySubject" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select * from sign_up_record where mark &lt;&gt; '录前消课' and mark not like '%转让%' and studio = #{param1} and campus =#{param2} and subject =#{param3} and delete_status = 0 and date_format(create_time, '%Y-%m-%d')=#{param4} and student_name=#{param5} order by create_time desc
  </select>

  <select id="getAnalyzeSignUpDetailByMonth" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select * from sign_up_record where mark &lt;&gt; '录前消课' and mark not like '%转让%' and studio = #{param1} and campus =#{param2} and delete_status = 0 and  date_format(create_time, '%Y-%m')=#{param3}  order by create_time desc
  </select>

  <select id="getAnalyzeSignUpDetailByMonthByStudent" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select * from sign_up_record where mark &lt;&gt; '录前消课' and mark not like '%转让%' and studio = #{param1} and campus =#{param2} and delete_status = 0 and  date_format(create_time, '%Y-%m')=#{param3} and student_name=#{param4} order by create_time desc
  </select>

  <select id="getAnalyzeSignUpDetailByMonthBySubject" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select * from sign_up_record where mark &lt;&gt; '录前消课' and mark not like '%转让%' and studio = #{param1} and campus =#{param2} and subject =#{param3} and delete_status = 0 and  date_format(create_time, '%Y-%m')=#{param4} and student_name=#{param5} order by create_time desc
  </select>

  <select id="getAnalyzeTry" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select create_time,count(1) try_count from class_schedule where studio = #{param1} and campus =#{param2} and delete_status = 0 and is_try = 1 and create_time=#{param3}  group by create_time order by create_time desc
  </select>

  <select id="getAnalyzeTryByMonth" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select create_time,count(1) try_count from class_schedule where studio = #{param1} and campus =#{param2} and delete_status = 0 and is_try = 1 and date_format(create_time,'%Y-%m') =#{param3}  group by create_time order by create_time desc
  </select>

  <select id="getAnalyzeLeave" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select date_time create_time,count(1) leave_count from leave_record where studio = #{param1} and campus =#{param2} and delete_status = 0 and leave_type = '请假' and date_time=#{param3}  group by date_time order by date_time desc
  </select>

  <select id="getAnalyzeLeaveByMonth" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select date_format(date_time,'%Y-%m') create_time,count(1) leave_count from leave_record where studio = #{param1} and campus =#{param2} and delete_status = 0 and leave_type = '请假' and date_format(date_time,'%Y-%m')=#{param3}  group by date_format(date_time,'%Y-%m')
  </select>

  <select id="getAnalyzePackage" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select date_format(create_time,'%Y-%m-%d') create_time,count(1) package_count,sum(all_lesson+give_lesson) package_sum_l,sum(total_money+discount_money) package_sum_m from lesson_package where studio = #{param1} and campus =#{param2} and mark not like '%转让%' and delete_status = 0 and date_format(create_time,'%Y-%m-%d')=#{param3} group by date_format(create_time,'%Y-%m-%d')
  </select>

  <select id="getAnalyzePackageByMonth" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select date_format(create_time,'%Y-%m') create_time,count(1) package_count,sum(all_lesson+give_lesson) package_sum_l,sum(total_money+discount_money) package_sum_m from lesson_package where studio = #{param1} and campus =#{param2} and mark not like '%转让%' and delete_status = 0 and date_format(create_time,'%Y-%m')=#{param3} group by date_format(create_time,'%Y-%m')
  </select>

  <select id="getBookByYear" parameterType="com.xue.entity.model.BookCount" resultMap="BaseBookCount">
    select date_format(create_time, '%Y') create_time,sum(if(type="收入",amount,0)) income,sum(if(type="支出",amount,0)) expenditure from account_book where studio = #{param1} and campus =#{param2} and delete_status = 0 group by date_format(create_time, '%Y') order by date_format(create_time,'%Y') desc
  </select>

  <select id="getBookByAll" parameterType="com.xue.entity.model.BookCount" resultMap="BaseBookCount">
    select "汇总" create_time,sum(if(type="收入",amount,0)) income,sum(if(type="支出",amount,0)) expenditure from account_book where studio = #{param1} and campus =#{param2} and delete_status = 0
  </select>

  <insert id="insertPointsRecord" parameterType="com.xue.entity.model.Points">
    insert points_record(student_name,create_time,studio,mark,points,subject,campus) values(#{student_name},#{create_time},#{studio},#{mark},#{points},#{subject},#{campus})
  </insert>

  <!-- 插入账单 -->
  <insert id="insertBook" parameterType="com.xue.entity.model.Book">
    insert account_book(studio,type,mark,amount,create_time,campus) values(#{studio},#{type},#{mark},#{amount},#{create_time},#{campus})
  </insert>

  <insert id="insertAlbum" parameterType="com.xue.entity.model.Album">
    insert album(uuid,studio,campus,student_name,create_time) values(#{uuid},#{studio},#{campus},#{student_name},#{create_time})
  </insert>

  <!-- 插入网页信息 -->
  <insert id="insertWebsite" parameterType="com.xue.entity.model.Website">
    insert website(studio,company,teacher,uuids,create_time,campus) values(#{studio},#{company},#{teacher},#{uuids},#{create_time},#{campus})
  </insert>

  <!-- 插入公约 -->
  <insert id="insertContract" parameterType="com.xue.entity.model.Contract">
    insert contract(studio,campus,contract,create_time,uuid) values(#{studio},#{campus},#{contract},#{create_time},#{uuid})
  </insert>

  <insert id="insertBookDetail" parameterType="com.xue.entity.model.BookDetail">
    insert book_detail(type,mark,amount,create_time,item,openid,update_time,book_name) values(#{type},#{mark},#{amount},#{create_time},#{item},#{openid},#{update_time},#{book_name})
  </insert>

  <!-- 插入沟通记录 -->
  <insert id="insertCommunicateRecord" parameterType="com.xue.entity.model.CommunicateRecord">
    insert communicate_record(student_name,studio,campus,content,openid,create_time,uuids,phone_number) values(#{student_name},#{studio},#{campus},#{content},#{openid},#{create_time},#{uuids},#{phone_number})
  </insert>

  <!-- 插入课评 -->
  <insert id="push" parameterType="com.xue.entity.model.Message">
      insert class_comment(student_name,photo,comment,create_time,class_name,class_target,studio,class_target_bak,duration,positive,discipline,happiness,mp3_url,uuids,campus,vuuid,openid) values(#{student_name},#{photo},#{comment},#{create_time},#{class_name},#{class_target},#{studio},#{class_target_bak},#{duration},#{positive},#{discipline},#{happiness},#{mp3_url},#{uuids},#{campus},#{vuuid},#{openid})
  </insert>

  <!-- 插入帖子 -->
  <insert id="insertPost" parameterType="com.xue.entity.model.Post">
    insert post(openid,uuids,content,studio,create_time,is_private) values(#{openid},#{uuids},#{content},#{studio},#{create_time},#{is_private})
  </insert>

  <!-- 插入回帖 -->
  <insert id="insertPostComment" parameterType="com.xue.entity.model.PostComment">
    insert post_comment(openid,post_id,content,studio,create_time,type,mp3_url) values(#{openid},#{post_id},#{content},#{studio},#{create_time},#{type},#{mp3_url})
  </insert>

  <!-- 插入点赞 -->
  <insert id="insertPostLike" parameterType="com.xue.entity.model.PostLike">
    insert post_like(openid,post_id,studio,create_time) values(#{openid},#{post_id},#{studio},#{create_time})
  </insert>

  <!-- 插入课程表 -->
  <insert id="insertSchedule" parameterType="com.xue.entity.model.Schedule">
    insert class_schedule(add_date,age,student_name,duration,create_time,studio,update_time,student_type,status,class_number,delete_status,subject,campus,is_try,remind,hours) values(#{add_date},#{age},#{student_name},#{duration},#{create_time},#{studio},#{update_time},#{student_type},#{status},#{class_number},0,#{subject},#{campus},#{is_try},#{remind},#{hours})
  </insert>

  <!-- 插入订单 -->
  <insert id="insertOrder" parameterType="com.xue.entity.model.Order">
    insert `order`(nick_name,openid,phone_number,location,goods_name,goods_intro,goods_price,studio,create_time,campus,group_role,goods_id,leader_id,cut_price,type,counts,amount,sub_goods_id) values(#{nick_name},#{openid},#{phone_number},#{location},#{goods_name},#{goods_intro},#{goods_price},#{studio},#{create_time},#{campus},#{group_role},#{goods_id},#{leader_id},#{cut_price},#{type},#{counts},#{amount},#{sub_goods_id})
  </insert>


  <!-- 插入签到记录 -->
  <insert id="insertSignUp" parameterType="com.xue.entity.model.SignUp">
    insert sign_up_record(student_name,create_time,studio,sign_time,mark,duration,count,class_number,subject,teacher,campus,package_id) values(#{student_name},#{create_time},#{studio},#{sign_time},#{mark},#{duration},#{count},#{class_number},#{subject},#{teacher},#{campus},#{package_id})
  </insert>

  <!-- 插入请假记录 -->
  <insert id="insertLeave" parameterType="com.xue.entity.model.Leave">
    insert leave_record(student_name,date_time,studio,create_time,duration,leave_type,mark_leave,subject,campus,makeup_date) values(#{student_name},#{date_time},#{studio},#{create_time},#{duration},#{leave_type},#{mark_leave},#{subject},#{campus},#{makeup_date})
  </insert>

  <!-- 插入课程安排 -->
  <insert id="insertArrangement" parameterType="com.xue.entity.model.Arrangement">
    insert schedule_arrangement(dayofweek,class_number,duration,limits,photo,studio,delete_status,subject,campus,is_repeat,remind,hours,repeat_duration,repeat_week,class_type) values(#{dayofweek},#{class_number},#{duration},#{limits},#{photo},#{studio},0,#{subject},#{campus},#{is_repeat},#{remind},#{hours},#{repeat_duration},#{repeat_week},#{class_type})
  </insert>

  <!-- 插入商品列表 -->
  <insert id="insertGoodsList" parameterType="com.xue.entity.model.GoodsList">
    insert goods_list(goods_name,goods_intro,goods_price,create_time,studio,photo,campus,uuids,is_group,group_price,group_num,cut_step,goods_type,goods_id) values(#{goods_name},#{goods_intro},#{goods_price},#{create_time},#{studio},#{photo},#{campus},#{uuids},#{is_group},#{group_price},#{group_num},#{cut_step},#{goods_type},#{goods_id})
  </insert>

  <!-- 点赞表 -->
  <insert id="insertGoodsLike" parameterType="com.xue.entity.model.GoodsLike">
    insert goods_like(goods_id,openid,studio,campus,create_time) values(#{goods_id},#{openid},#{studio},#{campus},#{create_time})
  </insert>

  <!-- 插入团购列表 -->
  <insert id="insertGroupBuy" parameterType="com.xue.entity.model.GoodsList">
    insert group_buy(goods_id,goods_name,nick_name,openid,create_time,studio) values(#{goods_id},#{goods_name},#{nick_name},#{openid},#{create_time},#{studio})
  </insert>

  <!-- 获取商品列表 -->
  <select id="getGoodsList" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseGoodsList">
    select * from goods_list where studio = #{param1} and goods_type =#{param4} and delete_status = 0 order by create_time desc,id asc limit #{param2},#{param3};
  </select>

  <!-- 获取商品点赞 -->
  <select id="getGoodsLike" parameterType="com.xue.entity.model.GoodsLike" resultMap="BaseGoodsLike">
    select * from goods_like where goods_id = #{param1} and openid =#{param2} and delete_status = 0;
  </select>

  <select id="getGoodsLikeByGoodsId" parameterType="com.xue.entity.model.GoodsLike" resultMap="BaseGoodsLike">
    select * from goods_like where goods_id = #{param1} and delete_status = 0;
  </select>

  <!-- 获取商品列表 -->
  <select id="getGoodsListById" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseGoodsList">
    select * from goods_list where id = #{param1} and delete_status = 0;
  </select>

  <!-- 获取商品列表 -->
  <select id="getSubGoods" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseGoodsList">
    select * from goods_list where goods_id =#{param1} and goods_type =#{param2} and delete_status = 0 order by create_time desc;
  </select>

  <!-- 搜索商品列表 -->
  <select id="getGoodsListSearch" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseGoodsList">
    select * from goods_list where studio = #{param1} and goods_type =#{param5} and delete_status = 0 and (goods_name like "%"#{param4}"%" or goods_intro like "%"#{param4}"%") order by create_time desc,id asc limit #{param2},#{param3};
  </select>

  <!-- 获取团购列表 -->
  <select id="getGroupBuy" parameterType="com.xue.entity.model.GroupBuy" resultMap="BaseGroupBuy">
    select id,goods_id,goods_name,nick_name,openid,create_time,studio from group_buy where studio = #{param1} and goods_id =#{param2} and delete_status = 0 order by create_time desc;
  </select>

  <!-- 查找课程表 -->
  <select id="getArrangement" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseArrangement">
    select * from schedule_arrangement where studio = #{param1} and dayofweek =#{param2} and subject =#{param3} and campus =#{param4} and is_repeat = 0 and delete_status = 0 order by duration
  </select>

  <select id="getArrangementByDay" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseArrangement">
    select * from schedule_arrangement where studio = #{param1} and dayofweek =#{param2} and campus =#{param3} and is_repeat = 0 and delete_status = 0 order by duration
  </select>

  <select id="getArrangementByRepeat" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseArrangement">
    select * from schedule_arrangement where studio = #{param1} and campus =#{param2} and is_repeat = 1 and delete_status = 0 order by duration
  </select>

  <!-- 查找ID订单 -->
  <select id="getOrderByGoodsId" parameterType="com.xue.entity.model.Order" resultMap="BaseOrder">
    select * from `order` where goods_id = #{param1} and type = #{param2} and delete_status = 0 order by create_time desc
  </select>

  <select id="getOrderByGoodsLeader" parameterType="com.xue.entity.model.Order" resultMap="BaseOrder">
    select * from `order` where goods_id = #{param1} and leader_id = #{param2} and type =#{param3} and group_role in ('leader','follower') and delete_status = 0 order by create_time desc
  </select>

  <select id="getOrderById" parameterType="com.xue.entity.model.Order" resultMap="BaseOrder">
    select * from `order` where id = #{param1} and delete_status = 0 order by create_time desc
  </select>

  <!-- 查找全部订单 -->
  <select id="getAllOrderByStudio" parameterType="com.xue.entity.model.Order" resultMap="BaseOrder">
    select * from `order` where studio = #{param1} and delete_status = 0 order by create_time desc limit #{param2},#{param3};
  </select>

  <select id="getAllOrderByOpenid" parameterType="com.xue.entity.model.Order" resultMap="BaseOrder">
    select * from `order` where openid =#{param1} and delete_status = 0 order by create_time desc limit #{param2},#{param3};
  </select>

  <select id="getAllOrderByType" parameterType="com.xue.entity.model.Order" resultMap="BaseOrder">
    select * from `order` where studio =#{param1} and status =#{param2} and delete_status = 0 order by create_time desc limit #{param3},#{param4};
  </select>

  <!-- 查找课程表 -->
  <select id="getArrangementAll" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseArrangement">
    select * from schedule_arrangement where studio = #{param1} and dayofweek =#{param2} and campus =#{param3} and delete_status = 0 order by duration
  </select>

  <!-- 查找课程表 -->
  <select id="getArrangementByDate" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseArrangement">
    select * from schedule_arrangement where studio = #{param1} and dayofweek =#{param2} and class_number =#{param3} and duration =#{param4} and subject =#{param5} and campus =#{param6} and delete_status = 0 order by duration
  </select>

  <!-- 查找请假记录 -->
  <select id="getLeaveRecord" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    select * from leave_record where student_name =#{param1} and studio = #{param2} and leave_type = #{param3} and subject = #{param4} and campus = #{param5} and delete_status = 0 order by student_name,date_time desc
  </select>

  <!-- 按天查找请假记录 -->
  <select id="getLeaveRecordByDate" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    select * from leave_record where student_name =#{param1} and studio =#{param2} and subject =#{param3} and campus =#{param4} and date_time =#{param5} and leave_type = '请假' and delete_status = 0 order by date_time desc
  </select>

  <select id="getLeaveRecordById" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    select * from leave_record where id =#{param1} and delete_status = 0
  </select>


  <select id="getLeaveRecordByStatus" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    select * from leave_record where student_name =#{param1} and studio = #{param2} and subject = #{param3} and campus = #{param4} and delete_status = 0 and ending_status = 0 order by date_time desc
  </select>

  <!-- 查找请假记录 -->
  <select id="getLeaveRecordAll" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    select * from leave_record where studio = #{param2} and leave_type = #{param3} and subject = #{param4} and campus = #{param5} and delete_status = 0 order by date_time desc
  </select>

  <!-- 发放礼物记录 -->
  <insert id="insertGift" parameterType="com.xue.entity.model.Gift">
    insert gift_record(student_name,gift_name,create_time,expired_time,studio,gift_amount,status,campus,gift_id,openid,price,uuids,type) values(#{student_name},#{gift_name},#{create_time},#{expired_time},#{studio},#{gift_amount},#{status},#{campus},#{gift_id},#{openid},#{price},#{uuids},#{type})
  </insert>

  <!-- 礼品列表 -->
  <insert id="insertGiftList" parameterType="com.xue.entity.model.GiftList">
    insert gift_list(gift_name,studio,campus,create_time,uuids,coins,type,price,coupon_type,send_type) values(#{gift_name},#{studio},#{campus},#{create_time},#{uuids},#{coins},#{type},#{price},#{coupon_type},#{send_type})
  </insert>

  <!-- 查找签到记录 -->
  <select id="getSignUp" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select * from sign_up_record where student_name =#{param1} and delete_status = 0 and studio = #{param2} and subject = #{param3} and campus = #{param4}  order by create_time desc
  </select>

  <!-- 按不同场景查找礼物清单 -->
  <select id="getGiftListByCouponType" parameterType="com.xue.entity.model.GiftList" resultMap="BaseGiftList">
    select * from gift_list where delete_status = 0 and studio = #{param1} and campus = #{param2} and coupon_type =#{param3} order by create_time desc
  </select>

  <!-- 查找礼物清单 -->
  <select id="getGiftList" parameterType="com.xue.entity.model.GiftList" resultMap="BaseGiftList">
    select * from gift_list where delete_status = 0 and studio = #{param1} and campus = #{param2}  order by create_time desc
  </select>

  <select id="getGiftListById" parameterType="com.xue.entity.model.GiftList" resultMap="BaseGiftList">
    select * from gift_list where delete_status = 0 and id = #{param1} order by create_time desc
  </select>

  <!-- 按课包id查找签到记录 -->
  <select id="getSignUpByPackageId" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select * from sign_up_record where student_name =#{param1} and delete_status = 0 and studio = #{param2} and subject = #{param3} and campus = #{param4} and package_id = #{param5} order by create_time desc
  </select>

  <!-- 按id查找签到记录 -->
  <select id="getSignUpById" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select * from sign_up_record where id =#{param1} and delete_status = 0
  </select>

  <!-- 查找全部签到记录 -->
  <select id="getSignUpByAll" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select * from sign_up_record where delete_status = 0 and studio = #{param1} and campus = #{param2}  order by student_name
  </select>

  <select id="getSignUpByBacth" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select * from sign_up_record where student_name =#{param1} and delete_status = 0 and studio = #{param2} and subject = #{param3} and campus = #{param4} and mark = '录前消课' order by create_time desc
  </select>

  <!-- 查找签到记录 -->
  <select id="getStudentByTeacher" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select * from sign_up_record where delete_status = 0 and studio = #{param1} and teacher = #{param2}  order by create_time desc
  </select>

  <update id="updateSignUpDetail" parameterType="com.xue.entity.model.SignUp">
    update sign_up_record set teacher=#{teacher},package_id=#{package_id},mark=#{mark},count=#{count} where id=#{id}
  </update>

  <!-- 查找签到记录 -->
  <select id="getStudentByTeacherByDuration" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select * from sign_up_record where delete_status = 0 and studio = #{param1} and teacher = #{param2} and sign_time between #{param3} and #{param4} order by sign_time desc
  </select>

  <!-- 查找卡签记录 -->
  <select id="getCardRecordByTeacherByDuration" parameterType="com.xue.entity.model.CardRecord" resultMap="BaseCardRecord">
    select * from card_record where delete_status = 0 and studio = #{param1} and teacher = #{param2} and create_time between #{param3} and #{param4} order by create_time desc
  </select>

  <!-- 分页查找签到记录 -->
  <select id="getStudentByTeacherByDurationByPage" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select * from sign_up_record where delete_status = 0 and studio = #{param1} and teacher = #{param2} and sign_time between #{param3} and #{param4} order by sign_time desc limit #{param5},#{param6};
  </select>

  <!-- 分页查找卡签记录 -->
  <select id="getCardRecordByTeacherByDurationByPage" parameterType="com.xue.entity.model.CardRecord" resultMap="BaseCardRecord">
    select * from card_record where delete_status = 0 and studio = #{param1} and teacher = #{param2} and create_time between #{param3} and #{param4} order by create_time desc limit #{param5},#{param6};
  </select>

  <!-- 查找签到记录 -->
  <select id="getSignUpByDate" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select * from sign_up_record where student_name =#{param1} and delete_status = 0 and studio = #{param2} and create_time=#{param3} and campus =#{param4} and subject =#{param5} order by create_time
  </select>

  <!-- 按时间区间查找签到记录 -->
  <select id="getSignUpByBetween" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select * from sign_up_record where student_name =#{param1} and delete_status = 0 and studio = #{param2} and campus =#{param3} and subject =#{param4} and create_time &gt;=#{param5} and create_time &lt;#{param6} order by create_time
  </select>

  <select id="getCardRecordByBetween" parameterType="com.xue.entity.model.CardRecord" resultMap="BaseCardRecord">
    select * from card_record where student_name =#{param1} and card_id =#{param2} and studio =#{param3} and campus =#{param4} and subject =#{param5} and create_time &gt;=#{param6} and create_time &lt;#{param7} and delete_status = 0  order by create_time
  </select>

  <select id="getSignUpDetailByMonthStudent" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select * from sign_up_record where student_name =#{param1} and delete_status = 0 and studio = #{param2} and date_format(create_time,'%Y-%m') =#{param3} and campus =#{param4} and subject =#{param5} and mark &lt;&gt; '录前消课' order by create_time
  </select>

  <select id="getTryDetailByMonthStudent" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select * from class_schedule where delete_status = 0 and studio = #{param1} and date_format(create_time,'%Y-%m') =#{param2} and campus =#{param3} and is_try = 1 order by create_time
  </select>

  <select id="getLeaveDetailByMonthStudent" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    select * from leave_record where student_name =#{param1} and delete_status = 0 and studio = #{param2} and date_format(date_time,'%Y-%m') =#{param3} and campus =#{param4} and subject =#{param5} order by create_time
  </select>

  <!-- 查找签到记录 -->
  <select id="getSignUpByDateDuration" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select * from sign_up_record where student_name =#{param1} and studio = #{param2} and date_format(create_time, '%Y-%m-%d')=#{param3} and delete_status = 0 and duration=#{param4} and campus =#{param5} and subject =#{param6} order by create_time desc
  </select>

  <!-- 查找请假记录 -->
  <select id="getLeaveByDateDuration" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    select * from leave_record where student_name =#{param1} and studio = #{param2} and date_time=#{param3} and duration=#{param4} and delete_status = 0 order by create_time
  </select>

  <!-- 查找课评记录 -->
  <select id="getCommentByDate" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select student_name,duration from class_comment where class_target_bak =#{param5} and student_name =#{param1} and studio = #{param2} and date_format(create_time, '%Y-%m-%d') = #{param3} and campus =#{param4} and delete_status = 0  order by create_time
  </select>

  <!-- 查找课评记录 -->
  <select id="getCommentByDateDuration" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select student_name,duration from class_comment where class_target_bak =#{param6} and student_name =#{param1} and studio = #{param2} and date_format(create_time, '%Y-%m-%d') = #{param3} and cast(replace(replace(duration,':',''),'-','') as signed)=cast(replace(replace(#{param4},':',''),'-','') as signed) and campus =#{param5} and delete_status = 0 order by create_time
  </select>

  <!-- 查找礼物记录 -->
  <select id="getGift" parameterType="com.xue.entity.model.Gift" resultMap="BaseGift">
    select * from gift_record where student_name =#{param1} and studio = #{param2} order by expired_time desc
  </select>

  <!-- 查找个人优惠券 -->
  <select id="getGiftByOpenid" parameterType="com.xue.entity.model.Gift" resultMap="BaseGift">
    select * from gift_record where openid =#{param1} and studio = #{param2} and campus = #{param3} order by expired_time desc
  </select>

  <!-- 查找个人优惠券 -->
  <select id="getGiftByOpenidGiftid" parameterType="com.xue.entity.model.Gift" resultMap="BaseGift">
    select * from gift_record where openid =#{param1} and gift_id = #{param2}
  </select>

  <select id="getGiftById" parameterType="com.xue.entity.model.Gift" resultMap="BaseGift">
    select * from gift_record where id =#{param1}
  </select>

  <select id="getGiftByGiftId" parameterType="com.xue.entity.model.Gift" resultMap="BaseGift">
    select * from gift_record where gift_id =#{param1} and studio = #{param2} and campus = #{param3}
  </select>

  <select id="getGiftByGiftIdStudent" parameterType="com.xue.entity.model.Gift" resultMap="BaseGift">
    select * from gift_record where gift_id =#{param1} and studio = #{param2} and campus = #{param3} and student_name=#{param4}
  </select>

  <!-- 更新课时 -->
  <update id="updateSchedule" parameterType="com.xue.entity.model.Schedule">
    update class_schedule set update_time=#{update_time} where student_name=#{student_name} and studio = #{studio} and campus = #{campus}
  </update>

  <!-- 更新课时 -->
  <update id="updateScheduleById" parameterType="com.xue.entity.model.Schedule">
    update class_schedule set add_date=#{add_date},duration=#{duration},class_number=#{class_number},subject=#{subject},update_time=#{update_time} where id = #{id}
  </update>

  <!-- 更新提醒与否 -->
  <update id="updateRemind" parameterType="com.xue.entity.model.Arrangement">
    update schedule_arrangement set remind=#{param2} where id=#{param1}
  </update>

  <!-- 更新名字 -->
  <update id="updateScheduleName" parameterType="com.xue.entity.model.Schedule">
    update class_schedule set student_name=#{param1} where student_name=#{param2} and studio =#{param3} and campus =#{param4} and subject =#{param5}
  </update>

  <update id="updateCommentName" parameterType="com.xue.entity.model.Message">
    update class_comment set student_name=#{param1} where student_name=#{param2} and studio =#{param3} and campus =#{param4}
  </update>

  <update id="updateGiftRecordName" parameterType="com.xue.entity.model.Gift">
    update gift_record set student_name=#{param1} where student_name=#{param2} and studio = #{param3} and campus =#{param4} and subject =#{param5}
  </update>

  <update id="updateLessonName" parameterType="com.xue.entity.model.Lesson">
    update lesson set student_name=#{param1} where student_name=#{param2} and studio = #{param3} and campus =#{param4} and subject =#{param5}
  </update>

  <update id="updateSignUpRecordName" parameterType="com.xue.entity.model.SignUp">
    update sign_up_record set student_name=#{param1} where student_name=#{param2} and studio = #{param3} and campus =#{param4} and subject =#{param5}
  </update>

  <update id="updateLessonPackageName" parameterType="com.xue.entity.model.LessonPackage">
    update lesson_package set student_name=#{param1} where student_name=#{param2} and studio = #{param3} and campus =#{param4} and subject =#{param5}
  </update>

  <update id="updateLessonPackageByStudent" parameterType="com.xue.entity.model.LessonPackage">
    update lesson_package set total_money=#{param1},discount_money=#{param2},all_lesson=#{param3},give_lesson=#{param4} where student_name=#{param5} and studio = #{param6} and campus =#{param7} and subject =#{param8}
  </update>

  <!-- 更新课评 -->
  <update id="updateComment" parameterType="com.xue.entity.model.Message">
    update class_comment set class_target=#{class_target},comment=#{comment},create_time=#{create_time} where id=#{id} and studio = #{studio}
  </update>

  <!-- 更新课评 -->
  <update id="updateDetailPhoto" parameterType="com.xue.entity.model.Message">
    update class_comment set photo=#{photo},uuids=#{uuids} where id=#{id} and studio = #{studio}
  </update>

  <!-- 更新ppt -->
  <update id="updatePptMenu" parameterType="com.xue.entity.model.PptMenu">
    update ppt_menu set ppt_name=#{ppt_name},category=#{category},introduce=#{introduce},uuids=#{uuids} where id=#{id}
  </update>

  <!-- 更新课时 -->
  <update id="updateGift" parameterType="com.xue.entity.model.Gift">
    update gift_record set status=#{status},create_time=#{create_time},expired_time=#{expired_time} where id=#{id}
  </update>

  <!-- 插入商户 -->
  <insert id="insertMerchant" parameterType="com.xue.entity.model.Merchant">
    insert merchant(mchid,appid,openid,studio,campus,create_time,sub_mchid,sub_appid,type) values(#{mchid},#{appid},#{openid},#{studio},#{campus},#{create_time},#{sub_mchid},#{sub_appid},#{type})
  </insert>

  <!-- 插入客户信息 -->
  <insert id="insertUser" parameterType="com.xue.entity.model.User">
    insert user(nick_name,student_name,role,openid,create_time,avatarurl,studio,user_type,expired_time,comment_style,send_time,display,cover,campus,phone_number,location,remind_type,hours,unionid,openid_qr) values(#{nick_name},#{student_name},#{role},#{openid},#{create_time},#{avatarurl},#{studio},#{user_type},#{expired_time},#{comment_style},#{send_time},#{display},#{cover},#{campus},#{phone_number},#{location},#{remind_type},#{hours},#{unionid},#{openid_qr})
  </insert>

  <insert id="insertRestaurantUser" parameterType="com.xue.entity.model.RestaurantUser">
    insert restaurant_user(nick_name,role,openid,create_time,avatarurl,restaurant,expired_time) values(#{nick_name},#{role},#{openid},#{create_time},#{avatarurl},#{restaurant},#{expired_time})
  </insert>

  <insert id="insertCard" parameterType="com.xue.entity.model.Card">
    insert card(student_name,subject,mark,campus,studio,start_date,end_date,create_time,type,uuid,price) values(#{student_name},#{subject},#{mark},#{campus},#{studio},#{start_date},#{end_date},#{create_time},#{type},#{uuid},#{price})
  </insert>

  <insert id="insertCardRecord" parameterType="com.xue.entity.model.CardRecord">
    insert card_record(student_name,subject,mark,campus,studio,card_id,create_time,duration,teacher) values(#{student_name},#{subject},#{mark},#{campus},#{studio},#{card_id},#{create_time},#{duration},#{teacher})
  </insert>

  <insert id="insertBookUser" parameterType="com.xue.entity.model.BookUser">
    insert book_user(nick_name,role,openid,create_time,avatarurl,expired_time) values(#{nick_name},#{role},#{openid},#{create_time},#{avatarurl},#{expired_time})
  </insert>

  <select id="getCard" parameterType="com.xue.entity.model.Card" resultMap="BaseCard">
    select * from card where studio =#{param1} and campus =#{param2} and student_name =#{param3} and subject =#{param4} and delete_status = 0 order by create_time desc
  </select>

  <select id="getCardById" parameterType="com.xue.entity.model.Card" resultMap="BaseCard">
    select * from card where id =#{param1}
  </select>

  <select id="getCardRecord" parameterType="com.xue.entity.model.CardRecord" resultMap="BaseCardRecord">
    select * from card_record where student_name =#{param1} and card_id =#{param2} and studio =#{param3} and campus =#{param4} and subject =#{param5} and delete_status = 0 order by create_time desc
  </select>

  <select id="getUser" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where openid =#{param1} and delete_status = 0 order by id desc limit 1
  </select>

  <select id="getRestaurantUser" parameterType="com.xue.entity.model.RestaurantUser" resultMap="BaseRestaurantUser">
    select * from restaurant_user where openid =#{param1} and delete_status = 0 order by id desc limit 1
  </select>

  <select id="getRestaurantUserById" parameterType="com.xue.entity.model.RestaurantUser" resultMap="BaseRestaurantUser">
    select * from restaurant_user where id =#{param1} and delete_status = 0 order by id desc limit 1
  </select>


  <select id="getPptMenu" parameterType="com.xue.entity.model.PptMenu" resultMap="BasePptMenu">
    select * from ppt_menu where studio =#{param1} and campus =#{param2} and category =#{param3} and delete_status = 0 order by create_time desc limit #{param4},#{param5}
  </select>

  <select id="getPptMenuById" parameterType="com.xue.entity.model.PptMenu" resultMap="BasePptMenu">
    select * from ppt_menu where id =#{param1} and delete_status = 0 order by create_time
  </select>

  <select id="getPptMenuCategory" parameterType="com.xue.entity.model.PptMenu" resultMap="BasePptMenu">
    select category from ppt_menu where studio =#{param1} and campus =#{param2} and delete_status = 0 group by category
  </select>

  <select id="getBookUser" parameterType="com.xue.entity.model.BookUser" resultMap="BaseBookUser">
    select * from book_user where openid =#{param1} and delete_status = 0 order by id desc limit 1
  </select>

  <select id="getBookUserById" parameterType="com.xue.entity.model.BookUser" resultMap="BaseBookUser">
    select * from book_user where id =#{param1} and delete_status = 0 order by id desc limit 1
  </select>

  <select id="getBBookDetail" parameterType="com.xue.entity.model.BookDetail" resultMap="BaseBookDetail">
    select * from book_detail where openid =#{param1} and create_time =#{param2} and book_name =#{param3} and delete_status = 0 order by update_time desc
  </select>

  <select id="getRestaurantUserAll" parameterType="com.xue.entity.model.RestaurantUser" resultMap="BaseRestaurantUser">
    select * from restaurant_user where delete_status = 0 order by restaurant,role
  </select>

  <select id="getRestaurantUserByShop" parameterType="com.xue.entity.model.RestaurantUser" resultMap="BaseRestaurantUser">
    select * from restaurant_user where restaurant =#{param1} and delete_status = 0 order by restaurant,role
  </select>

  <select id="getRestaurantOrderByOpenid" parameterType="com.xue.entity.model.RestaurantOrder" resultMap="BaseRestaurantOrder">
    select * from restaurant_order where openid =#{param1} and delete_status = 0 order by create_time desc
  </select>

  <select id="getRestaurantOrderByShop" parameterType="com.xue.entity.model.RestaurantOrder" resultMap="BaseRestaurantOrder">
    select * from restaurant_order where restaurant =#{param1} and delete_status = 0 order by create_time desc
  </select>

  <select id="getRestaurantOrderById" parameterType="com.xue.entity.model.RestaurantOrder" resultMap="BaseRestaurantOrder">
    select * from restaurant_order where id =#{param1} and delete_status = 0 order by create_time desc
  </select>

  <select id="getRestaurantCategory" parameterType="com.xue.entity.model.Menu" resultMap="BaseRestaurantMenu">
    select distinct category from restaurant_menu where restaurant =#{param1} and delete_status = 0 order by category
  </select>

  <select id="getRestaurantMenu" parameterType="com.xue.entity.model.Menu" resultMap="BaseRestaurantMenu">
    select * from restaurant_menu where restaurant =#{param1} and delete_status = 0 order by category
  </select>

  <select id="getRestaurantMenuById" parameterType="com.xue.entity.model.Menu" resultMap="BaseRestaurantMenu">
    select * from restaurant_menu where id =#{param1} and delete_status = 0 order by category
  </select>

  <select id="getUserSendTime" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where studio =#{param1} and role ='boss' and delete_status = 0 order by create_time desc limit 1
  </select>

  <select id="getUserByOpenid" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where openid =#{param1} and delete_status = 0 order by create_time desc
  </select>

  <select id="getUserById" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where id =#{param1}
  </select>

  <select id="getUserByUnionid" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where unionid =#{param1} and delete_status = 0 order by create_time desc
  </select>

  <select id="getUserByUserType" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where user_type =#{param1} and delete_status = 0 order by create_time desc
  </select>


  <select id="getUserByChooseLesson" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where lessons like "%"#{param1}"%" and role in ('boss','teacher') and studio =#{param2}  and delete_status = 0;
  </select>

  <select id="getUserByStudent" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where student_name =#{param1} and studio =#{param2} and delete_status = 0 order by create_time desc
  </select>

  <select id="getUserByStudentOpenid" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where student_name =#{param1} and studio =#{param2} and openid =#{param3} and delete_status = 0 order by create_time desc
  </select>

  <select id="getUserByNickStudio" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where (role like "%"#{param1}"%" or nick_name like "%"#{param1}"%" or campus like "%"#{param1}"%" or student_name like "%"#{param1}"%") and studio =#{param2} and delete_status = 0 order by role
  </select>

  <select id="getUserByNickStudioEq" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where (nick_name = #{param1} or phone_number =#{param1}) and studio =#{param2} and delete_status = 0 order by create_time desc limit 1
  </select>

  <select id="getUserByNickName" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where (nick_name like "%"#{nick_name}"%" or student_name like "%"#{nick_name}"%" or studio like "%"#{nick_name}"%") and delete_status = 0 order by role
  </select>

  <select id="getUserByStudio" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where studio =#{param1} and campus =#{param2} and delete_status = 0 order by role
  </select>

  <select id="getAllUserByStudio" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where studio =#{param1} and delete_status = 0 order by role
  </select>

  <select id="getAllUserByStudioByPage" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where studio =#{param1} and delete_status = 0 order by role asc,id asc limit #{param2},#{param3};
  </select>

  <select id="getBossByStudio" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where  studio =#{param1} and role in ('boss','teacher') and delete_status = 0 order by role
  </select>

  <select id="getBossByStudioOnly" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where  studio =#{param1} and role in ('boss') and delete_status = 0 order by create_time
  </select>

  <select id="getAllUser" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where delete_status = 0 and studio &lt;&gt; '请录入工作室' order by remind_type
  </select>

  <select id="getAllBoss" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where role in ('boss') and delete_status = 0 order by remind_type desc
  </select>

  <select id="getUserByRole" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where role in(#{param1}) and delete_status = 0 order by create_time desc
  </select>

  <select id="getUserByOpenidQr" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where openid_qr = #{param1} and delete_status = 0 order by create_time desc limit #{param2},#{param3};
  </select>

  <select id="getUserByOpenidQrAll" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where openid_qr &lt;&gt; 'noid' and delete_status = 0 order by create_time desc limit #{param1},#{param2};
  </select>

  <select id="getWebsite" parameterType="com.xue.entity.model.Website" resultMap="BaseWebsite">
    select * from website where studio =#{param1} and campus =#{param2}  and delete_status = 0;
  </select>

  <!-- 更新网站公司 -->
  <update id="updateWebsiteCompany" parameterType="com.xue.entity.model.Website">
    update website set company=#{param2} where id =#{param1}  and delete_status = 0
  </update>

  <!-- 更新礼品详情 -->
  <update id="updateGiftDetail" parameterType="com.xue.entity.model.GiftList">
    update gift_list set gift_name=#{gift_name},mark=#{mark},price=#{price},amount=#{amount} where id =#{id} and delete_status = 0
  </update>

  <!-- 更新卡图片 -->
  <update id="updateCardUuid" parameterType="com.xue.entity.model.Card">
    update card set uuid=#{param2} where id =#{param1} and delete_status = 0
  </update>

  <!-- 更新卡图片 -->
  <update id="updateCardPrice" parameterType="com.xue.entity.model.Card">
    update card set price=#{param2} where id =#{param1} and delete_status = 0
  </update>

  <!-- 更新卡类 -->
  <update id="updateCardType" parameterType="com.xue.entity.model.Card">
    update card set type=#{param2} where id =#{param1} and delete_status = 0
  </update>

  <!-- 更新卡备注 -->
  <update id="updateCardMark" parameterType="com.xue.entity.model.Card">
    update card set mark=#{param2} where id =#{param1} and delete_status = 0
  </update>

  <!-- 更新卡开始时间 -->
  <update id="updateCardStartDate" parameterType="com.xue.entity.model.Card">
    update card set start_date=#{param2} where id =#{param1} and delete_status = 0
  </update>

  <!-- 更新卡结束时间 -->
  <update id="updateCardEndDate" parameterType="com.xue.entity.model.Card">
    update card set end_date=#{param2} where id =#{param1} and delete_status = 0
  </update>

  <!-- 更新网站师资 -->
  <update id="updateWebsiteTeacher" parameterType="com.xue.entity.model.Website">
    update website set teacher=#{param2} where id =#{param1} and delete_status = 0
  </update>

  <!-- 更新网站图片 -->
  <update id="updateWebsiteUuids" parameterType="com.xue.entity.model.Website">
    update website set uuids=#{param2} where id =#{param1} and delete_status = 0
  </update>

  <!-- 更新工作室 -->
  <update id="updateUser" parameterType="com.xue.entity.model.User">
    update user set studio=#{studio},campus=#{campus} where openid = #{openid} and delete_status = 0
  </update>

  <update id="updateOpenidById" parameterType="com.xue.entity.model.User">
    update user set openid =#{param2} where openid=#{param1} and delete_status = 0
  </update>

  <!-- 更新头像 -->
  <update id="updateAvatar" parameterType="com.xue.entity.model.User">
    update user set avatarurl=#{avatarurl} where openid = #{openid}
  </update>

  <update id="updateLessonAgeById" parameterType="com.xue.entity.model.Lesson">
    update lesson set age=#{param2} where id = #{param1}
  </update>

  <update id="updateLessonSchoolById" parameterType="com.xue.entity.model.Lesson">
    update lesson set school=#{param2} where id = #{param1}
  </update>

  <update id="updateLessonPhoneNumberById" parameterType="com.xue.entity.model.Lesson">
    update lesson set phone_number=#{param2} where id = #{param1}
  </update>

  <update id="updateLessonUrgePaymentById" parameterType="com.xue.entity.model.Lesson">
    update lesson set urge_payment=#{param2} where id = #{param1}
  </update>

  <update id="updateLessonLocationById" parameterType="com.xue.entity.model.Lesson">
    update lesson set location=#{param2} where id = #{param1}
  </update>

  <update id="updateLessonBirthdateById" parameterType="com.xue.entity.model.Lesson">
    update lesson set birthdate=#{param2} where id = #{param1}
  </update>

  <update id="updateLessonAvatar" parameterType="com.xue.entity.model.Lesson">
    update lesson set uuid=#{param2} where id = #{param1}
  </update>

  <update id="updateLessonStudentNameById" parameterType="com.xue.entity.model.Lesson">
    update lesson set student_name=#{param2} where id = #{param1}
  </update>

  <update id="updateLessonSubjectById" parameterType="com.xue.entity.model.Lesson">
    update lesson set subject=#{param2} where id = #{param1}
  </update>

  <update id="updateLessonCampusById" parameterType="com.xue.entity.model.Lesson">
    update lesson set campus=#{param2} where id = #{param1}
  </update>

  <update id="updateLessonRelatedById" parameterType="com.xue.entity.model.Lesson">
    update lesson set related_id=#{param2},total_amount=#{param3},left_amount=#{param4} where id = #{param1}
  </update>

  <update id="updateBookAvatar" parameterType="com.xue.entity.model.BookUser">
    update book_user set avatarurl=#{avatarurl} where openid = #{openid}
  </update>

  <update id="updateBookNickName" parameterType="com.xue.entity.model.BookUser">
    update book_user set nick_name=#{nick_name} where openid = #{openid}
  </update>

  <update id="updateBookDetailBookName" parameterType="com.xue.entity.model.BookDetail">
    update book_detail set book_name=#{param2} where book_name = #{param1}
  </update>

  <update id="updateBookLogo" parameterType="com.xue.entity.model.BookUser">
    update book_user set logo=#{logo} where openid = #{openid}
  </update>

  <!--  更新商店用户信息-->
  <update id="updateRestaurantUser" parameterType="com.xue.entity.model.RestaurantUser">
    update restaurant_user set nick_name=#{nick_name},logo=#{logo},restaurant=#{restaurant},role=#{role},avatarurl=#{avatarurl},phone_number=#{phone_number},location=#{location} where openid = #{openid}
  </update>

  <!--  更新订单状态-->
  <update id="updateRestaurantOrderStatus" parameterType="com.xue.entity.model.RestaurantOrder">
    update restaurant_order set status=#{param2} where id = #{param1}
  </update>

  <update id="updateBookRole" parameterType="com.xue.entity.model.BookUser">
    update book_user set role=#{role} where openid = #{openid}
  </update>

  <update id="updateBookName" parameterType="com.xue.entity.model.BookUser">
    update book_user set book_name=#{book_name} where id = #{id}
  </update>

  <update id="updateBudget" parameterType="com.xue.entity.model.BookUser">
    update book_user set budget=#{budget} where id = #{id}
  </update>

  <update id="updateRestaurantMenuImage" parameterType="com.xue.entity.model.Menu">
    update restaurant_menu set food_image=#{food_image} where id = #{id}
  </update>

  <update id="deleteRestaurantOrder" parameterType="com.xue.entity.model.RestaurantOrder">
    update restaurant_order set delete_status = 1 where id = #{param1}
  </update>

  <update id="deleteRestaurantFood" parameterType="com.xue.entity.model.Menu">
    update restaurant_menu set delete_status = 1 where id = #{param1}
  </update>

  <update id="deleteRestaurantUser" parameterType="com.xue.entity.model.RestaurantUser">
    update restaurant_user set delete_status = 1 where id = #{param1}
  </update>

  <update id="deletePptMenu" parameterType="com.xue.entity.model.PptMenu">
    update ppt_menu set delete_status = 1 where id = #{param1}
  </update>

  <!-- 恢复已删除用户 -->
  <update id="updateUserDelete" parameterType="com.xue.entity.model.User">
    update user set studio=#{studio},create_time=#{create_time},campus=#{campus},delete_status=0 where openid = #{openid} and delete_status=1 and student_name = #{student_name}
  </update>

  <update id="updateUserBackUrl" parameterType="com.xue.entity.model.User">
    update user set back_uuid=#{back_uuid} where openid = #{openid} and delete_status=0
  </update>

  <update id="updateClassSendStatus" parameterType="com.xue.entity.model.Schedule">
    update class_schedule set send_status=#{param2} where id = #{param1} and delete_status=0
  </update>

  <update id="updateClassSendStatusByStudio" parameterType="com.xue.entity.model.Schedule">
    update class_schedule set send_status=#{param2} where studio = #{param1} and delete_status=0
  </update>

  <update id="updateCommunicateContent" parameterType="com.xue.entity.model.CommunicateRecord">
    update communicate_record set content=#{param2} where id =#{param1} and delete_status=0
  </update>

  <update id="updateCommunicatePhoneNumber" parameterType="com.xue.entity.model.CommunicateRecord">
    update communicate_record set phone_number=#{param2} where id =#{param1} and delete_status=0
  </update>

  <update id="updateCommunicateUuids" parameterType="com.xue.entity.model.CommunicateRecord">
    update communicate_record set uuids=#{param2} where id =#{param1} and delete_status=0
  </update>

  <update id="updateCommunicateStatus" parameterType="com.xue.entity.model.CommunicateRecord">
    update communicate_record set status=#{param2} where id =#{param1} and delete_status=0
  </update>

  <!-- 更新选课 -->
  <update id="updateBossLessons" parameterType="com.xue.entity.model.User">
    update user set lessons=#{lessons} where openid = #{openid}
  </update>

  <!-- 更新课评风格 -->
  <update id="updateComentStyle" parameterType="com.xue.entity.model.User">
    update user set comment_style=#{comment_style} where studio = #{studio}
  </update>

  <update id="updateIsOpen" parameterType="com.xue.entity.model.User">
    update user set is_open=#{is_open} where studio = #{studio}
  </update>

  <update id="updateIsOpenSingle" parameterType="com.xue.entity.model.User">
    update user set is_open=#{is_open} where studio = #{studio} and openid =  #{openid}
  </update>

  <!-- 更新提醒时间 -->
  <update id="updateSendTime" parameterType="com.xue.entity.model.User">
    update user set send_time=#{send_time},remind_type=#{remind_type} where studio = #{studio}
  </update>

  <update id="updateHours" parameterType="com.xue.entity.model.User">
    update user set hours=#{hours},remind_type=#{remind_type} where studio = #{studio}
  </update>

  <update id="updateScheduleHours" parameterType="com.xue.entity.model.Arrangement">
    update  schedule_arrangement set hours=#{param2} where studio = #{param1}
  </update>

  <select id="getStudio" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select distinct studio from user where delete_status = 0 order by studio
  </select>

  <select id="getStudioBoss" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select distinct studio from user where delete_status = 0 and (role = #{param1} or member = #{param1}) order by studio
  </select>

  <select id="getUserIsSquare" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select distinct studio,theme from user where is_square = 1 and delete_status = 0 and (role = #{param1} or member = #{param1}) order by studio
  </select>

  <select id="getSubjectByStudio" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select distinct subject from lesson where delete_status = 0 and studio =#{param1} and campus =#{param2}
  </select>

  <select id="getArrangements" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseArrangement">
    select * from schedule_arrangement where studio =#{param1} and campus =#{param2} and delete_status = 0 order by dayofweek,duration,subject
  </select>

  <select id="getArrangementsByStudio" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseArrangement">
    select * from schedule_arrangement where studio =#{param1} and delete_status = 0;
  </select>

  <select id="getArrangementById" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseArrangement">
    select * from schedule_arrangement where studio =#{param1} and id =#{param2} and delete_status = 0
  </select>

  <select id="getOpenidByNick" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select distinct openid from user where student_name =#{param1} and studio = #{param2} and delete_status = 0
  </select>

  <!-- 插入课时 -->
  <insert id="insertNote" parameterType="com.xue.entity.model.Lesson">
    insert class_note(subject,student_name,studio,create_time,note_content,campus) values(#{subject},#{student_name},#{studio},#{create_time},#{note_content},#{campus})
  </insert>

  <insert id="insertRestaurantMenu" parameterType="com.xue.entity.model.Menu">
    insert restaurant_menu(restaurant,food_name,food_image,category,introduce,price,create_time) values(#{restaurant},#{food_name},#{food_image},#{category},#{introduce},#{price},#{create_time})
  </insert>

  <insert id="insertPptMenu" parameterType="com.xue.entity.model.PptMenu">
    insert ppt_menu(studio,campus,ppt_name,uuids,category,introduce,price,create_time,uuid) values(#{studio},#{campus},#{ppt_name},#{uuids},#{category},#{introduce},#{price},#{create_time},#{uuid})
  </insert>

  <insert id="insertRestaurantOrder" parameterType="com.xue.entity.model.RestaurantOrder">
    insert restaurant_order(restaurant,food_name,category,num,price,create_time,openid,goods_id) values(#{restaurant},#{food_name},#{category},#{num},#{price},#{create_time},#{openid},#{goods_id})
  </insert>

  <insert id="insertLessonPackage" parameterType="com.xue.entity.model.LessonPackage">
    insert lesson_package(student_name,total_money,discount_money,mark,start_date,end_date,campus,studio,create_time,all_lesson,give_lesson,subject,nick_name) values(#{student_name},#{total_money},#{discount_money},#{mark},#{start_date},#{end_date},#{campus},#{studio},#{create_time},#{all_lesson},#{give_lesson},#{subject},#{nick_name})
  </insert>

  <!-- 插入通知 -->
  <insert id="insertAnnouncement" parameterType="com.xue.entity.model.Announcement">
    insert announcement(studio,create_time,content,campus,title,uuid) values(#{studio},#{create_time},#{content},#{campus},#{title},#{uuid})
  </insert>

  <!-- 插入课时 -->
  <insert id="insertLesson" parameterType="com.xue.entity.model.Lesson">
    insert lesson(student_name,total_amount,left_amount,points,create_time,studio,minus,coins,subject,campus,price,total_money,discount_money,age,phone_number) values(#{student_name},#{total_amount},#{left_amount},#{points},#{create_time},#{studio},#{minus},#{coins},#{subject},#{campus},#{price},#{total_money},#{discount_money},#{age},#{phone_number})
  </insert>

  <select id="getLessonPackageById" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select * from lesson_package where id =#{param1} and delete_status = 0 order by create_time desc
  </select>

  <select id="getLessonPackage" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select * from lesson_package where student_name =#{param1} and studio =#{param2} and campus =#{param3} and subject =#{param4} and delete_status = 0 order by create_time desc
  </select>

  <select id="getLessonPackageAll" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select * from lesson_package where studio =#{param1} and campus =#{param2} and delete_status = 0 order by create_time desc
  </select>

  <select id="getLessonPackageByDuration" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select * from lesson_package where student_name =#{param1} and studio =#{param2} and campus =#{param3} and subject =#{param4} and create_time between #{param5} and #{param6}  and delete_status = 0 order by create_time desc
  </select>

  <select id="getLessonPackageByDurationAll" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select * from lesson_package where studio =#{param1} and campus =#{param2} and create_time between #{param3} and #{param4} and delete_status = 0 order by create_time desc
  </select>

  <!-- 获取续课总人数 -->
  <select id="getLessonPackageAllCount" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseAllCount">
    select count(distinct student_name) student_count,sum(total_money) total_price,sum(discount_money) left_price,sum(all_lesson) total_amount,sum(give_lesson) left_amount from lesson_package where studio =#{param1} and campus =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and delete_status = 0
  </select>

  <select id="getLessonPackageRenew" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select * from lesson_package where studio =#{param1} and campus =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and delete_status = 0
  </select>

  <select id="getLessonNew" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and campus =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and delete_status = 0
  </select>

  <select id="getLessonLoss" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and campus =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and delete_status = 1
  </select>

  <select id="getLessonAllCountNewStudent" parameterType="com.xue.entity.model.Lesson" resultMap="BaseAllCount">
    select count(distinct student_name) student_count from lesson where studio =#{param1} and campus =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and delete_status = 0
  </select>

  <select id="getLessonAllCountLossStudent" parameterType="com.xue.entity.model.Lesson" resultMap="BaseAllCount">
    select count(distinct student_name) student_count from lesson where studio =#{param1} and campus =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and delete_status = 1
  </select>

  <select id="getLessonPackageByStudent" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select * from lesson_package where student_name =#{param1} and studio =#{param2} and campus =#{param3} and subject =#{param4} and delete_status = 0 order by create_time desc
  </select>

  <select id="getLessonPackageByStudentSubject" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select * from lesson_package where student_name =#{param1} and studio =#{param2} and campus =#{param3} and subject =#{param4} and delete_status = 0 order by create_time desc
  </select>

  <select id="getLessonPackageByStudentCombine" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select * from lesson_package where student_name =#{param1} and studio =#{param2} and campus =#{param3} and delete_status = 0 order by create_time desc
  </select>

  <select id="getLessonPackageByStudentSubjectBatch" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select * from lesson_package where student_name =#{param1} and studio =#{param2} and campus =#{param3} and subject =#{param4} and mark = '批量录入' and delete_status = 0 order by create_time desc
  </select>

  <select id="getLessonPackageByCampus" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select * from lesson_package where studio =#{param1} and campus =#{param2} and delete_status = 0 order by student_name
  </select>

  <!-- 获取课时 -->
  <select id="getLesson" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and campus =#{param2} and delete_status = 0 order by left_amount,id
  </select>

  <!-- 获取课时 -->
  <select id="getLessonByPage" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and campus =#{param2} and delete_status = 0 order by left_amount,id limit #{param3},#{param4};
  </select>

  <select id="getClassNote" parameterType="com.xue.entity.model.Note" resultMap="BaseNote">
    select id,subject,student_name,studio,create_time,note_content from class_note where subject =#{param1} and studio =#{param2} and student_name =#{param3} order by create_time desc
  </select>

  <select id="getAnnouncement" parameterType="com.xue.entity.model.Announcement" resultMap="BaseAnnouncement">
    select * from announcement where studio =#{param1} and campus =#{param2} order by create_time desc limit 30
  </select>

  <!-- 获取课时 -->
  <select id="getLessonBySubject" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select id,student_name,total_amount,left_amount,create_time,points,studio,minus,coins,delete_status,subject,final_time,leave_times from lesson where studio =#{param1} and subject =#{param2} and campus =#{param3} and delete_status = 0 order by left_amount
  </select>

  <select id="getLessonByStudio" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select id,student_name,total_amount,left_amount,create_time,points,studio,minus,coins,delete_status,subject,campus,final_time,leave_times from lesson where studio =#{param1} and delete_status = 0
  </select>

  <select id="getLessonByStudioCampus" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and campus =#{param2} and delete_status = 0
  </select>

  <!-- 分页分科目获取课时 -->
  <select id="getLessonBySubjectByPage" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and subject =#{param2} and campus =#{param3} and delete_status = 0 order by left_amount limit #{param4},#{param5};
  </select>

  <!-- 获取课时 -->
  <select id="getTipsDataUrl" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and left_amount &lt; #{param2} and subject =#{param3} and campus =#{param4} and delete_status = 0 order by left_amount
  </select>

  <!-- 获取课时 -->
  <select id="getTipsDataUrlAll" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and left_amount &lt; #{param2} and campus =#{param3} and delete_status = 0 order by left_amount
  </select>


  <select id="getGoneStudent" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and campus =#{param2} and delete_status = 1 order by create_time desc
  </select>


  <!-- 获取总人数 -->
  <select id="getLessonAllCount" parameterType="com.xue.entity.model.Lesson" resultMap="BaseAllCount">
    select count(distinct student_name) student_count,sum(total_amount) total_amount,sum(left_amount) left_amount,sum(total_amount*price) total_price,sum(left_amount*price) left_price from lesson where studio =#{param1} and campus =#{param2} and delete_status = 0
  </select>

  <!-- 获取总人数 -->
  <select id="getLessonAllCountBySubject" parameterType="com.xue.entity.model.Lesson" resultMap="BaseAllCount">
    select count(distinct student_name) student_count,sum(total_amount) total_amount,sum(left_amount) left_amount,sum(total_amount*price) total_price,sum(left_amount*price) left_price from lesson where studio =#{param1} and subject =#{param2} and campus =#{param3} and delete_status = 0
  </select>

  <!-- 获取总人数 -->
  <select id="getLessonNeedPayCount" parameterType="com.xue.entity.model.Lesson" resultType="java.lang.Integer">
    select count(distinct student_name) from lesson where left_amount &lt; 5 and studio =#{param1} and campus =#{param2} and delete_status = 0;
  </select>

  <!-- 获取总人数 -->
  <select id="getLessonNeedPayCountBySubject" parameterType="com.xue.entity.model.Lesson" resultType="java.lang.Integer">
    select count(distinct student_name) from lesson where left_amount &lt; 5 and studio =#{param1} and subject =#{param2} and campus =#{param3} and delete_status = 0;
  </select>

  <!-- 获取总人数 -->
  <select id="getLessonOweCount" parameterType="com.xue.entity.model.Lesson" resultType="java.lang.Integer">
    select count(distinct student_name) from lesson where left_amount &lt; 0 and studio =#{param1} and campus =#{param2} and delete_status = 0;
  </select>

  <!-- 获取总人数 -->
  <select id="getLessonOweCountBySubject" parameterType="com.xue.entity.model.Lesson" resultType="java.lang.Integer">
    select count(distinct student_name) from lesson where left_amount &lt; 0 and studio =#{param1} and subject =#{param2} and campus =#{param3} and delete_status = 0;
  </select>

  <!-- 获取总人数 -->
  <select id="getLessonAllCountByDay" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select count(distinct student_name) from class_schedule where studio =#{param1} and dayofweek(add_date) =#{param2} and replace(replace(duration,':',''),'-','') =replace(replace(#{param3},':',''),'-','') and class_number =#{param4} and subject =#{param5} and campus =#{param6} and student_type ='ordinary' and is_try = 0 and delete_status = 0
  </select>

  <!-- 获取提醒状态 -->
  <select id="getCampusByStudio" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select distinct campus from lesson where studio =#{param1} and delete_status = 0
  </select>

  <select id="getLessonById" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where id =#{param1};
  </select>

  <!-- 获取总人数 -->
  <select id="getLessonAllCountBySumUp" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select count(student_name) lesson_count from class_schedule where studio =#{param1} and student_type ='ordinary' and campus =#{param2} and dayofweek(add_date)=dayofweek(#{param3}) and delete_status = 0
  </select>

  <select id="getLessonAllCountBySumUpByStudent" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select count(student_name) lesson_count from class_schedule where studio =#{param1} and student_type ='ordinary' and campus =#{param2} and dayofweek(add_date)=dayofweek(#{param3}) and student_name =#{param4} and delete_status = 0
  </select>

  <select id="getLessonAllCountBySumUpBySubject" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select count(student_name) lesson_count from class_schedule where studio =#{param1} and student_type ='ordinary' and campus =#{param2} and subject =#{param3} and dayofweek(add_date)=dayofweek(#{param4}) and student_name =#{param5} and delete_status = 0
  </select>

  <select id="getLessonAllCountBySumUpMonth" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select count(student_name) lesson_count from class_schedule where studio =#{param1} and student_type ='ordinary' and campus =#{param2} and dayofweek(add_date) between 0 and 7 and delete_status = 0
  </select>

  <select id="getLessonAllCountBySumUpMonthByStudent" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select count(student_name) lesson_count from class_schedule where studio =#{param1} and student_type ='ordinary' and campus =#{param2} and student_name =#{param3} and dayofweek(add_date) between 0 and 7 and delete_status = 0
  </select>

  <select id="getLessonAllCountBySumUpMonthBySubject" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select count(student_name) lesson_count from class_schedule where studio =#{param1} and student_type ='ordinary' and campus =#{param2} and subject =#{param3} and student_name =#{param4} and dayofweek(add_date) between 0 and 7 and delete_status = 0
  </select>

  <!-- 获取总人数 -->
  <select id="getLessonAllCountByDayByName" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select count(distinct student_name) from class_schedule where studio =#{param1} and dayofweek(add_date) =#{param2} and replace(replace(duration,':',''),'-','') =replace(replace(#{param3},':',''),'-','') and class_number =#{param4} and subject =#{param5} and student_name =#{param6} and campus =#{param7} and student_type ='ordinary' and delete_status = 0 and is_try = 0
  </select>

  <!-- 获取排课总人数 -->
  <select id="getClassesCountAll" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select count(distinct CONCAT(student_name, '_', subject)) from class_schedule where studio =#{param1} and campus =#{param2} and student_type ='ordinary' and is_try = 0 and delete_status = 0
  </select>

  <!-- 获取学员总人数 -->
  <select id="getClassesCountAllLesson" parameterType="com.xue.entity.model.Lesson" resultType="java.lang.Integer">
    select count(distinct CONCAT(student_name, '_', subject)) from lesson where studio =#{param1} and campus =#{param2} and delete_status = 0
  </select>

  <!-- 获取总人数 -->
  <select id="getClassesCountBySubject" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select count(distinct student_name) from class_schedule where studio =#{param1} and subject =#{param2} and campus =#{param3} and student_type ='ordinary' and is_try = 0 and delete_status = 0
  </select>

  <!-- 获取总报课数 -->
  <select id="getClassesCountBySubjectLesson" parameterType="com.xue.entity.model.Lesson" resultType="java.lang.Integer">
    select count(student_name) from lesson where studio =#{param1} and subject =#{param2} and campus =#{param3} and delete_status = 0
  </select>

  <!-- 获取单月课数 -->
  <select id="getSignUpByMonthAll" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Float">
    select sum(count) from sign_up_record where studio =#{param1} and date_format(create_time,'%Y-%m') =#{param2} and campus=#{param3} and mark &lt;&gt; '录前消课' and delete_status = 0
  </select>

  <!-- 获取单月试听人数 -->
  <select id="getTryByMonthAll" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select count(1) from class_schedule where studio =#{param1} and date_format(create_time,'%Y-%m') =#{param2} and campus=#{param3} and is_try = 1 and delete_status = 0
  </select>

  <!-- 获取单月课数 -->
  <select id="getLeaveByMonthAll" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select count(1) from leave_record where studio =#{param1} and date_format(date_time,'%Y-%m') =#{param2} and campus=#{param3} and leave_type = '请假' and delete_status = 0
  </select>

  <!-- 获取单月课数科目 -->
  <select id="getSignUpByMonth" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Float">
    select sum(count) from sign_up_record where studio =#{param1} and subject =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and campus=#{param4} and delete_status = 0
  </select>

  <!-- 获取单月试听人数科目 -->
  <select id="getTryByMonth" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select count(1) from class_schedule where studio =#{param1} and subject =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and campus=#{param4} and is_try = 1 and delete_status = 0
  </select>

  <!-- 获取单月课数科目 -->
  <select id="getLeaveByMonth" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select count(1) from leave_record where studio =#{param1} and subject =#{param2} and date_format(date_time,'%Y-%m') =#{param3} and campus=#{param4} and leave_type = '请假' and delete_status = 0
  </select>

  <!-- 获取单月学生课数 -->
  <select id="getSignUpByMonthStudent" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select sum(count) from sign_up_record where studio =#{param1} and subject =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and campus=#{param4} and student_name=#{param5} and mark &lt;&gt; '录前消课' and delete_status = 0
  </select>

  <!-- 获取学生总耗课数 -->
  <select id="getAllSignUpByStudent" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Float">
    select sum(count) from sign_up_record where studio =#{param1} and subject =#{param2} and campus=#{param3} and student_name=#{param4} and delete_status = 0
  </select>

  <!-- 获取学生总耗课数合并 -->
  <select id="getAllSignUpByStudentCombine" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Float">
    select sum(count) from sign_up_record where studio =#{param1} and campus=#{param2} and student_name=#{param3} and delete_status = 0
  </select>

  <select id="getBookSumByMonth" parameterType="com.xue.entity.model.BookDetail" resultType="java.lang.Integer">
    select sum(amount) from book_detail where openid =#{param1} and book_name =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and delete_status = 0
  </select>

  <select id="getBookDetailByMonth" parameterType="com.xue.entity.model.BookDetail" resultMap="BaseBookDetail">
    select * from book_detail where openid =#{param1} and book_name =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and delete_status = 0 order by create_time desc limit 1000
  </select>

  <!-- 获取学生单周报课数 -->
  <select id="getClassesCountByStudent" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select count(student_name) from class_schedule where studio =#{param1} and subject =#{param2} and campus =#{param3} and student_name =#{param4} and student_type ='ordinary' and is_try = 0 and delete_status = 0
  </select>

  <!-- 获取今天签到人数 -->
  <select id="getSignUpCountByDay" parameterType="com.xue.entity.model.SignUp" resultType="java.lang.Integer">
    select count(distinct student_name) from sign_up_record where studio =#{param1} and create_time =#{param2} and replace(replace(duration,':',''),'-','') =replace(replace(#{param3},':',''),'-','') and class_number =#{param4} and campus =#{param5} and subject =#{param6} and delete_status = 0
  </select>

  <!-- 获取课时 -->
  <select id="getLessonLikeName" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and student_name like "%"#{param2}"%" and delete_status = 0 and campus =#{param3} order by left_amount
  </select>

  <!-- 获取课时 -->
  <select id="getLessonLikeNameBySubject" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and student_name like "%"#{param2}"%" and delete_status = 0 and subject =#{param3} and campus =#{param4} order by left_amount
  </select>

  <!-- 获取课时 -->
  <select id="getLessonInName" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and find_in_set(student_name,#{param2}) and campus =#{param5} and delete_status = 0 order by left_amount limit #{param3},#{param4};
  </select>

  <!-- 获取课时 -->
  <select id="getLessonInNameBySubject" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and find_in_set(student_name,#{param2}) and subject =#{param5} and campus =#{param6} and delete_status = 0 order by left_amount limit #{param3},#{param4};
  </select>

  <!-- 获取课时 -->
  <select id="getRating" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and campus =#{param4} and delete_status = 0 order by points desc,id asc limit #{param2},#{param3};
  </select>

  <!-- 获取课时 -->
  <select id="getRatingBySubject" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and subject =#{param4} and campus =#{param5} and delete_status = 0 order by points,id desc limit #{param2},#{param3};
  </select>

  <!-- 获取课时 -->
  <select id="getRatingByName" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and student_name like "%"#{param2}"%" and delete_status = 0 order by student_name,id limit #{param3},#{param4};
  </select>

  <!-- 获取课时 -->
  <select id="getRatingByNameBySubject" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and subject =#{param3} and student_name like "%"#{param2}"%" and delete_status = 0 order by student_name,id limit #{param3},#{param4};
  </select>

  <!-- 更新课时 -->
  <update id="updateLesson" parameterType="com.xue.entity.model.Lesson">
    update lesson set left_amount=#{left_amount},total_amount=#{total_amount} where student_name=#{student_name} and studio =#{studio} and campus =#{campus} and subject =#{subject} and delete_status = 0
  </update>

  <update id="consumeLesson" parameterType="com.xue.entity.model.Lesson">
    update lesson set left_amount=#{left_amount} where student_name=#{student_name} and studio =#{studio} and campus =#{campus} and subject =#{subject} and delete_status = 0
  </update>

  <!-- 更新合课时 -->
  <update id="updateLessonBoth" parameterType="com.xue.entity.model.Lesson">
    update lesson set left_amount=#{left_amount},total_amount=#{total_amount} where student_name=#{student_name} and studio =#{studio} and campus =#{campus} and delete_status = 0
  </update>


  <!-- 更新积分展示状态 -->
  <update id="updateLessonPointStatus" parameterType="com.xue.entity.model.Lesson">
    update lesson set point_status=#{param3} where studio = #{param1} and campus =#{param2} and delete_status = 0
  </update>

  <!-- 更新单次积分全部 -->
  <update id="updateCoinsAll" parameterType="com.xue.entity.model.Lesson">
    update lesson set coins=#{param1} where studio = #{param2} and campus =#{param3} and delete_status = 0
  </update>

  <!-- 更新单次积分单人 -->
  <update id="updateCoinsByStudent" parameterType="com.xue.entity.model.Lesson">
    update lesson set coins=#{param1} where studio = #{param2} and campus =#{param3} and subject=#{param5} and delete_status = 0 and student_name=#{param4}
  </update>

  <!-- 更新单价 -->
  <update id="updatePriceAll" parameterType="com.xue.entity.model.Lesson">
    update lesson set price =#{param1} where studio =#{param2} and campus =#{param3} and delete_status = 0
  </update>

  <update id="updatePriceByStudent" parameterType="com.xue.entity.model.Lesson">
    update lesson set price =#{param1} where studio =#{param2} and campus =#{param3} and subject=#{param5} and delete_status = 0 and student_name=#{param4}
  </update>

  <!-- 更新用户类型 -->
  <update id="updateUsertype" parameterType="com.xue.entity.model.User">
    update user set role=#{role},user_type=#{user_type},expired_time=#{expired_time} where openid=#{openid}
  </update>

  <!-- 更新用户校区 -->
  <update id="updateUserCampus" parameterType="com.xue.entity.model.User">
    update user set campus=#{campus} where openid=#{openid}
  </update>

  <!-- 家长签约 -->
  <update id="updateUserContract" parameterType="com.xue.entity.model.User">
    update user set contract=#{param2} where openid=#{param1}
  </update>

  <update id="updateUserStudioByOpenid" parameterType="com.xue.entity.model.User">
    update user set studio=#{studio} where openid=#{openid}
  </update>

  <!-- 更改工作室名 -->
  <update id="updateUserStudio" parameterType="com.xue.entity.model.User">
    update user set studio=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <!-- 更改校区 -->
  <update id="updateUserCampusByStudio" parameterType="com.xue.entity.model.User">
    update user set campus=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateUserUnionid" parameterType="com.xue.entity.model.User">
    update user set unionid=#{param2},app=#{param3} where openid=#{param1} and delete_status = 0
  </update>

  <update id="updateRestaurantUserUnionid" parameterType="com.xue.entity.model.RestaurantUser">
    update restaurant_user set unionid=#{param2} where openid=#{param1} and delete_status = 0
  </update>

  <update id="updateBookUserUnionid" parameterType="com.xue.entity.model.BookUser">
    update book_user set unionid=#{param2} where openid=#{param1} and delete_status = 0
  </update>

  <update id="updateUserOfficialOpenid" parameterType="com.xue.entity.model.User">
    update user set official_openid=#{param2} where unionid=#{param1} and delete_status = 0
  </update>

  <update id="updateLessonStudio" parameterType="com.xue.entity.model.Lesson">
    update lesson set studio=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateLessonCampusByStudio" parameterType="com.xue.entity.model.Lesson">
    update lesson set campus=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateClassScheduleStudio" parameterType="com.xue.entity.model.Arrangement">
    update class_schedule set studio=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateClassScheduleCampusByStudio" parameterType="com.xue.entity.model.Arrangement">
    update class_schedule set campus=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateCommentStudio" parameterType="com.xue.entity.model.Message">
    update class_comment set studio=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateCommentCampusByStudio" parameterType="com.xue.entity.model.Message">
    update class_comment set campus=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateScheduleArrangementStudio" parameterType="com.xue.entity.model.Arrangement">
    update schedule_arrangement set studio=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateScheduleArrangementCampusByStudio" parameterType="com.xue.entity.model.Arrangement">
    update schedule_arrangement set campus=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateArrangementClassType" parameterType="com.xue.entity.model.Arrangement">
    update schedule_arrangement set class_type=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateSignUpRecordStudio" parameterType="com.xue.entity.model.SignUp">
    update sign_up_record set studio=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateSignUpRecordCampusByStudio" parameterType="com.xue.entity.model.SignUp">
    update sign_up_record set campus=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateLeaveRecordStudio" parameterType="com.xue.entity.model.Leave">
    update leave_record set studio=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateLeaveRecordCampusByStudio" parameterType="com.xue.entity.model.Leave">
    update leave_record set campus=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateLeaveStatus" parameterType="com.xue.entity.model.Leave">
    update leave_record set status=#{param2} where id=#{param1} and delete_status = 0
  </update>

  <update id="updateCombine" parameterType="com.xue.entity.model.Lesson">
    update lesson set is_combine=#{is_combine} where student_name=#{student_name} and studio=#{studio} and campus=#{campus}
  </update>

  <update id="updateLessonLeft" parameterType="com.xue.entity.model.Lesson">
    update lesson set left_amount=#{param1} where studio=#{param2} and student_name=#{param3} and campus=#{param4} and subject=#{param5} and delete_status = 0
  </update>

  <update id="updateLessonTotal" parameterType="com.xue.entity.model.Lesson">
    update lesson set total_amount=#{param1} where studio=#{param2} and student_name=#{param3} and campus=#{param4} and subject=#{param5} and delete_status = 0
  </update>

  <update id="updateLessonMinus" parameterType="com.xue.entity.model.Lesson">
    update lesson set minus=#{param1} where studio=#{param2} and student_name=#{param3} and campus=#{param4} and subject=#{param5} and delete_status = 0
  </update>

  <update id="updateLessonCoins" parameterType="com.xue.entity.model.Lesson">
    update lesson set coins=#{param1} where studio=#{param2} and student_name=#{param3} and campus=#{param4} and subject=#{param5} and delete_status = 0
  </update>

  <update id="updateLessonTotalMoney" parameterType="com.xue.entity.model.Lesson">
    update lesson set total_money=#{param1} where studio=#{param2} and student_name=#{param3} and campus=#{param4} and subject=#{param5} and delete_status = 0
  </update>

  <update id="updateLessonDiscountMoney" parameterType="com.xue.entity.model.Lesson">
    update lesson set discount_money=#{param1} where studio=#{param2} and student_name=#{param3} and campus=#{param4} and subject=#{param5} and delete_status = 0
  </update>

  <update id="updateSignUpCampus" parameterType="com.xue.entity.model.SignUp">
    update sign_up_record set campus=#{param3} where studio=#{param1} and student_name=#{param2} and delete_status = 0
  </update>

  <update id="updateSignUpByBacth" parameterType="com.xue.entity.model.SignUp">
    update sign_up_record set count=#{param1} where studio=#{param2} and student_name=#{param3} and subject=#{param4} and campus=#{param5} and delete_status = 0 and mark = '录前消课'
  </update>

  <update id="updateSignUpSubject" parameterType="com.xue.entity.model.SignUp">
    update sign_up_record set subject=#{param5} where studio=#{param1} and student_name=#{param2} and campus=#{param3} and subject=#{param4} and delete_status = 0
  </update>

  <update id="updateSubscription" parameterType="com.xue.entity.model.User">
    update user set subscription=#{subscription} where openid=#{openid}
  </update>

  <!-- 更新科目 -->
  <update id="updateSubject" parameterType="com.xue.entity.model.User">
    update user set subjects=#{subjects} where openid=#{openid}
  </update>

  <!-- 更新级别 -->
  <update id="updateTheme" parameterType="com.xue.entity.model.User">
    update user set theme=#{param1} where studio=#{param2}
  </update>

  <!-- 更新展示视频 -->
  <update id="updatVideoDisplay" parameterType="com.xue.entity.model.User">
    update user set display=#{param2} where studio=#{param1}
  </update>

  <!-- 更新封面权限 -->
  <update id="updatCoverDisplay" parameterType="com.xue.entity.model.User">
    update user set cover=#{param2} where studio=#{param1}
  </update>

  <!-- 续费更新 -->
  <update id="updateUserPay" parameterType="com.xue.entity.model.User">
    update user set expired_time=#{expired_time} ,days=#{days} where studio=#{studio} and role in ('boss', 'teacher')
  </update>

  <!-- 过期校长恢复 -->
  <update id="updateUserPayBoss" parameterType="com.xue.entity.model.User">
    update user set expired_time=#{expired_time},days=#{days},role=#{role} where studio=#{studio} and member in ('永恒会员','黄金会员')
  </update>

  <!-- 获取学生名课时 -->
  <select id="getLessonByName" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where student_name=#{student_name} and studio = #{studio} and campus =#{campus} and delete_status = 0
  </select>

  <!-- 获取学生名课时 -->
  <select id="getLessonByNameSubject" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where student_name=#{student_name} and studio = #{studio} and subject = #{subject} and campus = #{campus} and delete_status = 0
  </select>

  <select id="getLessonByNameSubjectAll" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where student_name=#{student_name} and studio = #{studio} and subject = #{subject} and campus = #{campus}
  </select>

  <!-- 更新积分 -->
  <update id="updateLessonPoint" parameterType="com.xue.entity.model.Lesson">
    update lesson set points=#{points} where student_name=#{student_name} and studio = #{studio} and subject = #{subject} and campus = #{campus} and delete_status = 0
  </update>

  <update id="updateLessonPackageSubject" parameterType="com.xue.entity.model.LessonPackage">
    update lesson_package set subject=#{param5} where student_name=#{param1} and studio = #{param2} and subject = #{param3} and campus = #{param4} and delete_status = 0
  </update>

  <update id="updateLessonPackageTotalMoney" parameterType="com.xue.entity.model.LessonPackage">
    update lesson_package set total_money=#{param2} where id=#{param1} and delete_status = 0
  </update>

  <update id="updateLessonPackageCampusByStudio" parameterType="com.xue.entity.model.LessonPackage">
    update lesson_package set campus=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateCardCampusByStudio" parameterType="com.xue.entity.model.Card">
    update card set campus=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateCardRecordCampusByStudio" parameterType="com.xue.entity.model.CardRecord">
    update card_record set campus=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateCardRecordTeacher" parameterType="com.xue.entity.model.CardRecord">
    update card_record set teacher=#{param2} where id=#{param1} and delete_status = 0
  </update>

  <update id="updateLessonPackageStudio" parameterType="com.xue.entity.model.LessonPackage">
    update lesson_package set studio=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateCardStudio" parameterType="com.xue.entity.model.Card">
    update card set studio=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateCardRecordStudio" parameterType="com.xue.entity.model.CardRecord">
    update card_record set studio=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateLessonPackageDiscountMoney" parameterType="com.xue.entity.model.LessonPackage">
    update lesson_package set discount_money=#{param2} where id=#{param1} and delete_status = 0
  </update>

  <update id="updateLessonPackageEndStatus" parameterType="com.xue.entity.model.LessonPackage">
    update lesson_package set end_status=#{param2} where id=#{param1} and delete_status = 0
  </update>

  <update id="updateLessonPackageMark" parameterType="com.xue.entity.model.LessonPackage">
    update lesson_package set mark=#{param2} where id=#{param1} and delete_status = 0
  </update>

  <update id="updateLessonPackageAllLesson" parameterType="com.xue.entity.model.LessonPackage">
    update lesson_package set all_lesson=#{param2} where id=#{param1} and delete_status = 0
  </update>

  <update id="updateLessonPackageGiveLesson" parameterType="com.xue.entity.model.LessonPackage">
    update lesson_package set give_lesson=#{param2} where id=#{param1} and delete_status = 0
  </update>

  <update id="updateLessonPackageStartDate" parameterType="com.xue.entity.model.LessonPackage">
    update lesson_package set start_date=#{param2} where id=#{param1} and delete_status = 0
  </update>

  <update id="updateLessonPackageEndDate" parameterType="com.xue.entity.model.LessonPackage">
    update lesson_package set end_date=#{param2} where id=#{param1} and delete_status = 0
  </update>

  <!-- 更新用户金币个人 -->
  <update id="updateCoinsByUser" parameterType="com.xue.entity.model.User">
    update user set coins=#{coins},coins_single=#{coins_single} where openid=#{openid} and delete_status = 0
  </update>

  <!-- 更新用户金币工作室 -->
  <update id="updateCoinsByStudio" parameterType="com.xue.entity.model.User">
    update user set coins=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <!-- 更新用可观看次数 -->
  <update id="updateReadTimesByOpenid" parameterType="com.xue.entity.model.User">
    update user set read_times=#{param2} where openid=#{param1} and delete_status = 0
  </update>

  <!-- 更新用可观看次数 -->
  <update id="updateVideoViewsById" parameterType="com.xue.entity.model.User">
    update class_comment set views=#{param2} where id=#{param1} and delete_status = 0
  </update>

  <update id="updateFinalTime" parameterType="com.xue.entity.model.Lesson">
    update lesson set final_time=#{param3} where studio=#{param1} and campus =#{param2}
  </update>

  <update id="updateLeaveTimes" parameterType="com.xue.entity.model.Lesson">
    update lesson set leave_times=#{param3} where studio=#{param1} and campus =#{param2}
  </update>

  <!-- 更新学生名字 -->
  <update id="updateUserStudent" parameterType="com.xue.entity.model.User">
    update user set student_name=#{param1} where student_name=#{param2} and studio=#{param3} and campus =#{param4} and openid=#{param5}
  </update>

  <update id="updateUserStudentByOpenid" parameterType="com.xue.entity.model.User">
    update user set student_name=#{param1} where id =#{param2}
  </update>

  <!-- 用户过期 -->
  <update id="updateUserExpired" parameterType="com.xue.entity.model.User">
    update user set role=#{param1} where studio=#{param2} and role in ('boss','teacher')
  </update>

  <update id="updateUserMember" parameterType="com.xue.entity.model.User">
    update user set member=#{param1} where studio=#{param2} and role in ('boss', 'teacher') and delete_status = 0
  </update>

  <update id="updateUserMemberByOpenid" parameterType="com.xue.entity.model.User">
    update user set member=#{param2} where openid=#{param1} and delete_status = 0
  </update>

  <update id="updateUserRegion" parameterType="com.xue.entity.model.User">
    update user set city=#{param1} where studio=#{param2} and delete_status = 0
  </update>

  <update id="updateExchangeByOpenid" parameterType="com.xue.entity.model.User">
    update user set is_exchange=#{param2} where openid=#{param1}
  </update>

  <update id="updateUserIsPaid" parameterType="com.xue.entity.model.User">
    update user set is_paid=#{param2},cash_uuid=#{param3} where openid=#{param1}
  </update>

  <update id="updateTeacherByUser" parameterType="com.xue.entity.model.User">
    update user set is_teacher=#{param2} where openid=#{param1}
  </update>

  <update id="updateSquareByUser" parameterType="com.xue.entity.model.User">
    update user set is_square=#{param2} where openid=#{param1}
  </update>

  <update id="updateCityByStudio" parameterType="com.xue.entity.model.User">
    update user set city=#{param2} where studio=#{param1}
  </update>

  <update id="updateSubjectByStudio" parameterType="com.xue.entity.model.User">
    update user set subject=#{param2} where studio=#{param1}
  </update>


</mapper>