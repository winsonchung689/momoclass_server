<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xue.repository.dao.UserMapper">

  <resultMap id="BaseResultMap" type="com.xue.entity.model.Message">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="photo" property="photo" javaType="[B" jdbcType="BLOB"/>
  </resultMap>
  <resultMap id="BaseSchedule" type="com.xue.entity.model.Schedule">
    <result column="add_date" jdbcType="VARCHAR" property="add_date" />
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>
  <resultMap id="BaseUser" type="com.xue.entity.model.User">
    <result column="nick_name" jdbcType="VARCHAR" property="nick_name" />
    <result column="role" jdbcType="VARCHAR" property="role" />
  </resultMap>
  <resultMap id="BaseRestaurantUser" type="com.xue.entity.model.RestaurantUser">
    <result column="nick_name" jdbcType="VARCHAR" property="nick_name" />
    <result column="role" jdbcType="VARCHAR" property="role" />
  </resultMap>
  <resultMap id="BaseBookUser" type="com.xue.entity.model.BookUser">
    <result column="nick_name" jdbcType="VARCHAR" property="nick_name" />
    <result column="role" jdbcType="VARCHAR" property="role" />
  </resultMap>
  <resultMap id="BaseBookDetail" type="com.xue.entity.model.BookDetail">
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>

  <resultMap id="BaseRestaurantOrder" type="com.xue.entity.model.RestaurantOrder">
    <result column="nick_name" jdbcType="VARCHAR" property="nick_name" />
    <result column="role" jdbcType="VARCHAR" property="role" />
  </resultMap>

  <resultMap id="BaseRestaurantMenu" type="com.xue.entity.model.Menu">
    <result column="category" jdbcType="VARCHAR" property="category" />
  </resultMap>
  <resultMap id="BaseLesson" type="com.xue.entity.model.Lesson">
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>
  <resultMap id="BaseLessonPackage" type="com.xue.entity.model.LessonPackage">
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>
  <resultMap id="BaseSignUp" type="com.xue.entity.model.SignUp">
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>
  <resultMap id="BaseGift" type="com.xue.entity.model.Gift">
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>
  <resultMap id="BaseArrangement" type="com.xue.entity.model.Arrangement">
    <result column="dayofweek" jdbcType="VARCHAR" property="dayofweek" />
  </resultMap>
  <resultMap id="BaseLeave" type="com.xue.entity.model.Leave">
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>
  <resultMap id="BaseAllCount" type="com.xue.entity.model.AllCount">
    <result column="student_count" jdbcType="INTEGER" property="student_count" />
  </resultMap>
  <resultMap id="BaseBookCount" type="com.xue.entity.model.BookCount">
    <result column="amount" jdbcType="FLOAT" property="amount" />
  </resultMap>
  <resultMap id="BaseAnalyzeCount" type="com.xue.entity.model.AnalyzeCount">
    <result column="sign_count" jdbcType="FLOAT" property="sign_count" />
  </resultMap>
  <resultMap id="BaseGoodsList" type="com.xue.entity.model.GoodsList">
    <result column="goods_name" jdbcType="VARCHAR" property="goods_name" />
  </resultMap>
  <resultMap id="BaseGroupBuy" type="com.xue.entity.model.GroupBuy">
    <result column="goods_id" jdbcType="VARCHAR" property="goods_id" />
  </resultMap>
  <resultMap id="BaseOrder" type="com.xue.entity.model.Order">
    <result column="nick_name" jdbcType="VARCHAR" property="nick_name" />
  </resultMap>
  <resultMap id="BaseNote" type="com.xue.entity.model.Note">
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>
  <resultMap id="BaseBook" type="com.xue.entity.model.Book">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
  </resultMap>
  <resultMap id="BaseAnnouncement" type="com.xue.entity.model.Announcement">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
  </resultMap>
  <resultMap id="BasePost" type="com.xue.entity.model.Post">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
  </resultMap>
  <resultMap id="BasePostComment" type="com.xue.entity.model.PostComment">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
  </resultMap>
  <resultMap id="BasePostLike" type="com.xue.entity.model.PostLike">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
  </resultMap>
  <resultMap id="BaseCommunicateRecord" type="com.xue.entity.model.CommunicateRecord">
    <result column="studio" jdbcType="VARCHAR" property="studio" />
  </resultMap>



  <!-- 获取课评模版 -->
  <select id="getCommentModel" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,comment,class_target,studio from class_comment where class_target_bak = '模版' and studio ='大雄工作室' and campus ='大雄工作室' and delete_status = 0 order by class_target;
  </select>

  <!-- 获取课评 -->
  <select id="getMessage" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
      select * from class_comment where class_target_bak = #{param4} and studio = #{param1} and campus =#{param5} and delete_status = 0 order by create_time desc,id asc limit #{param2},#{param3};
  </select>

  <select id="getAlbum" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select uuids from class_comment where class_target_bak ='课评' and studio = #{param1} and campus =#{param2} and student_name=#{param3} and delete_status = 0 order by create_time desc limit 10;
  </select>

  <select id="getExhibitionByType" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select * from class_comment where class_target_bak =#{param2} and studio =#{param1} and delete_status = 0 order by create_time desc limit #{param3},#{param4};
  </select>

  <select id="getUpdateNews" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select * from class_comment where class_target_bak in ('新闻','英语','育儿','绘本','升学','讲坛','健康','妈妈') and studio ='大雄工作室' and delete_status = 0 order by create_time desc limit 3;
  </select>

  <!-- 获取全量发帖 -->
  <select id="getPostPublic" parameterType="com.xue.entity.model.Post" resultMap="BasePost">
    select id,openid,uuids,content,studio,create_time from post where delete_status = 0 and is_private = 0 order by create_time desc limit #{param1},#{param2};
  </select>

  <!-- 获取本画室发帖 -->
  <select id="getPostPrivate" parameterType="com.xue.entity.model.Post" resultMap="BasePost">
    select id,openid,uuids,content,studio,create_time from post where delete_status = 0 and studio =#{param3} order by create_time desc limit #{param1},#{param2};
  </select>

  <!-- 获取回帖 -->
  <select id="getPostComment" parameterType="com.xue.entity.model.PostComment" resultMap="BasePostComment">
    select * from post_comment where delete_status = 0 and post_id =#{param1} order by create_time desc limit 100;
  </select>

  <select id="getLeaveMessage" parameterType="com.xue.entity.model.PostComment" resultMap="BasePostComment">
    select * from post_comment where delete_status = 0 and studio =#{param1} and type =#{param2} order by create_time desc limit 30;
  </select>

  <!-- 获取点赞 -->
  <select id="getPostLike" parameterType="com.xue.entity.model.PostLike" resultMap="BasePostLike">
    select id,openid,post_id,studio,create_time from post_like where delete_status = 0 and post_id =#{param1} order by create_time desc;
  </select>

  <select id="getPostLikeByOpenid" parameterType="com.xue.entity.model.PostLike" resultMap="BasePostLike">
    select id,openid,post_id,studio,create_time from post_like where delete_status = 0 and post_id =#{param1} and openid =#{param2} order by create_time desc;
  </select>

  <!-- 获取全部 -->
  <select id="getMessageByName" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,'null' photo,comment,create_time,class_name,class_target,studio from class_comment where class_target_bak ='课评' and student_name = #{param1} and studio = #{param2} and delete_status = 0 order by create_time desc limit #{param3},#{param4};
  </select>

  <!-- 获取全部 -->
  <select id="getMessageClient" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,'null' photo,comment,create_time,class_name,class_target,studio from class_comment where class_target_bak ='课评' and delete_status = 0 and student_name like "%"#{param1}"%" and studio = #{param2} order by create_time desc
  </select>

  <!-- 获取全部 -->
  <select id="getMessageInName" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,'null' photo,comment,create_time,class_name,class_target,studio,duration,positive,discipline,happiness,mp3_url,uuids,uuids_c from class_comment where class_target_bak =#{param5} and delete_status = 0 and find_in_set(student_name,#{param1}) and studio = #{param2} and campus =#{param6} order by create_time desc limit #{param3},#{param4};
  </select>

  <!-- 获取全部 -->
  <select id="getMessageGrowth" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio,duration,positive,discipline,happiness,mp3_url,uuids,uuids_c from class_comment where class_target_bak ='课评' and delete_status = 0 and find_in_set(student_name,#{param1}) and studio = #{param2} order by create_time desc limit #{param3},#{param4};
  </select>


  <!-- 获取范画 -->
  <select id="getModel" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select * from class_comment where class_target='范画' and delete_status = 0 and studio = #{param1} and campus =#{param4} order by create_time desc,id asc limit #{param2},#{param3};
  </select>

  <select id="getCommunicateRecord" parameterType="com.xue.entity.model.CommunicateRecord" resultMap="BaseCommunicateRecord">
    select id,student_name,studio,campus,openid,content,create_time,uuids from communicate_record where delete_status = 0 and studio = #{param1} and campus =#{param4} order by create_time desc,id asc limit #{param2},#{param3};
  </select>

  <select id="getCommunicateLike" parameterType="com.xue.entity.model.CommunicateRecord" resultMap="BaseCommunicateRecord">
    select id,student_name,studio,campus,openid,content,create_time,uuids from communicate_record where delete_status = 0 and studio = #{param1} and (student_name like "%"#{param2}"%" or content like "%"#{param2}"%" or openid like "%"#{param2}"%")  and campus =#{param3} order by create_time desc,id asc;
  </select>

  <select id="getCommunicateById" parameterType="com.xue.entity.model.CommunicateRecord" resultMap="BaseCommunicateRecord">
    select id,student_name,studio,campus,openid,content,create_time,uuids from communicate_record where id =#{param1} ;
  </select>

  <!-- 获取范画 -->
  <select id="getMamaShare" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target='打卡' and delete_status = 0 order by create_time desc limit #{param1},#{param2};
  </select>

  <!-- 获取广告 -->
  <select id="getAdvertise" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio,uuids from class_comment where class_target=#{param1} and delete_status = 0 and studio = #{param2} order by create_time desc limit #{param3},#{param4};
  </select>

  <!-- 获取奖状模板 -->
  <select id="getCertificateModel" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select photo from class_comment where class_target='奖状模板' and class_name=#{param1} and delete_status = 0 order by create_time desc limit 1
  </select>

  <!-- 获取奖状模板 -->
  <select id="getCertificateModelName" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select class_name from class_comment where class_target='奖状模板' and delete_status = 0
  </select>

  <!-- 获取相框模板 -->
  <select id="getFrameModel" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,class_name,uuids from class_comment where class_target=#{param4} and studio in (#{param1},'大雄工作室') and delete_status = 0 order by id limit #{param2},#{param3};
  </select>

  <!-- 获取课程体系 -->
  <select id="getClassSys" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio,uuids from class_comment where class_target = #{param1} and delete_status = 0 and studio = #{param2} and campus =#{param5} order by create_time desc limit #{param3},#{param4};
  </select>

  <!-- 获取课程体系 -->
  <select id="getUuidById" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,class_target_bak,studio,uuids,uuids_c from class_comment where delete_status = 0 and id = #{param1};
  </select>

  <!-- 获取教程列表 -->
  <select id="getCourseList" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target = '教程列表' and delete_status = 0 and studio = #{param1} order by create_time desc limit #{param2},#{param3};
  </select>

  <!-- 获取教程详情 -->
  <select id="getCourseDetail" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target = '教程详情' and delete_status = 0 and studio = #{param1} and class_name = #{param2} order by create_time limit #{param3},#{param4};
  </select>

  <!-- 获取主页 -->
  <select id="getHome" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio,uuids from class_comment where class_target='主页' and delete_status = 0 and studio = #{param1} order by create_time desc limit 1
  </select>

  <!-- 获取奖状 -->
  <select id="getCertificate" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target='奖状' and delete_status = 0 and studio = #{param1} order by create_time desc
  </select>

  <!-- 获取付款码 -->
  <select id="getPaycode" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,'null' photo,comment,create_time,class_name,class_target,studio,uuids from class_comment where class_target='付款码' and delete_status = 0 and student_name = #{param1} order by create_time desc limit 1
  </select>

  <!-- 获取个人奖状 -->
  <select id="getCertificateByName" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,'null' photo,comment,create_time,class_name,class_target,studio from class_comment where class_target='奖状' and studio = #{param1} and delete_status = 0 and student_name = #{param2} order by create_time desc
  </select>

  <!-- 获取全部 -->
  <select id="getSearch" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,'null' photo,comment,create_time,class_name,class_target,studio from class_comment where (student_name like "%"#{param1}"%" or class_name like "%"#{param1}"%") and class_target_bak =#{param5} and studio = #{param2} and campus =#{param6} and delete_status = 0  order by create_time desc limit #{param3},#{param4};
  </select>

  <!-- 获取详情 -->
  <select id="getDetails" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select * from class_comment where id = #{param1} and delete_status = 0
  </select>

  <!-- 获取详情 -->
  <select id="getDetailsUrlByDate" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select * from class_comment where studio= #{param1} and cast(replace(replace(duration,':',''),'-','') as signed)=cast(replace(replace(#{param2},':',''),'-','') as signed) and student_name= #{param3} and date_format(create_time, '%Y-%m-%d')= #{param4} and campus =#{param5} and class_target_bak =#{param6} and delete_status = 0
  </select>

  <!-- 获取学生照片 -->
  <select id="getStudentPhoto" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,'null' photo,comment,create_time,class_name,class_target,studio from class_comment where class_target = '礼品乐园' and delete_status = 0 and student_name =#{param1} and studio =#{param2} and campus =#{param3} order by create_time desc limit 1;
  </select>

  <!-- 删除详情 -->
  <select id="deleteStudentPhoto" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    update class_comment set delete_status = 1 where class_target = '礼品乐园' and student_name =#{param1} and studio =#{param2}
  </select>

  <!-- 删除详情 -->
  <select id="deleteHome" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    update class_comment set delete_status = 1 where class_target = '主页' and studio =#{param1}
  </select>

  <!-- 删除详情 -->
  <select id="deleteMyOrder" parameterType="com.xue.entity.model.Order" resultMap="BaseResultMap">
    update `order` set delete_status = 1 where id = #{param1};
  </select>

  <!-- 删除详情 -->
  <select id="deleteNote" parameterType="com.xue.entity.model.Note" resultMap="BaseResultMap">
    delete from class_note where id = #{param1};
  </select>

  <!-- 删除详情 -->
  <select id="deleteUser" parameterType="com.xue.entity.model.User" resultMap="BaseResultMap">
    update user set delete_status = 1 where id = #{param1};
  </select>


  <!-- 删除详情 -->
  <select id="deliverMyOrder" parameterType="com.xue.entity.model.Order" resultMap="BaseResultMap">
    update `order` set status = 1 where id = #{param1};
  </select>

  <!-- 获取详情 -->
  <select id="deleteComment" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
     delete from class_comment where id =#{param1} and studio =#{param2}
  </select>

  <!-- 获取详情 -->
  <select id="updateVideoTop" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    update class_comment set create_time =#{param2} where id =#{param1} and delete_status = 0 and class_target_bak not in ('新闻')
  </select>

  <!-- 删除帖子 -->
  <select id="deletePost" parameterType="com.xue.entity.model.Post" resultMap="BaseResultMap">
    update post set delete_status = 1 where id =#{param1}
  </select>


  <!-- 删除账单 -->
  <select id="deleteBookDetail" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    update account_book set delete_status = 1 where id =#{param1} and studio =#{param2}
  </select>

  <select id="deleteCommunicateRecord" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    update communicate_record set delete_status = 1 where id =#{param1} and studio =#{param2}
  </select>

  <!-- 获取详情 -->
  <select id="updateUuids" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    update class_comment set uuids =#{param3} where id =#{param1} and studio =#{param2}
  </select>

  <!-- 获取详情 -->
  <select id="updateUuids_c" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    update class_comment set uuids_c =#{param3} where id =#{param1} and studio =#{param2}
  </select>


  <!-- 删除商品 -->
  <select id="deleteGoodsList" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseResultMap">
    update goods_list set delete_status = 1 where id =#{param1} and studio =#{param2}
  </select>

  <!-- 删除团购 -->
  <select id="deleteGroupBuy" parameterType="com.xue.entity.model.GroupBuy" resultMap="BaseResultMap">
    update group_buy set delete_status = 1 where goods_id =#{param1} and nick_name =#{param2} and studio =#{param3}
  </select>

  <!-- 删除安排 -->
  <select id="deleteArrangement" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseResultMap">
    update schedule_arrangement set delete_status = 1 where id =#{param1} and studio =#{param2}
  </select>

  <!-- 更改课程名 -->
  <select id="changeClassName" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseResultMap">
    update schedule_arrangement set class_number =#{param3} where id =#{param1} and studio =#{param2}
  </select>

  <!-- 更改课程名 -->
  <select id="modifyMark" parameterType="com.xue.entity.model.SignUp" resultMap="BaseResultMap">
    update sign_up_record set mark =#{param3} where id =#{param1} and studio =#{param2}
  </select>

  <!-- 更改商品简介 -->
  <select id="modifyGoodsIntro" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseResultMap">
    update goods_list set goods_intro =#{param4} where id =#{param1} and studio =#{param2} and campus =#{param3}
  </select>

  <!-- 更改商品名称 -->
  <select id="modifyGoodsName" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseResultMap">
    update goods_list set goods_name =#{param4} where id =#{param1} and studio =#{param2} and campus =#{param3}
  </select>

  <!-- 更改商品价格 -->
  <select id="modifyGoodsPrice" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseResultMap">
    update goods_list set goods_price =#{param4} where id =#{param1} and studio =#{param2} and campus =#{param3}
  </select>

  <!-- 更改地址及电话号码 -->
  <select id="updateLocation" parameterType="com.xue.entity.model.User" resultMap="BaseResultMap">
    update user set location=#{param2} where openid =#{param1}
  </select>

  <select id="updatePhoneNumber" parameterType="com.xue.entity.model.User" resultMap="BaseResultMap">
    update user set phone_number =#{param2} where openid =#{param1}
  </select>

  <select id="updateUserStudentName" parameterType="com.xue.entity.model.User" resultMap="BaseResultMap">
    update user set student_name =#{param2} where openid =#{param1} and student_name ='no_name'
  </select>

  <!-- 更改用户名 -->
  <select id="updateNewName" parameterType="com.xue.entity.model.User" resultMap="BaseResultMap">
    update user set nick_name =#{param2} where openid =#{param1}
  </select>

  <!-- 更改课程名 -->
  <select id="changeSubjectName" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseResultMap">
    update schedule_arrangement set subject =#{param3} where id =#{param1} and studio =#{param2}
  </select>

  <!-- 更改人数上限 -->
  <select id="changeLimit" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseResultMap">
    update schedule_arrangement set limits =#{param3} where id =#{param1} and studio =#{param2}
  </select>

  <!-- 更改时间 -->
  <select id="changeDuration" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseResultMap">
    update schedule_arrangement set duration =#{param3} where id =#{param1} and studio =#{param2}
  </select>

  <!-- 更改课程名 -->
  <select id="changeScheduleClassName" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseResultMap">
    update class_schedule set class_number =#{param4} where class_number =#{param1} and studio =#{param2} and duration =#{param3} and subject =#{param5} and campus =#{param6} and dayofweek(add_date)=#{param7}
  </select>

  <!-- 更改课程时间 -->
  <select id="changeScheduleDuration" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseResultMap">
    update class_schedule set duration =#{param4} where class_number =#{param1} and studio =#{param2} and duration =#{param3} and subject =#{param5} and campus =#{param6} and dayofweek(add_date)=#{param7}
  </select>

  <!-- 更改课程名 -->
  <select id="changeSignUpClassName" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseResultMap">
    update sign_up_record set class_number =#{param4} where class_number =#{param1} and studio =#{param2} and duration =#{param3} and subject =#{param5} and campus =#{param6}
  </select>


  <!-- 更改课程名 -->
  <select id="changeScheduleSubject" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseResultMap">
    update class_schedule set subject =#{param4} where subject =#{param1} and studio =#{param2} and duration =#{param3} and class_number =#{param5} and campus =#{param6} and dayofweek(add_date)=#{param7}
  </select>

  <!-- 更改课程名 -->
  <select id="changeSignUpSubject" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseResultMap">
    update sign_up_record set subject =#{param4} where subject =#{param1} and studio =#{param2} and duration =#{param3} and class_number =#{param5} and campus =#{param6}
  </select>

  <!-- 获取详情 -->
  <select id="deleteSignUpRecord" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    update sign_up_record set delete_status = 1 where id =#{param1} and studio =#{param2}
  </select>

  <!-- 获取详情 -->
  <select id="deleteSignUpAllRecord" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    update sign_up_record set ending_status = 1 where student_name =#{param1} and studio =#{param2}
  </select>

  <select id="updateLeaveAllRecord" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    update leave_record set ending_status = 1 where student_name =#{param1} and studio =#{param2} and campus =#{param3}
  </select>

  <!-- 获取详情 -->
  <select id="deleteGiftRecord" parameterType="com.xue.entity.model.Gift" resultMap="BaseGift">
    delete from gift_record where id =#{param1} and studio =#{param2}
  </select>

  <!-- 获取详情 -->
  <select id="deleteLeaveAllRecord" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    update leave_record set delete_status = 1 where student_name =#{param1} and studio =#{param2} and leave_type = #{param3} and subject = #{param4}
  </select>

  <!-- 删除请假记录 -->
  <select id="deleteLeaveRecord" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    update leave_record set delete_status = 1 where id =#{param1} and studio =#{param2}
  </select>

  <!-- 刪除课程表 -->
  <select id="deleteSchedule" parameterType="com.xue.entity.model.Schedule" resultMap="BaseResultMap">
    update class_schedule set delete_status = 1 where id =#{param1} and studio =#{param2}
  </select>

  <!-- 刪除课程表 -->
  <select id="deleteScheduleBySubject" parameterType="com.xue.entity.model.Schedule" resultMap="BaseResultMap">
    update class_schedule set delete_status = 1 where student_name =#{param1} and studio =#{param2} and subject =#{param3} and campus =#{param4}
  </select>

  <!-- 确认课程 -->
  <select id="confirmSchedule" parameterType="com.xue.entity.model.Schedule" resultMap="BaseResultMap">
    update class_schedule set status = 1 where id =#{param1} and studio =#{param2}
  </select>

  <!-- 获取删除学生 -->
  <select id="deleteLesson" parameterType="com.xue.entity.model.Lesson" resultMap="BaseResultMap">
    update lesson set delete_status = 1,create_time=#{param3} where id =#{param1} and studio =#{param2}
  </select>

  <select id="deleteLessonForever" parameterType="com.xue.entity.model.Lesson" resultMap="BaseResultMap">
    delete from lesson where id =#{param1} and studio =#{param2}
  </select>

  <!-- 恢复学生 -->
  <select id="recoverLesson" parameterType="com.xue.entity.model.Lesson" resultMap="BaseResultMap">
    update lesson set delete_status = 0,create_time=#{param3} where id =#{param1} and studio =#{param2}
  </select>

  <select id="deleteLessonPackage" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseResultMap">
    update lesson_package set delete_status = 1 where id =#{param1}
  </select>

  <select id="deleteLessonPackageByName" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseResultMap">
    update lesson_package set delete_status = 1 where student_name =#{param1} and studio =#{param2} and subject =#{param3} and campus =#{param4}
  </select>

  <select id="recoverLessonPackageByName" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseResultMap">
    update lesson_package set delete_status = 0 where student_name =#{param1} and studio =#{param2} and subject =#{param3} and campus =#{param4}
  </select>

  <!-- 获取课程表 -->
  <select id="getClassNumber" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseArrangement">
    select id,dayofweek,class_number,duration,limits,photo,studio from schedule_arrangement where studio = #{param1} and dayofweek =#{param2} and duration =#{param3} and delete_status = 0 order by class_number
  </select>

  <!-- 获取课程表 -->
  <select id="getSchedule" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select id,add_date,age,student_name,duration,create_time,studio,update_time,student_type,class_number,subject,remind from class_schedule where dayofweek(add_date)=#{param1} and studio = #{param2} and subject = #{param3} and campus =#{param4} and student_type ='ordinary' and delete_status = 0 order by duration,subject,class_number
  </select>


  <select id="getScheduleCheck" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select id,add_date,age,student_name,duration,create_time,studio,update_time,student_type,class_number,subject,remind from class_schedule where add_date=#{param1} and duration = #{param2} and class_number = #{param3} and subject =#{param4} and studio =#{param5} and campus =#{param6} and student_name =#{param7} and delete_status = 0
  </select>

  <!-- 获取课程表 -->
  <select id="getScheduleDistinct" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select distinct duration,studio,class_number,subject,remind from class_schedule where dayofweek(add_date)=#{param1} and studio = #{param2} and subject = #{param3} and campus =#{param4} and student_type ='ordinary' and delete_status = 0 order by duration,subject,class_number
  </select>

  <!-- 获取课程表 -->
  <select id="getScheduleAll" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select id,add_date,age,student_name,duration,create_time,studio,update_time,student_type,class_number,subject,remind from class_schedule where dayofweek(add_date)=#{param1} and studio = #{param2} and campus =#{param3} and student_type ='ordinary' and delete_status = 0 order by duration,subject,class_number
  </select>

  <select id="getScheduleByStudent" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select id,add_date,age,student_name,duration,create_time,studio,update_time,student_type,class_number,subject,remind from class_schedule where studio = #{param1} and campus =#{param2} and subject =#{param3} and student_name =#{param4} and student_type ='ordinary' and delete_status = 0 ;
  </select>

  <!-- 获取课程表 -->
  <select id="getScheduleAllDistinct" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select distinct duration,studio,class_number,subject,remind from class_schedule where dayofweek(add_date)=#{param1} and studio = #{param2} and campus = #{param3} and student_type ='ordinary' and delete_status = 0 order by duration,subject,class_number
  </select>

  <!-- 获取课程表 -->
  <select id="getScheduleByUser" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select * from class_schedule where dayofweek(add_date)=#{param1} and studio = #{param2} and student_name = #{param3} and campus = #{param4} and student_type ='ordinary' and delete_status = 0 order by duration,subject,class_number
  </select>

  <select id="getScheduleByUserDurationSt" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select * from class_schedule where dayofweek(add_date)=#{param1} and studio = #{param2} and student_name = #{param3} and campus = #{param4} and SUBSTRING(duration, 1, 5)= #{param5} and student_type ='ordinary' and delete_status = 0 order by duration,subject,class_number
  </select>

  <!-- 获取课程表 -->
  <select id="getScheduleDetail" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select id,add_date,age,student_name,duration,create_time,studio,update_time,student_type,status,class_number,subject from class_schedule where dayofweek(add_date)=#{param1} and duration = #{param2} and studio= #{param3} and class_number= #{param4} and subject= #{param5} and campus =#{param6} and student_type = 'ordinary' and delete_status = 0 and is_try = 0 order by duration
  </select>

  <select id="getScheduleDetailAll_O" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select id,add_date,age,student_name,duration,create_time,studio,update_time,student_type,status,class_number,subject from class_schedule where dayofweek(add_date)=#{param1} and duration = #{param2} and studio= #{param3} and class_number= #{param4} and subject= #{param5} and campus =#{param6} and student_type = 'ordinary' and delete_status = 0 order by duration
  </select>

  <select id="getScheduleDetailAll_T" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select id,add_date,age,student_name,duration,create_time,studio,update_time,student_type,status,class_number,subject from class_schedule where dayofweek(add_date)=#{param1} and duration = #{param2} and studio= #{param3} and class_number= #{param4} and subject= #{param5} and campus =#{param6} and student_type= 'transferred' and add_date =#{param7} and delete_status = 0 order by duration
  </select>

  <!-- 获取课程表 -->
  <select id="getScheduleByClassOrdinary" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select id,add_date,age,student_name,duration,create_time,studio,update_time,student_type,status,class_number,subject from class_schedule where dayofweek(add_date)=#{param1} and duration = #{param2} and studio= #{param3} and class_number= #{param4} and subject= #{param5} and campus= #{param6} and delete_status = 0 and student_type ='ordinary' order by duration
  </select>

  <!-- 获取课程表 -->
  <select id="getScheduleByClassTransferred" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select id,add_date,age,student_name,duration,create_time,studio,update_time,student_type,status,class_number,subject from class_schedule where add_date = #{param1} and duration = #{param2} and studio= #{param3} and class_number= #{param4} and subject= #{param5} and campus= #{param6} and delete_status = 0 and student_type ='transferred' order by duration
  </select>

  <!-- 获取课程表 -->
  <select id="deleteScheduleByDate" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    update class_schedule set delete_status = 1 where dayofweek(add_date)=#{param1} and duration = #{param2} and studio= #{param3} and class_number= #{param4} and subject= #{param5} and student_type ='ordinary' order by duration
  </select>

  <!-- 取消约课 -->
  <select id="cancelBook" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    update class_schedule set delete_status = 1 where add_date=#{param1} and duration = #{param2} and studio= #{param3} and class_number= #{param4} and subject= #{param5} and campus =#{param6} and student_name =#{param7} and student_type ='transferred' order by duration
  </select>

  <select id="deleteBBookeDetail" parameterType="com.xue.entity.model.BookDetail" resultMap="BaseBookDetail">
    update book_detail set delete_status = 1 where id = #{param1}
  </select>

  <!-- 获取课插班生 -->
  <select id="getTransfer" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select id,add_date,age,student_name,duration,create_time,studio,update_time,student_type,class_number,subject from class_schedule where add_date = #{param1} and studio = #{param2} and subject = #{param3} and campus= #{param4} and student_type ='transferred' and delete_status = 0 order by duration
  </select>

  <!-- 获取课插班生 -->
  <select id="getTransferAll" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select id,add_date,age,student_name,duration,create_time,studio,update_time,student_type,class_number,subject from class_schedule where add_date = #{param1} and studio = #{param2} and campus= #{param3} and student_type ='transferred' and delete_status = 0 order by duration
  </select>

  <!-- 获取账本 -->
  <select id="getBookDetail" parameterType="com.xue.entity.model.Book" resultMap="BaseBook">
    select id,studio,type,mark,amount,create_time from account_book where studio = #{param1} and date_format(create_time, '%Y-%m-%d') &lt;= #{param2} and date_format(create_time, '%Y-%m-%d') &gt;= #{param4} and type = #{param3} and delete_status = 0 order by create_time desc
  </select>

  <select id="getBookByStudio" parameterType="com.xue.entity.model.Book" resultMap="BaseBook">
    select id,studio,type,mark,amount,create_time from account_book where mark like "%"#{param1}"%" and type ="收入" and studio = "大雄工作室" and delete_status = 0 order by create_time desc limit 1
  </select>

  <select id="getBookDetailAll" parameterType="com.xue.entity.model.Book" resultMap="BaseBook">
    select id,studio,type,mark,amount,create_time from account_book where studio = #{param1} and date_format(create_time, '%Y-%m-%d') &lt;= #{param2} and date_format(create_time, '%Y-%m-%d') &gt;= #{param3}  and delete_status = 0 order by create_time desc
  </select>

  <!-- 获取课插班生 -->
  <select id="searchBookDetail" parameterType="com.xue.entity.model.Book" resultMap="BaseBook">
    select id,studio,type,mark,amount,create_time from account_book where studio = #{param1} and (create_time like "%"#{param2}"%" or mark like "%"#{param2}"%") and type = #{param3} and delete_status = 0 order by create_time desc
  </select>

  <select id="updateBookMark" parameterType="com.xue.entity.model.Book" resultMap="BaseBook">
    update account_book set mark=#{param2} where id=#{param1}
  </select>

  <select id="updateBookAmount" parameterType="com.xue.entity.model.Book" resultMap="BaseBook">
    update account_book set amount=#{param2} where id=#{param1}
  </select>

  <select id="updateBookCreateTime" parameterType="com.xue.entity.model.Book" resultMap="BaseBook">
    update account_book set create_time=#{param2} where id=#{param1}
  </select>

  <select id="getBookByMonth" parameterType="com.xue.entity.model.BookCount" resultMap="BaseBookCount">
    select date_format(create_time, '%Y-%m') create_time,sum(if(type="收入",amount,0)) income,sum(if(type="支出",amount,0)) expenditure from account_book where studio = #{param1} and campus =#{param2} and delete_status = 0 group by date_format(create_time, '%Y-%m') order by date_format(create_time,'%Y-%m') desc
  </select>

  <select id="getBookByDate" parameterType="com.xue.entity.model.BookCount" resultMap="BaseBookCount">
    select date_format(create_time, '%Y-%m-%d') create_time,sum(if(type="收入",amount,0)) income,sum(if(type="支出",amount,0)) expenditure from account_book where studio = #{param1} and campus =#{param2} and delete_status = 0 group by date_format(create_time, '%Y-%m-%d') order by date_format(create_time,'%Y-%m-%d') desc
  </select>

  <select id="getAnalyzeSignUp" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select date_format(create_time, '%Y-%m-%d') create_time,count(1) sign_count,sum(count) lesson_count from sign_up_record where studio = #{param1} and campus =#{param2} and delete_status = 0 and count > 0 and create_time between #{param3} and #{param4} group by date_format(create_time, '%Y-%m-%d') order by date_format(create_time, '%Y-%m-%d') desc
  </select>

  <select id="getAnalyzeSignUpByStudent" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select student_name,count(1) sign_count,sum(count) lesson_count from sign_up_record where studio = #{param1} and campus =#{param2} and delete_status = 0 and count > 0 and create_time between #{param3} and #{param4} group by student_name
  </select>

  <select id="getAnalyzeSignUpByMonth" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select date_format(create_time,'%Y-%m') create_time,count(1) sign_count,sum(count) lesson_count from sign_up_record where studio = #{param1} and campus =#{param2} and delete_status = 0 and count > 0 and date_format(create_time,'%Y-%m') between #{param3} and #{param4} group by date_format(create_time,'%Y-%m') order by date_format(create_time,'%Y-%m') desc
  </select>

  <select id="getAnalyzeSignUpByMonthByStudent" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select student_name,count(1) sign_count,sum(count) lesson_count from sign_up_record where studio = #{param1} and campus =#{param2} and delete_status = 0 and count > 0 and date_format(create_time,'%Y-%m') between #{param3} and #{param4} group by student_name
  </select>

  <select id="getAnalyzeSignUpDetail" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select create_time,student_name,subject,count from sign_up_record where studio = #{param1} and campus =#{param2} and delete_status = 0 and create_time=#{param3}  order by create_time desc
  </select>

  <select id="getAnalyzeSignUpDetailByStudent" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select create_time,student_name,subject,count from sign_up_record where studio = #{param1} and campus =#{param2} and delete_status = 0 and create_time=#{param3} and student_name=#{param4} order by create_time desc
  </select>

  <select id="getAnalyzeSignUpDetailByMonth" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select create_time,student_name,subject,count from sign_up_record where studio = #{param1} and campus =#{param2} and delete_status = 0 and  date_format(create_time, '%Y-%m')=#{param3}  order by create_time desc
  </select>

  <select id="getAnalyzeSignUpDetailByMonthByStudent" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select create_time,student_name,subject,count from sign_up_record where studio = #{param1} and campus =#{param2} and delete_status = 0 and  date_format(create_time, '%Y-%m')=#{param3} and student_name=#{param4} order by create_time desc
  </select>

  <select id="getAnalyzeTryDetail" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select add_date,student_name,subject from class_schedule where studio = #{param1} and campus =#{param2} and delete_status = 0 and is_try = 1 and date_format(create_time, '%V')=#{param3}  order by create_time desc
  </select>

  <select id="getAnalyzeLeaveDetail" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    select date_time,student_name,subject from leave_record where studio = #{param1} and campus =#{param2} and delete_status = 0 and leave_type = '请假' and date_format(create_time, '%V')=#{param3}  order by create_time desc
  </select>

  <select id="getAnalyzeAbsentDetail" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    select date_time,student_name,subject from leave_record where studio = #{param1} and campus =#{param2} and delete_status = 0 and leave_type = '旷课' and date_format(create_time, '%V')=#{param3}  order by create_time desc
  </select>

  <select id="getAnalyzeTry" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select create_time,count(1) try_count from class_schedule where studio = #{param1} and campus =#{param2} and delete_status = 0 and is_try = 1 and create_time=#{param3}  group by create_time order by create_time desc
  </select>

  <select id="getAnalyzeTryByMonth" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select create_time,count(1) try_count from class_schedule where studio = #{param1} and campus =#{param2} and delete_status = 0 and is_try = 1 and date_format(create_time,'%Y-%m') =#{param3}  group by create_time order by create_time desc
  </select>

  <select id="getAnalyzeLeave" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select date_time create_time,count(1) leave_count from leave_record where studio = #{param1} and campus =#{param2} and delete_status = 0 and leave_type = '请假' and date_time=#{param3}  group by date_time order by date_time desc
  </select>

  <select id="getAnalyzeLeaveByMonth" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select date_time create_time,count(1) leave_count from leave_record where studio = #{param1} and campus =#{param2} and delete_status = 0 and leave_type = '请假' and date_format(date_time,'%Y-%m')=#{param3}  group by date_time order by date_time desc
  </select>

  <select id="getAnalyzeAbsent" parameterType="com.xue.entity.model.BookCount" resultMap="BaseBookCount">
    select date_format(date_time, '%V') create_time,count(1) income,'' expenditure from leave_record where studio = #{param1} and campus =#{param2} and delete_status = 0 and leave_type = '旷课' and date_format(date_time, '%V')=#{param3}  group by date_format(date_time, '%V') order by date_format(date_time, '%V') desc
  </select>

  <select id="getBookByYear" parameterType="com.xue.entity.model.BookCount" resultMap="BaseBookCount">
    select date_format(create_time, '%Y') create_time,sum(if(type="收入",amount,0)) income,sum(if(type="支出",amount,0)) expenditure from account_book where studio = #{param1} and campus =#{param2} and delete_status = 0 group by date_format(create_time, '%Y') order by date_format(create_time,'%Y') desc
  </select>

  <select id="getBookByAll" parameterType="com.xue.entity.model.BookCount" resultMap="BaseBookCount">
    select "汇总" create_time,sum(if(type="收入",amount,0)) income,sum(if(type="支出",amount,0)) expenditure from account_book where studio = #{param1} and campus =#{param2} and delete_status = 0
  </select>

  <!-- 插入账单 -->
  <insert id="insertBook" parameterType="com.xue.entity.model.Book">
    insert account_book(studio,type,mark,amount,create_time,campus) values(#{studio},#{type},#{mark},#{amount},#{create_time},#{campus})
  </insert>

  <insert id="insertBookDetail" parameterType="com.xue.entity.model.BookDetail">
    insert book_detail(type,mark,amount,create_time,item,openid,update_time,book_name) values(#{type},#{mark},#{amount},#{create_time},#{item},#{openid},#{update_time},#{book_name})
  </insert>

  <!-- 插入沟通记录 -->
  <insert id="insertCommunicateRecord" parameterType="com.xue.entity.model.CommunicateRecord">
    insert communicate_record(student_name,studio,campus,content,openid,create_time,uuids) values(#{student_name},#{studio},#{campus},#{content},#{openid},#{create_time},#{uuids})
  </insert>

  <!-- 插入课评 -->
  <insert id="push" parameterType="com.xue.entity.model.Message">
      insert class_comment(student_name,photo,comment,create_time,class_name,class_target,studio,class_target_bak,duration,positive,discipline,happiness,mp3_url,uuids,campus,vuuid) values(#{student_name},#{photo},#{comment},#{create_time},#{class_name},#{class_target},#{studio},#{class_target_bak},#{duration},#{positive},#{discipline},#{happiness},#{mp3_url},#{uuids},#{campus},#{vuuid})
  </insert>

  <!-- 插入帖子 -->
  <insert id="insertPost" parameterType="com.xue.entity.model.Post">
    insert post(openid,uuids,content,studio,create_time,is_private) values(#{openid},#{uuids},#{content},#{studio},#{create_time},#{is_private})
  </insert>

  <!-- 插入回帖 -->
  <insert id="insertPostComment" parameterType="com.xue.entity.model.PostComment">
    insert post_comment(openid,post_id,content,studio,create_time,type) values(#{openid},#{post_id},#{content},#{studio},#{create_time},#{type})
  </insert>

  <!-- 插入点赞 -->
  <insert id="insertPostLike" parameterType="com.xue.entity.model.PostLike">
    insert post_like(openid,post_id,studio,create_time) values(#{openid},#{post_id},#{studio},#{create_time})
  </insert>

  <!-- 插入课程表 -->
  <insert id="insertSchedule" parameterType="com.xue.entity.model.Schedule">
    insert class_schedule(add_date,age,student_name,duration,create_time,studio,update_time,student_type,status,class_number,delete_status,subject,campus,is_try) values(#{add_date},#{age},#{student_name},#{duration},#{create_time},#{studio},#{update_time},#{student_type},#{status},#{class_number},0,#{subject},#{campus},#{is_try})
  </insert>

  <!-- 插入订单 -->
  <insert id="insertOrder" parameterType="com.xue.entity.model.Order">
    insert `order`(nick_name,openid,phone_number,location,goods_name,goods_intro,goods_price,studio,create_time,campus) values(#{nick_name},#{openid},#{phone_number},#{location},#{goods_name},#{goods_intro},#{goods_price},#{studio},#{create_time},#{campus})
  </insert>


  <!-- 插入签到记录 -->
  <insert id="insertSignUp" parameterType="com.xue.entity.model.SignUp">
    insert sign_up_record(student_name,create_time,studio,sign_time,mark,duration,count,class_number,subject,teacher,campus) values(#{student_name},#{create_time},#{studio},#{sign_time},#{mark},#{duration},#{count},#{class_number},#{subject},#{teacher},#{campus})
  </insert>

  <!-- 插入请假记录 -->
  <insert id="insertLeave" parameterType="com.xue.entity.model.Leave">
    insert leave_record(student_name,date_time,studio,create_time,duration,leave_type,mark_leave,subject,campus,makeup_date) values(#{student_name},#{date_time},#{studio},#{create_time},#{duration},#{leave_type},#{mark_leave},#{subject},#{campus},#{makeup_date})
  </insert>

  <!-- 插入课程安排 -->
  <insert id="insertArrangement" parameterType="com.xue.entity.model.Arrangement">
    insert schedule_arrangement(dayofweek,class_number,duration,limits,photo,studio,delete_status,subject,campus) values(#{dayofweek},#{class_number},#{duration},#{limits},#{photo},#{studio},0,#{subject},#{campus})
  </insert>

  <!-- 插入商品列表 -->
  <insert id="insertGoodsList" parameterType="com.xue.entity.model.GoodsList">
    insert goods_list(goods_name,goods_intro,goods_price,create_time,studio,photo,campus,uuids,is_group) values(#{goods_name},#{goods_intro},#{goods_price},#{create_time},#{studio},#{photo},#{campus},#{uuids},#{is_group})
  </insert>

  <!-- 插入团购列表 -->
  <insert id="insertGroupBuy" parameterType="com.xue.entity.model.GoodsList">
    insert group_buy(goods_id,goods_name,nick_name,openid,create_time,studio) values(#{goods_id},#{goods_name},#{nick_name},#{openid},#{create_time},#{studio})
  </insert>

  <!-- 获取商品列表 -->
  <select id="getGoodsList" parameterType="com.xue.entity.model.GoodsList" resultMap="BaseGoodsList">
    select id,goods_name,goods_intro,goods_price,create_time,studio,photo,uuids,is_group from goods_list where studio = #{param1} and delete_status = 0 order by create_time desc,id asc limit #{param2},#{param3};
  </select>

  <!-- 获取团购列表 -->
  <select id="getGroupBuy" parameterType="com.xue.entity.model.GroupBuy" resultMap="BaseGroupBuy">
    select id,goods_id,goods_name,nick_name,openid,create_time,studio from group_buy where studio = #{param1} and goods_id =#{param2} and delete_status = 0 order by create_time desc;
  </select>

  <!-- 查找课程表 -->
  <select id="getArrangement" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseArrangement">
    select id,dayofweek,class_number,duration,limits,photo,studio,subject from schedule_arrangement where studio = #{param1} and dayofweek =#{param2} and subject =#{param3} and campus =#{param4} and delete_status = 0 order by duration
  </select>

  <select id="getArrangementByDay" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseArrangement">
    select id,dayofweek,class_number,duration,limits,photo,studio,subject from schedule_arrangement where studio = #{param1} and dayofweek =#{param2} and campus =#{param3} and delete_status = 0 order by duration
  </select>

  <!-- 查找订单 -->
  <select id="getMyOrder" parameterType="com.xue.entity.model.Order" resultMap="BaseOrder">
    select id,nick_name,openid,phone_number,location,goods_name,goods_intro,goods_price,studio,create_time,status from `order` where studio = #{param1} and openid =#{param2} and delete_status = 0 order by create_time
  </select>

  <!-- 查找全部订单 -->
  <select id="getAllOrder" parameterType="com.xue.entity.model.Order" resultMap="BaseOrder">
    select id,nick_name,openid,phone_number,location,goods_name,goods_intro,goods_price,studio,create_time,status from `order` where studio = #{param1} and delete_status = 0 order by status,openid,create_time
  </select>

  <!-- 查找课程表 -->
  <select id="getArrangementAll" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseArrangement">
    select id,dayofweek,class_number,duration,limits,photo,studio,subject from schedule_arrangement where studio = #{param1} and dayofweek =#{param2} and campus =#{param3} and delete_status = 0 order by duration
  </select>

  <!-- 查找课程表 -->
  <select id="getArrangementByDate" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseArrangement">
    select id,dayofweek,class_number,duration,limits,photo,studio,subject from schedule_arrangement where studio = #{param1} and dayofweek =#{param2} and class_number =#{param3} and duration =#{param4} and subject =#{param5} and campus =#{param6} and delete_status = 0 order by duration
  </select>

  <!-- 查找请假记录 -->
  <select id="getLeaveRecord" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    select id,student_name,date_time,studio,create_time,duration,leave_type,mark_leave,subject,makeup_date,ending_status from leave_record where student_name =#{param1} and studio = #{param2} and leave_type = #{param3} and subject = #{param4} and campus = #{param5} and delete_status = 0 order by student_name,date_time desc
  </select>

  <select id="getLeaveRecordByStatus" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    select id,student_name,date_time,studio,create_time,duration,leave_type,mark_leave,subject,makeup_date,ending_status from leave_record where student_name =#{param1} and studio = #{param2} and subject = #{param3} and campus = #{param4} and delete_status = 0 and ending_status = 0 order by date_time desc
  </select>

  <!-- 查找请假记录 -->
  <select id="getLeaveRecordAll" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    select id,student_name,date_time,studio,create_time,duration,leave_type,mark_leave,subject,makeup_date,ending_status from leave_record where studio = #{param2} and leave_type = #{param3} and subject = #{param4} and campus = #{param5} and delete_status = 0 order by date_time desc
  </select>

  <!-- 发放礼物记录 -->
  <insert id="insertGift" parameterType="com.xue.entity.model.Gift">
    insert gift_record(student_name,gift_name,create_time,expired_time,studio,gift_amount,status,campus) values(#{student_name},#{gift_name},#{create_time},#{expired_time},#{studio},#{gift_amount},#{status},#{campus})
  </insert>

  <!-- 查找签到记录 -->
  <select id="getSignUp" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select id,student_name,create_time,studio,sign_time,mark,duration,count,subject,ending_status from sign_up_record where student_name =#{param1} and delete_status = 0 and studio = #{param2} and subject = #{param3}  order by create_time desc
  </select>

  <!-- 查找签到记录 -->
  <select id="getStudentByTeacher" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select id,student_name,create_time,studio,sign_time,mark,duration,count,subject,teacher from sign_up_record where delete_status = 0 and studio = #{param1} and teacher = #{param2}  order by create_time desc
  </select>

  <select id="getStudentByTeacherAll" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select id,student_name,create_time,studio,sign_time,mark,duration,count,subject,teacher from sign_up_record where delete_status = 0
  </select>

  <update id="updateSignUpTeacher" parameterType="com.xue.entity.model.Schedule">
    update sign_up_record set teacher=#{param1} where id=#{param2}
  </update>

  <!-- 查找签到记录 -->
  <select id="getStudentByTeacherByDuration" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select id,student_name,create_time,studio,sign_time,mark,duration,count,subject,teacher from sign_up_record where delete_status = 0 and studio = #{param1} and teacher = #{param2} and sign_time between #{param3} and #{param4} order by sign_time desc
  </select>

  <!-- 查找签到记录 -->
  <select id="getSignUpByDate" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select id,student_name,create_time,studio,sign_time,mark,duration from sign_up_record where student_name =#{param1} and delete_status = 0 and studio = #{param2} and create_time=#{param3} and campus =#{param4} and subject =#{param5} order by create_time
  </select>

  <!-- 查找签到记录 -->
  <select id="getSignUpByDateDuration" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select id,student_name,create_time,studio,sign_time,mark,duration,count,subject,class_number,teacher from sign_up_record where student_name =#{param1} and studio = #{param2} and create_time=#{param3} and delete_status = 0 and duration=#{param4} and campus =#{param5} and subject =#{param6} order by create_time desc
  </select>

  <!-- 查找请假记录 -->
  <select id="getLeaveByDateDuration" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    select id,student_name,date_time,studio,create_time,duration,leave_type,mark_leave,makeup_date from leave_record where student_name =#{param1} and studio = #{param2} and date_time=#{param3} and duration=#{param4} and delete_status = 0 order by create_time
  </select>

  <!-- 查找课评记录 -->
  <select id="getCommentByDate" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select student_name,duration from class_comment where class_target_bak =#{param5} and student_name =#{param1} and studio = #{param2} and date_format(create_time, '%Y-%m-%d') = #{param3} and campus =#{param4} and delete_status = 0  order by create_time
  </select>

  <!-- 查找课评记录 -->
  <select id="getCommentByDateDuration" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select student_name,duration from class_comment where class_target_bak =#{param6} and student_name =#{param1} and studio = #{param2} and date_format(create_time, '%Y-%m-%d') = #{param3} and cast(replace(replace(duration,':',''),'-','') as signed)=cast(replace(replace(#{param4},':',''),'-','') as signed) and campus =#{param5} and delete_status = 0 order by create_time
  </select>

  <!-- 查找礼物记录 -->
  <select id="getGift" parameterType="com.xue.entity.model.Gift" resultMap="BaseGift">
    select id,student_name,gift_name,create_time,expired_time,studio,gift_amount,status from gift_record where student_name =#{param1} and studio = #{param2} order by expired_time desc
  </select>

  <!-- 更新课时 -->
  <update id="updateSchedule" parameterType="com.xue.entity.model.Schedule">
    update class_schedule set update_time=#{update_time} where student_name=#{student_name} and studio = #{studio} and campus = #{campus}
  </update>

  <!-- 更新课时 -->
  <update id="updateRemind" parameterType="com.xue.entity.model.Schedule">
    update class_schedule set remind=#{param1} where subject=#{param2} and studio = #{param3} and duration = #{param4} and class_number = #{param5} and dayofweek(add_date) =#{param6} and campus =#{param7}
  </update>

  <!-- 更新名字 -->
  <update id="updateScheduleName" parameterType="com.xue.entity.model.Schedule">
    update class_schedule set student_name=#{param1} where student_name=#{param2} and studio =#{param3} and campus =#{param4} and subject =#{param5}
  </update>

  <update id="updateCommentName" parameterType="com.xue.entity.model.Message">
    update class_comment set student_name=#{param1} where student_name=#{param2} and studio =#{param3} and campus =#{param4}
  </update>

  <update id="updateGiftRecordName" parameterType="com.xue.entity.model.Gift">
    update gift_record set student_name=#{param1} where student_name=#{param2} and studio = #{param3} and campus =#{param4} and subject =#{param5}
  </update>

  <update id="updateLessonName" parameterType="com.xue.entity.model.Lesson">
    update lesson set student_name=#{param1} where student_name=#{param2} and studio = #{param3} and campus =#{param4} and subject =#{param5}
  </update>

  <update id="updateSignUpRecordName" parameterType="com.xue.entity.model.SignUp">
    update sign_up_record set student_name=#{param1} where student_name=#{param2} and studio = #{param3} and campus =#{param4} and subject =#{param5}
  </update>

  <!-- 更新课评 -->
  <update id="updateComment" parameterType="com.xue.entity.model.Message">
    update class_comment set class_target=#{class_target},comment=#{comment} where id=#{id} and studio = #{studio}
  </update>

  <!-- 更新课评 -->
  <update id="updateDetailPhoto" parameterType="com.xue.entity.model.Message">
    update class_comment set photo=#{photo},uuids=#{uuids} where id=#{id} and studio = #{studio}
  </update>

  <!-- 更新课时 -->
  <update id="updateGift" parameterType="com.xue.entity.model.Gift">
    update gift_record set status=1 where id=#{param1}
  </update>

  <!-- 插入客户信息 -->
  <insert id="insertUser" parameterType="com.xue.entity.model.User">
    insert user(nick_name,student_name,role,openid,create_time,avatarurl,studio,user_type,expired_time,comment_style,send_time,display,cover,campus,phone_number,location,remind_type,hours,unionid,official_openid,subscription) values(#{nick_name},#{student_name},#{role},#{openid},#{create_time},#{avatarurl},#{studio},#{user_type},#{expired_time},#{comment_style},#{send_time},#{display},#{cover},#{campus},#{phone_number},#{location},#{remind_type},#{hours},#{unionid},#{official_openid},#{subscription})
  </insert>

  <insert id="insertRestaurantUser" parameterType="com.xue.entity.model.RestaurantUser">
    insert restaurant_user(nick_name,role,openid,create_time,avatarurl,restaurant,expired_time) values(#{nick_name},#{role},#{openid},#{create_time},#{avatarurl},#{restaurant},#{expired_time})
  </insert>

  <insert id="insertBookUser" parameterType="com.xue.entity.model.BookUser">
    insert book_user(nick_name,role,openid,create_time,avatarurl,expired_time) values(#{nick_name},#{role},#{openid},#{create_time},#{avatarurl},#{expired_time})
  </insert>

  <select id="getUser" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where openid =#{param1} and delete_status = 0 order by id desc limit 1
  </select>

  <select id="getRestaurantUser" parameterType="com.xue.entity.model.RestaurantUser" resultMap="BaseRestaurantUser">
    select * from restaurant_user where openid =#{param1} and delete_status = 0 order by id desc limit 1
  </select>

  <select id="getBookUser" parameterType="com.xue.entity.model.BookUser" resultMap="BaseBookUser">
    select * from book_user where openid =#{param1} and delete_status = 0 order by id desc limit 1
  </select>

  <select id="getBookUserByBookName" parameterType="com.xue.entity.model.BookUser" resultMap="BaseBookUser">
    select * from book_user where book_name =#{param1} and delete_status = 0 order by id desc limit 1
  </select>

  <select id="getBookUserById" parameterType="com.xue.entity.model.BookUser" resultMap="BaseBookUser">
    select * from book_user where id =#{param1} and delete_status = 0 order by id desc limit 1
  </select>

  <select id="getBBookDetail" parameterType="com.xue.entity.model.BookDetail" resultMap="BaseBookDetail">
    select * from book_detail where openid =#{param1} and create_time =#{param2} and book_name =#{param3} and delete_status = 0 order by update_time desc
  </select>

  <select id="getRestaurantUserAll" parameterType="com.xue.entity.model.RestaurantUser" resultMap="BaseRestaurantUser">
    select * from restaurant_user where delete_status = 0 order by restaurant,role
  </select>

  <select id="getRestaurantUserByShop" parameterType="com.xue.entity.model.RestaurantUser" resultMap="BaseRestaurantUser">
    select * from restaurant_user where restaurant =#{param1} and delete_status = 0 order by restaurant,role
  </select>

  <select id="getRestaurantOrderByOpenid" parameterType="com.xue.entity.model.RestaurantOrder" resultMap="BaseRestaurantOrder">
    select * from restaurant_order where openid =#{param1} and delete_status = 0 order by create_time desc
  </select>

  <select id="getRestaurantOrderByShop" parameterType="com.xue.entity.model.RestaurantOrder" resultMap="BaseRestaurantOrder">
    select * from restaurant_order where restaurant =#{param1} and delete_status = 0 order by create_time desc
  </select>

  <select id="getRestaurantCategory" parameterType="com.xue.entity.model.Menu" resultMap="BaseRestaurantMenu">
    select distinct category from restaurant_menu where restaurant =#{param1} and delete_status = 0 order by category
  </select>

  <select id="getRestaurantMenu" parameterType="com.xue.entity.model.Menu" resultMap="BaseRestaurantMenu">
    select * from restaurant_menu where restaurant =#{param1} and delete_status = 0 order by category
  </select>

  <select id="getUserSendTime" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where studio =#{param1} and role ='boss' and delete_status = 0 order by create_time limit 1
  </select>

  <select id="getUserByOpenid" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where openid =#{param1} and delete_status = 0 order by create_time desc
  </select>

  <select id="getUserByUnionid" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select id,nick_name,student_name,role,openid,create_time,avatarurl,studio,user_type,expired_time,coins,comment_style,theme,display,cover,phone_number,location,lessons,subjects,campus,back_uuid,unionid,official_openid from user where unionid =#{param1} and delete_status = 0 order by create_time desc
  </select>

  <select id="getRestaurantUserByUnionid" parameterType="com.xue.entity.model.RestaurantUser" resultMap="BaseRestaurantUser">
    select * from restaurant_user where unionid =#{param1} and delete_status = 0 order by create_time desc
  </select>

  <select id="getUserByChooseLesson" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select id,nick_name,student_name,role,openid,create_time,avatarurl,studio,user_type,expired_time,coins,comment_style,theme,display,cover,phone_number,location,lessons,subjects,campus,back_uuid,unionid,official_openid from user where lessons like "%"#{param1}"%" and role in ('boss','teacher') and studio =#{param2}  and delete_status = 0;
  </select>

  <select id="getUserByOpenidIgnore" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select id,nick_name,student_name,role,openid,create_time,avatarurl,studio,user_type,expired_time,coins,comment_style,theme,display,cover,phone_number,location,lessons,subjects,campus from user where openid =#{param1} order by create_time desc limit 1
  </select>

  <select id="getUserByStudent" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where student_name =#{param1} and studio =#{param2} and delete_status = 0 order by create_time desc
  </select>

  <select id="getUserByStudentOpenid" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where student_name =#{param1} and studio =#{param2} and openid =#{param3} and delete_status = 0 order by create_time desc
  </select>

  <select id="getUserByNickStudio" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where (nick_name like "%"#{param1}"%" or campus like "%"#{param1}"%" or student_name like "%"#{param1}"%") and studio =#{param2} and delete_status = 0 order by role
  </select>

  <select id="getUserByNickStudioEq" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where nick_name = #{param1} and studio =#{param2} and delete_status = 0 order by create_time desc limit 1
  </select>

  <select id="getUserByNickName" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where (nick_name like "%"#{nick_name}"%" or student_name like "%"#{nick_name}"%" or studio like "%"#{nick_name}"%") and delete_status = 0 order by role
  </select>

  <select id="getUserByStudio" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where studio =#{param1} and campus =#{param2} and delete_status = 0 order by role
  </select>

  <select id="getAllUserByStudio" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where studio =#{param1} and delete_status = 0 order by role
  </select>

  <select id="getAllUserByStudioByPage" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where studio =#{param1} and delete_status = 0 order by role asc,id asc limit #{param2},#{param3};
  </select>

  <select id="getBossByStudio" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where  studio =#{param1} and role in ('boss','teacher') and delete_status = 0 order by role
  </select>

  <select id="getBossByStudioOnly" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where  studio =#{param1} and role in ('boss') and delete_status = 0 order by create_time
  </select>

  <select id="getAllUser" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where delete_status = 0 order by remind_type desc
  </select>

  <select id="getAllBoss" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select * from user where role in ('boss') and delete_status = 0 order by remind_type desc
  </select>

  <!-- 更新工作室 -->
  <update id="updateUser" parameterType="com.xue.entity.model.User">
    update user set studio=#{studio}, create_time=#{create_time},campus=#{campus},comment_style=#{comment_style} where openid = #{openid} and delete_status = 0
  </update>

  <!-- 更新工作室 -->
  <update id="updateOpenid" parameterType="com.xue.entity.model.User">
    update user set openid =#{openid} where studio=#{studio} and campus=#{campus} and nick_name=#{nick_name} and delete_status = 0
  </update>

  <update id="updateOpenidById" parameterType="com.xue.entity.model.User">
    update user set openid =#{param2} where openid=#{param1} and delete_status = 0
  </update>

  <!-- 更新头像 -->
  <update id="updateAvatar" parameterType="com.xue.entity.model.User">
    update user set avatarurl=#{avatarurl} where openid = #{openid}
  </update>

  <update id="updateLessonAgeById" parameterType="com.xue.entity.model.Lesson">
    update lesson set age=#{param2} where id = #{param1}
  </update>

  <update id="updateLessonStudentNameById" parameterType="com.xue.entity.model.Lesson">
    update lesson set student_name=#{param2} where id = #{param1}
  </update>

  <update id="updateLessonSubjectById" parameterType="com.xue.entity.model.Lesson">
    update lesson set subject=#{param2} where id = #{param1}
  </update>

  <update id="updateLessonCampusById" parameterType="com.xue.entity.model.Lesson">
    update lesson set campus=#{param2} where id = #{param1}
  </update>

  <update id="updateRestaurantAvatar" parameterType="com.xue.entity.model.RestaurantUser">
    update restaurant_user set avatarurl=#{avatarurl} where openid = #{openid}
  </update>

  <update id="updateBookAvatar" parameterType="com.xue.entity.model.BookUser">
    update book_user set avatarurl=#{avatarurl} where openid = #{openid}
  </update>

  <update id="updateBookDetailBookName" parameterType="com.xue.entity.model.BookDetail">
    update book_detail set book_name=#{param2} where book_name = #{param1}
  </update>

  <update id="updateRestaurantNickName" parameterType="com.xue.entity.model.RestaurantUser">
    update restaurant_user set nick_name=#{nick_name} where openid = #{openid}
  </update>

  <update id="updateBookNickName" parameterType="com.xue.entity.model.BookUser">
    update book_user set nick_name=#{nick_name} where openid = #{openid}
  </update>

  <update id="updateRestaurantLogo" parameterType="com.xue.entity.model.RestaurantUser">
    update restaurant_user set logo=#{logo} where openid = #{openid}
  </update>

  <update id="updateBookLogo" parameterType="com.xue.entity.model.BookUser">
    update book_user set logo=#{logo} where openid = #{openid}
  </update>

  <update id="updateRestaurantOrderStatus" parameterType="com.xue.entity.model.RestaurantOrder">
    update restaurant_order set status=#{param2} where id = #{param1}
  </update>

  <update id="updateRestaurantName" parameterType="com.xue.entity.model.RestaurantUser">
    update restaurant_user set restaurant=#{restaurant} where openid = #{openid}
  </update>

  <update id="updateRestaurantRole" parameterType="com.xue.entity.model.RestaurantUser">
    update restaurant_user set role=#{role} where openid = #{openid}
  </update>

  <update id="updateBookRole" parameterType="com.xue.entity.model.BookUser">
    update book_user set role=#{role} where openid = #{openid}
  </update>

  <update id="updateBookName" parameterType="com.xue.entity.model.BookUser">
    update book_user set book_name=#{book_name} where id = #{id}
  </update>

  <update id="updateBudget" parameterType="com.xue.entity.model.BookUser">
    update book_user set budget=#{budget} where id = #{id}
  </update>

  <update id="updateRestaurantMenuImage" parameterType="com.xue.entity.model.Menu">
    update restaurant_menu set food_image=#{food_image} where id = #{id}
  </update>

  <update id="deleteRestaurantFood" parameterType="com.xue.entity.model.Menu">
    update restaurant_menu set delete_status = 1 where id = #{param1}
  </update>

  <!-- 恢复已删除用户 -->
  <update id="updateUserDelete" parameterType="com.xue.entity.model.User">
    update user set studio=#{studio},create_time=#{create_time},campus=#{campus},delete_status=0 where openid = #{openid} and delete_status=1 and student_name = #{student_name}
  </update>

  <update id="updateUserBackUrl" parameterType="com.xue.entity.model.User">
    update user set back_uuid=#{back_uuid} where openid = #{openid} and delete_status=0
  </update>

  <update id="updateClassSendStatus" parameterType="com.xue.entity.model.Schedule">
    update class_schedule set send_status=#{param2} where id = #{param1} and delete_status=0
  </update>

  <update id="updateClassSendStatusByOpenid" parameterType="com.xue.entity.model.User">
    update user set send_status=#{param2} where openid = #{param1} and delete_status=0
  </update>

  <update id="updateClassSendStatusByStudio" parameterType="com.xue.entity.model.Schedule">
    update class_schedule set send_status=#{param2} where studio = #{param1} and delete_status=0
  </update>

  <update id="updateCommunicateContent" parameterType="com.xue.entity.model.CommunicateRecord">
    update communicate_record set content=#{param2} where id =#{param1} and delete_status=0
  </update>

  <update id="updateCommunicateUuids" parameterType="com.xue.entity.model.CommunicateRecord">
    update communicate_record set uuids=#{param2} where id =#{param1} and delete_status=0
  </update>

  <!-- 更新选课 -->
  <update id="updateBossLessons" parameterType="com.xue.entity.model.User">
    update user set lessons=#{lessons} where openid = #{openid}
  </update>

  <!-- 更新课评风格 -->
  <update id="updateComentStyle" parameterType="com.xue.entity.model.User">
    update user set comment_style=#{comment_style} where studio = #{studio}
  </update>

  <update id="updateIsOpen" parameterType="com.xue.entity.model.User">
    update user set is_open=#{is_open} where studio = #{studio}
  </update>

  <!-- 更新提醒时间 -->
  <update id="updateSendTime" parameterType="com.xue.entity.model.User">
    update user set send_time=#{send_time},remind_type=#{remind_type} where studio = #{studio}
  </update>

  <update id="updateHours" parameterType="com.xue.entity.model.User">
    update user set hours=#{hours},remind_type=#{remind_type} where studio = #{studio}
  </update>

  <select id="getComentStyle" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select comment_style from user where studio = #{studio} and role = 'boss' and delete_status = 0 order by create_time limit 1
  </select>

  <select id="getStudio" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select distinct studio from user where delete_status = 0 order by studio
  </select>

  <select id="getStudioBoss" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select distinct studio from user where delete_status = 0 and (role = #{param1} or member = #{param1}) order by studio
  </select>

  <select id="getSubjectByStudio" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select distinct subject from lesson where delete_status = 0 and studio =#{param1} and campus =#{param2}
  </select>

  <select id="getClassNumbers" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select distinct class_number from class_schedule where studio = #{param1}
  </select>

  <select id="getArrangements" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseArrangement">
    select distinct dayofweek,class_number,duration,studio,subject,campus from schedule_arrangement where studio =#{param1} and campus =#{param2} and delete_status = 0 order by dayofweek,duration,subject
  </select>

  <select id="getArrangementById" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseArrangement">
    select distinct dayofweek,class_number,duration,studio,subject from schedule_arrangement where studio =#{param1} and id =#{param2} and delete_status = 0
  </select>

  <select id="getOpenidByNick" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select distinct openid from user where student_name =#{param1} and studio = #{param2} and delete_status = 0
  </select>

  <!-- 插入课时 -->
  <insert id="insertNote" parameterType="com.xue.entity.model.Lesson">
    insert class_note(subject,student_name,studio,create_time,note_content,campus) values(#{subject},#{student_name},#{studio},#{create_time},#{note_content},#{campus})
  </insert>

  <insert id="insertRestaurantMenu" parameterType="com.xue.entity.model.Menu">
    insert restaurant_menu(restaurant,food_name,food_image,category,introduce,price,create_time) values(#{restaurant},#{food_name},#{food_image},#{category},#{introduce},#{price},#{create_time})
  </insert>

  <insert id="insertRestaurantOrder" parameterType="com.xue.entity.model.RestaurantOrder">
    insert restaurant_order(restaurant,food_name,category,num,price,create_time,openid) values(#{restaurant},#{food_name},#{category},#{num},#{price},#{create_time},#{openid})
  </insert>

  <insert id="insertLessonPackage" parameterType="com.xue.entity.model.LessonPackage">
    insert lesson_package(student_name,total_money,discount_money,mark,start_date,end_date,campus,studio,create_time,all_lesson,give_lesson,subject,nick_name) values(#{student_name},#{total_money},#{discount_money},#{mark},#{start_date},#{end_date},#{campus},#{studio},#{create_time},#{all_lesson},#{give_lesson},#{subject},#{nick_name})
  </insert>

  <!-- 插入通知 -->
  <insert id="insertAnnouncement" parameterType="com.xue.entity.model.Announcement">
    insert announcement(studio,create_time,content,campus,title) values(#{studio},#{create_time},#{content},#{campus},#{title})
  </insert>

  <!-- 插入课时 -->
  <insert id="insertLesson" parameterType="com.xue.entity.model.Lesson">
    insert lesson(student_name,total_amount,left_amount,points,create_time,studio,minus,coins,subject,campus,price,total_money,discount_money,age) values(#{student_name},#{total_amount},#{left_amount},#{points},#{create_time},#{studio},#{minus},#{coins},#{subject},#{campus},#{price},#{total_money},#{discount_money},#{age})
  </insert>

  <select id="getLessonPackageById" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select id,student_name,total_money,discount_money,mark,start_date,end_date,campus,studio,create_time,all_lesson,give_lesson,subject from lesson_package where id =#{param1} and delete_status = 0 order by create_time desc
  </select>

  <select id="getLessonPackage" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select * from lesson_package where student_name =#{param1} and studio =#{param2} and campus =#{param3} and subject =#{param4} and delete_status = 0 order by create_time desc
  </select>

  <select id="getLessonPackageAll" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select * from lesson_package where studio =#{param1} and campus =#{param2} and subject =#{param3} and delete_status = 0 order by student_name,create_time desc
  </select>

  <select id="getLessonPackageByDuration" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select * from lesson_package where student_name =#{param1} and studio =#{param2} and campus =#{param3} and subject =#{param4} and create_time between #{param5} and #{param6}  and delete_status = 0 order by create_time desc
  </select>

  <select id="getLessonPackageByDurationAll" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select * from lesson_package where studio =#{param1} and campus =#{param2} and subject =#{param3} and create_time between #{param4} and #{param5} and delete_status = 0 order by student_name,create_time desc
  </select>

  <!-- 获取续课总人数 -->
  <select id="getLessonPackageAllCount" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseAllCount">
    select count(distinct student_name) student_count,sum(total_money) total_price,sum(discount_money) left_price,sum(all_lesson) total_amount,sum(give_lesson) left_amount from lesson_package where studio =#{param1} and campus =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and delete_status = 0
  </select>

  <select id="getLessonPackageRenew" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select * from lesson_package where studio =#{param1} and campus =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and delete_status = 0
  </select>

  <select id="getLessonNew" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and campus =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and delete_status = 0
  </select>

  <select id="getLessonLoss" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and campus =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and delete_status = 1
  </select>

  <select id="getLessonAllCountNewStudent" parameterType="com.xue.entity.model.Lesson" resultMap="BaseAllCount">
    select count(distinct student_name) student_count from lesson where studio =#{param1} and campus =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and delete_status = 0
  </select>

  <select id="getLessonAllCountLossStudent" parameterType="com.xue.entity.model.Lesson" resultMap="BaseAllCount">
    select count(distinct student_name) student_count from lesson where studio =#{param1} and campus =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and delete_status = 1
  </select>

  <select id="getLessonPackageByStudent" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select id,student_name,total_money,discount_money,mark,start_date,end_date,campus,studio,create_time,all_lesson,give_lesson,subject from lesson_package where student_name =#{param1} and studio =#{param2} and campus =#{param3} and delete_status = 0 order by create_time desc
  </select>

  <select id="getLessonPackageByStudentSubject" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select id,student_name,total_money,discount_money,mark,start_date,end_date,campus,studio,create_time,all_lesson,give_lesson,subject from lesson_package where student_name =#{param1} and studio =#{param2} and campus =#{param3} and subject =#{param4} and delete_status = 0 order by create_time desc
  </select>

  <select id="getLessonPackageByCampus" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select id,student_name,total_money,discount_money,mark,start_date,end_date,campus,studio,create_time,all_lesson,give_lesson,subject from lesson_package where studio =#{param1} and campus =#{param2} and delete_status = 0 order by create_time desc
  </select>

  <select id="getLessonPackageBySubject" parameterType="com.xue.entity.model.LessonPackage" resultMap="BaseLessonPackage">
    select id,student_name,total_money,discount_money,mark,start_date,end_date,campus,studio,create_time,all_lesson,give_lesson,subject from lesson_package where studio =#{param1} and campus =#{param2} and subject =#{param3} and delete_status = 0 order by create_time desc
  </select>

  <!-- 获取课时 -->
  <select id="getLesson" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and campus =#{param2} and delete_status = 0 order by left_amount,id
  </select>

  <!-- 获取课时 -->
  <select id="getLessonByPage" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and campus =#{param2} and delete_status = 0 order by left_amount,id limit #{param3},#{param4};
  </select>

  <select id="getClassNote" parameterType="com.xue.entity.model.Note" resultMap="BaseNote">
    select id,subject,student_name,studio,create_time,note_content from class_note where subject =#{param1} and studio =#{param2} and student_name =#{param3} order by create_time desc
  </select>

  <select id="getAnnouncement" parameterType="com.xue.entity.model.Announcement" resultMap="BaseAnnouncement">
    select * from announcement where studio =#{param1} order by create_time desc limit 30
  </select>

  <!-- 获取课时 -->
  <select id="getLessonBySubject" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select id,student_name,total_amount,left_amount,create_time,points,studio,minus,coins,delete_status,subject,final_time,leave_times from lesson where studio =#{param1} and subject =#{param2} and campus =#{param3} and delete_status = 0 order by left_amount
  </select>

  <select id="getLessonByStudio" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select id,student_name,total_amount,left_amount,create_time,points,studio,minus,coins,delete_status,subject,campus,final_time,leave_times from lesson where studio =#{param1} and delete_status = 0
  </select>

  <select id="getLessonByStudioCampus" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and campus =#{param2} and delete_status = 0
  </select>

  <!-- 分页分科目获取课时 -->
  <select id="getLessonBySubjectByPage" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and subject =#{param2} and campus =#{param3} and delete_status = 0 order by left_amount limit #{param4},#{param5};
  </select>

  <!-- 获取课时 -->
  <select id="getTipsDataUrl" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and left_amount &lt; #{param2} and subject =#{param3} and campus =#{param4} and delete_status = 0 order by left_amount
  </select>

  <!-- 获取课时 -->
  <select id="getTipsDataUrlAll" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and left_amount &lt; #{param2} and campus =#{param3} and delete_status = 0 order by left_amount
  </select>


  <select id="getGoneStudent" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and campus =#{param2} and delete_status = 1 order by create_time desc
  </select>


  <!-- 获取总人数 -->
  <select id="getLessonAllCount" parameterType="com.xue.entity.model.Lesson" resultMap="BaseAllCount">
    select count(distinct student_name) student_count,sum(total_amount) total_amount,sum(left_amount) left_amount,sum(total_amount*price) total_price,sum(left_amount*price) left_price from lesson where studio =#{param1} and campus =#{param2} and delete_status = 0
  </select>

  <!-- 获取总人数 -->
  <select id="getLessonAllCountBySubject" parameterType="com.xue.entity.model.Lesson" resultMap="BaseAllCount">
    select count(distinct student_name) student_count,sum(total_amount) total_amount,sum(left_amount) left_amount,sum(total_amount*price) total_price,sum(left_amount*price) left_price from lesson where studio =#{param1} and subject =#{param2} and campus =#{param3} and delete_status = 0
  </select>

  <!-- 获取总人数 -->
  <select id="getLessonNeedPayCount" parameterType="com.xue.entity.model.Lesson" resultType="java.lang.Integer">
    select count(distinct student_name) from lesson where left_amount &lt; 5 and studio =#{param1} and campus =#{param2} and delete_status = 0;
  </select>

  <!-- 获取总人数 -->
  <select id="getLessonNeedPayCountBySubject" parameterType="com.xue.entity.model.Lesson" resultType="java.lang.Integer">
    select count(distinct student_name) from lesson where left_amount &lt; 5 and studio =#{param1} and subject =#{param2} and campus =#{param3} and delete_status = 0;
  </select>

  <!-- 获取总人数 -->
  <select id="getLessonOweCount" parameterType="com.xue.entity.model.Lesson" resultType="java.lang.Integer">
    select count(distinct student_name) from lesson where left_amount &lt; 0 and studio =#{param1} and campus =#{param2} and delete_status = 0;
  </select>

  <!-- 获取总人数 -->
  <select id="getLessonOweCountBySubject" parameterType="com.xue.entity.model.Lesson" resultType="java.lang.Integer">
    select count(distinct student_name) from lesson where left_amount &lt; 0 and studio =#{param1} and subject =#{param2} and campus =#{param3} and delete_status = 0;
  </select>

  <!-- 获取总人数 -->
  <select id="getLessonAllCountByDay" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select count(distinct student_name) from class_schedule where studio =#{param1} and dayofweek(add_date) =#{param2} and replace(replace(duration,':',''),'-','') =replace(replace(#{param3},':',''),'-','') and class_number =#{param4} and subject =#{param5} and campus =#{param6} and student_type ='ordinary' and is_try = 0 and delete_status = 0
  </select>

  <!-- 获取提醒状态 -->
  <select id="getScheduleRemind" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select distinct remind from class_schedule where studio =#{param1} and dayofweek(add_date) =#{param2} and replace(replace(duration,':',''),'-','') =replace(replace(#{param3},':',''),'-','') and class_number =#{param4} and subject =#{param5} and student_type ='ordinary' and delete_status = 0 limit 1
  </select>

  <!-- 获取提醒状态 -->
  <select id="getCampusByStudio" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select distinct campus from lesson where studio =#{param1} and delete_status = 0
  </select>

  <select id="getLessonById" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where id =#{param1};
  </select>

  <!-- 获取总人数 -->
  <select id="getLessonAllCountBySumUp" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select count(student_name) lesson_count from class_schedule where studio =#{param1} and student_type ='ordinary' and campus =#{param2} and dayofweek(add_date)=dayofweek(#{param3}) and delete_status = 0
  </select>

  <select id="getLessonAllCountBySumUpByStudent" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select count(student_name) lesson_count from class_schedule where studio =#{param1} and student_type ='ordinary' and campus =#{param2} and dayofweek(add_date)=dayofweek(#{param3}) and student_name =#{param4} and delete_status = 0
  </select>

  <select id="getLessonAllCountBySumUpMonth" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select count(student_name) lesson_count from class_schedule where studio =#{param1} and student_type ='ordinary' and campus =#{param2} and dayofweek(add_date) between 0 and 7 and delete_status = 0
  </select>

  <select id="getLessonAllCountBySumUpMonthByStudent" parameterType="com.xue.entity.model.AnalyzeCount" resultMap="BaseAnalyzeCount">
    select count(student_name) lesson_count from class_schedule where studio =#{param1} and student_type ='ordinary' and campus =#{param2} and student_name =#{param3} and dayofweek(add_date) between 0 and 7 and delete_status = 0
  </select>

  <!-- 获取总人数 -->
  <select id="getLessonAllCountByDayByName" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select count(distinct student_name) from class_schedule where studio =#{param1} and dayofweek(add_date) =#{param2} and replace(replace(duration,':',''),'-','') =replace(replace(#{param3},':',''),'-','') and class_number =#{param4} and subject =#{param5} and student_name =#{param6} and campus =#{param7} and student_type ='ordinary' and delete_status = 0 and is_try = 0
  </select>

  <!-- 获取总人数 -->
  <select id="getClassesCountAll" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select count(distinct student_name) from class_schedule where studio =#{param1} and campus =#{param2} and student_type ='ordinary' and is_try = 0 and delete_status = 0
  </select>

  <!-- 获取总人数 -->
  <select id="getClassesCountAllLesson" parameterType="com.xue.entity.model.Lesson" resultType="java.lang.Integer">
    select count(distinct student_name) from lesson where studio =#{param1} and campus =#{param2} and delete_status = 0
  </select>

  <!-- 获取总人数 -->
  <select id="getClassesCountBySubject" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select count(distinct student_name) from class_schedule where studio =#{param1} and subject =#{param2} and campus =#{param3} and student_type ='ordinary' and is_try = 0 and delete_status = 0
  </select>

  <!-- 获取总报课数 -->
  <select id="getClassesCountBySubjectLesson" parameterType="com.xue.entity.model.Lesson" resultType="java.lang.Integer">
    select count(student_name) from lesson where studio =#{param1} and subject =#{param2} and campus =#{param3} and delete_status = 0
  </select>

  <!-- 获取单月课数 -->
  <select id="getSignUpByMonthAll" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select sum(count) from sign_up_record where studio =#{param1} and date_format(create_time,'%Y-%m') =#{param2} and campus=#{param3} and delete_status = 0
  </select>

  <!-- 获取单月课数 -->
  <select id="getSignUpByMonth" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select sum(count) from sign_up_record where studio =#{param1} and subject =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and campus=#{param4} and delete_status = 0
  </select>

  <!-- 获取单月学生课数 -->
  <select id="getSignUpByMonthStudent" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select sum(count) from sign_up_record where studio =#{param1} and subject =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and campus=#{param4} and student_name=#{param5} and delete_status = 0
  </select>

  <!-- 获取学生总耗课数 -->
  <select id="getAllSignUpByStudent" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Float">
    select sum(count) from sign_up_record where studio =#{param1} and subject =#{param2} and campus=#{param3} and student_name=#{param4} and delete_status = 0
  </select>

  <select id="getBookSumByMonth" parameterType="com.xue.entity.model.BookDetail" resultType="java.lang.Integer">
    select sum(amount) from book_detail where openid =#{param1} and book_name =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and delete_status = 0
  </select>

  <select id="getBookDetailByMonth" parameterType="com.xue.entity.model.BookDetail" resultMap="BaseBookDetail">
    select * from book_detail where openid =#{param1} and book_name =#{param2} and date_format(create_time,'%Y-%m') =#{param3} and delete_status = 0 order by create_time desc limit 1000
  </select>

  <!-- 获取学生单周报课数 -->
  <select id="getClassesCountByStudent" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select count(student_name) from class_schedule where studio =#{param1} and subject =#{param2} and campus =#{param3} and student_name =#{param4} and student_type ='ordinary' and is_try = 0 and delete_status = 0
  </select>

  <!-- 获取今天签到人数 -->
  <select id="getSignUpCountByDay" parameterType="com.xue.entity.model.SignUp" resultType="java.lang.Integer">
    select count(distinct student_name) from sign_up_record where studio =#{param1} and create_time =#{param2} and replace(replace(duration,':',''),'-','') =replace(replace(#{param3},':',''),'-','') and class_number =#{param4} and campus =#{param5} and subject =#{param6} and delete_status = 0
  </select>

  <!-- 获取课时 -->
  <select id="getLessonLikeName" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and student_name like "%"#{param2}"%" and campus =#{param3} order by left_amount
  </select>

  <!-- 获取课时 -->
  <select id="getLessonLikeNameBySubject" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and student_name like "%"#{param2}"%" and subject =#{param3} and campus =#{param4} order by left_amount
  </select>

  <!-- 获取课时 -->
  <select id="getLessonInName" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and find_in_set(student_name,#{param2}) and campus =#{param5} and delete_status = 0 order by left_amount limit #{param3},#{param4};
  </select>

  <!-- 获取课时 -->
  <select id="getLessonInNameBySubject" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where studio =#{param1} and find_in_set(student_name,#{param2}) and subject =#{param5} and campus =#{param6} and delete_status = 0 order by left_amount limit #{param3},#{param4};
  </select>

  <!-- 获取课时 -->
  <select id="getRating" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select id,student_name,total_amount,left_amount,create_time,points,studio,coins,subject,price from lesson where studio =#{param1} and campus =#{param4} and delete_status = 0 order by points desc,id asc limit #{param2},#{param3};
  </select>

  <!-- 获取课时 -->
  <select id="getRatingBySubject" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select id,student_name,total_amount,left_amount,create_time,points,studio,coins,subject,price from lesson where studio =#{param1} and subject =#{param4} and campus =#{param5} and delete_status = 0 order by points,id desc limit #{param2},#{param3};
  </select>

  <!-- 获取课时 -->
  <select id="getRatingByName" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select id,student_name,total_amount,left_amount,create_time,points,studio,subject,price from lesson where studio =#{param1} and student_name like "%"#{param2}"%" and delete_status = 0 order by student_name,id limit #{param3},#{param4};
  </select>

  <!-- 获取课时 -->
  <select id="getRatingByNameBySubject" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select id,student_name,total_amount,left_amount,create_time,points,studio,subject,price from lesson where studio =#{param1} and subject =#{param3} and student_name like "%"#{param2}"%" and delete_status = 0 order by student_name,id limit #{param3},#{param4};
  </select>

  <!-- 更新课时 -->
  <update id="updateLesson" parameterType="com.xue.entity.model.Lesson">
    update lesson set left_amount=#{left_amount}, total_amount=#{total_amount},minus=#{minus},coins=#{coins} where student_name=#{student_name} and studio =#{studio} and campus =#{campus} and subject =#{subject} and delete_status = 0
  </update>

  <update id="consumeLesson" parameterType="com.xue.entity.model.Lesson">
    update lesson set left_amount=#{left_amount} where student_name=#{student_name} and studio =#{studio} and campus =#{campus} and subject =#{subject} and delete_status = 0
  </update>

  <!-- 更新合课时 -->
  <update id="updateLessonBoth" parameterType="com.xue.entity.model.Lesson">
    update lesson set left_amount=#{left_amount}, total_amount=#{total_amount},minus=#{minus},coins=#{coins} where student_name=#{student_name} and studio =#{studio} and campus =#{campus} and delete_status = 0
  </update>

  <!-- 更新课时 -->
  <update id="updateLessonSubject" parameterType="com.xue.entity.model.Lesson">
    update lesson set subject=#{param1} where id=#{param2} and studio = #{param3} and subject=#{param4} and campus=#{param5} and delete_status = 0
  </update>

  <!-- 更新课时 -->
  <update id="updateCoinsAll" parameterType="com.xue.entity.model.Lesson">
    update lesson set coins=#{param1} where studio = #{param2} and campus =#{param3} and delete_status = 0
  </update>

  <update id="updateCoinsByStudent" parameterType="com.xue.entity.model.Lesson">
    update lesson set coins=#{param1} where studio = #{param2} and campus =#{param3} and subject=#{param5} and delete_status = 0 and student_name=#{param4}
  </update>

  <!-- 更新单价 -->
  <update id="updatePriceAll" parameterType="com.xue.entity.model.Lesson">
    update lesson set price =#{param1} where studio =#{param2} and campus =#{param3} and delete_status = 0
  </update>

  <update id="updatePriceByStudent" parameterType="com.xue.entity.model.Lesson">
    update lesson set price =#{param1} where studio =#{param2} and campus =#{param3} and subject=#{param5} and delete_status = 0 and student_name=#{param4}
  </update>

  <!-- 更新用户类型 -->
  <update id="updateUsertype" parameterType="com.xue.entity.model.User">
    update user set role=#{role}, user_type=#{user_type},create_time=#{create_time},expired_time=#{expired_time} where openid=#{openid}
  </update>

  <!-- 更新用户校区 -->
  <update id="updateUserCampus" parameterType="com.xue.entity.model.User">
    update user set campus=#{campus} where openid=#{openid}
  </update>

  <update id="updateUserStudioByOpenid" parameterType="com.xue.entity.model.User">
    update user set studio=#{studio} where openid=#{openid}
  </update>

  <!-- 更改工作室名 -->
  <update id="updateUserStudio" parameterType="com.xue.entity.model.User">
    update user set studio=#{param2},campus=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateUserUnionid" parameterType="com.xue.entity.model.User">
    update user set unionid=#{param2},app=#{param3} where openid=#{param1} and delete_status = 0
  </update>

  <update id="updateRestaurantUserUnionid" parameterType="com.xue.entity.model.RestaurantUser">
    update restaurant_user set unionid=#{param2} where openid=#{param1} and delete_status = 0
  </update>

  <update id="updateBookUserUnionid" parameterType="com.xue.entity.model.BookUser">
    update book_user set unionid=#{param2} where openid=#{param1} and delete_status = 0
  </update>

  <update id="updateUserOfficialOpenid" parameterType="com.xue.entity.model.User">
    update user set official_openid=#{param2} where unionid=#{param1} and delete_status = 0
  </update>

  <update id="updateRestaurantUserOfficialOpenid" parameterType="com.xue.entity.model.RestaurantUser">
    update restaurant_user set official_openid=#{param2} where unionid=#{param1} and delete_status = 0
  </update>

  <update id="updateLessonStudio" parameterType="com.xue.entity.model.Lesson">
    update lesson set studio=#{param2},campus=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateClassScheduleStudio" parameterType="com.xue.entity.model.Arrangement">
    update class_schedule set studio=#{param2},campus=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateCommentStudio" parameterType="com.xue.entity.model.Message">
    update class_comment set studio=#{param2},campus=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateScheduleArrangementStudio" parameterType="com.xue.entity.model.Arrangement">
    update schedule_arrangement set studio=#{param2},campus=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateSignUpRecordStudio" parameterType="com.xue.entity.model.SignUp">
    update sign_up_record set studio=#{param2},campus=#{param2} where studio=#{param1} and delete_status = 0
  </update>

  <update id="updateLeaveRecordStudio" parameterType="com.xue.entity.model.Leave">
    update leave_record set studio=#{param2},campus=#{param2} where studio=#{param1} and delete_status = 0
  </update>



  <update id="updateCombine" parameterType="com.xue.entity.model.Lesson">
    update lesson set is_combine=#{is_combine} where student_name=#{student_name} and studio=#{studio} and campus=#{campus}
  </update>

  <update id="updateLessonCampus" parameterType="com.xue.entity.model.Lesson">
    update lesson set campus=#{param3} where studio=#{param1} and student_name=#{param2} and delete_status = 0
  </update>

  <update id="updateLessonLeft" parameterType="com.xue.entity.model.Lesson">
    update lesson set left_amount=#{param1} where studio=#{param2} and student_name=#{param3} and campus=#{param4} and subject=#{param5} and delete_status = 0
  </update>

  <update id="updateLessonTotal" parameterType="com.xue.entity.model.Lesson">
    update lesson set total_amount=#{param1} where studio=#{param2} and student_name=#{param3} and campus=#{param4} and subject=#{param5} and delete_status = 0
  </update>

  <update id="updateLessonMinus" parameterType="com.xue.entity.model.Lesson">
    update lesson set minus=#{param1} where studio=#{param2} and student_name=#{param3} and campus=#{param4} and subject=#{param5} and delete_status = 0
  </update>

  <update id="updateLessonCoins" parameterType="com.xue.entity.model.Lesson">
    update lesson set coins=#{param1} where studio=#{param2} and student_name=#{param3} and campus=#{param4} and subject=#{param5} and delete_status = 0
  </update>

  <update id="updateLessonTotalMoney" parameterType="com.xue.entity.model.Lesson">
    update lesson set total_money=#{param1} where studio=#{param2} and student_name=#{param3} and campus=#{param4} and subject=#{param5} and delete_status = 0
  </update>

  <update id="updateLessonDiscountMoney" parameterType="com.xue.entity.model.Lesson">
    update lesson set discount_money=#{param1} where studio=#{param2} and student_name=#{param3} and campus=#{param4} and subject=#{param5} and delete_status = 0
  </update>

  <update id="updateSignUpCampus" parameterType="com.xue.entity.model.SignUp">
    update sign_up_record set campus=#{param3} where studio=#{param1} and student_name=#{param2} and delete_status = 0
  </update>

  <update id="updateSignUpSubject" parameterType="com.xue.entity.model.SignUp">
    update sign_up_record set subject=#{param5} where studio=#{param1} and student_name=#{param2} and campus=#{param3} and subject=#{param4} and delete_status = 0
  </update>

  <update id="updateGiftCampus" parameterType="com.xue.entity.model.Gift">
    update gift_record set campus=#{param3} where studio=#{param1} and student_name=#{param2}
  </update>

  <update id="updateNoteCampus" parameterType="com.xue.entity.model.Note">
    update class_note set campus=#{param3} where studio=#{param1} and student_name=#{param2}
  </update>

  <update id="updateLeaveCampus" parameterType="com.xue.entity.model.Leave">
    update leave_record set campus=#{param3} where studio=#{param1} and student_name=#{param2} and delete_status = 0
  </update>

  <update id="updateSubscription" parameterType="com.xue.entity.model.User">
    update user set subscription=#{subscription} where openid=#{openid}
  </update>

  <!-- 更新科目 -->
  <update id="updateSubject" parameterType="com.xue.entity.model.User">
    update user set subjects=#{subjects} where openid=#{openid}
  </update>

  <!-- 更新颜色 -->
  <update id="updateTheme" parameterType="com.xue.entity.model.User">
    update user set theme=#{param1} where openid=#{param2}
  </update>

  <!-- 更新展示视频 -->
  <update id="updatVideoDisplay" parameterType="com.xue.entity.model.User">
    update user set display=#{param2} where studio=#{param1}
  </update>

  <!-- 更新封面权限 -->
  <update id="updatCoverDisplay" parameterType="com.xue.entity.model.User">
    update user set cover=#{param2} where studio=#{param1}
  </update>

  <!-- 续费更新 -->
  <update id="updateUserPay" parameterType="com.xue.entity.model.User">
    update user set expired_time=#{expired_time} ,days=#{days} where studio=#{studio} and role in ('boss', 'teacher')
  </update>

  <!-- 获取学生名课时 -->
  <select id="getLessonByName" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select id,student_name,total_amount,left_amount,points,create_time,studio,minus,coins,subject,final_time,leave_times from lesson where student_name=#{student_name} and studio = #{studio} and campus =#{campus} and delete_status = 0
  </select>

  <!-- 获取学生名课时 -->
  <select id="getLessonByNameSubject" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select id,student_name,total_amount,left_amount,points,create_time,studio,minus,coins,subject,is_combine,price,final_time,leave_times from lesson where student_name=#{student_name} and studio = #{studio} and subject = #{subject} and campus = #{campus} and delete_status = 0
  </select>

  <select id="getLessonByNameSubjectAll" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select * from lesson where student_name=#{student_name} and studio = #{studio} and subject = #{subject} and campus = #{campus}
  </select>

  <!-- 更新积分 -->
  <update id="updateLessonPoint" parameterType="com.xue.entity.model.Lesson">
    update lesson set points=#{points} where student_name=#{student_name} and studio = #{studio} and subject = #{subject} and campus = #{campus} and delete_status = 0
  </update>

  <update id="updateLessonPackageTotalMoney" parameterType="com.xue.entity.model.LessonPackage">
    update lesson_package set total_money=#{param2} where id=#{param1} and delete_status = 0
  </update>

  <update id="updateLessonPackageDiscountMoney" parameterType="com.xue.entity.model.LessonPackage">
    update lesson_package set discount_money=#{param2} where id=#{param1} and delete_status = 0
  </update>

  <!-- 更新用户金币 -->
  <update id="updateCoinsByStudio" parameterType="com.xue.entity.model.User">
    update user set coins=#{coins},expired_time=#{expired_time} where studio=#{studio} and delete_status = 0
  </update>

  <!-- 更新用可观看次数 -->
  <update id="updateReadTimesByOpenid" parameterType="com.xue.entity.model.User">
    update user set read_times=#{param2} where openid=#{param1} and delete_status = 0
  </update>

  <!-- 更新用可观看次数 -->
  <update id="updateVideoViewsById" parameterType="com.xue.entity.model.User">
    update class_comment set views=#{param2} where id=#{param1} and delete_status = 0
  </update>

  <update id="updateFinalTime" parameterType="com.xue.entity.model.Lesson">
    update lesson set final_time=#{param3} where studio=#{param1} and campus =#{param2}
  </update>

  <update id="updateLeaveTimes" parameterType="com.xue.entity.model.Lesson">
    update lesson set leave_times=#{param3} where studio=#{param1} and campus =#{param2}
  </update>

  <!-- 更新学生名字 -->
  <update id="updateUserStudent" parameterType="com.xue.entity.model.User">
    update user set student_name=#{param1} where student_name=#{param2} and studio=#{param3} and subject = #{param4}
  </update>

  <update id="updateUserStudentByOpenid" parameterType="com.xue.entity.model.User">
    update user set student_name=#{param1} where openid=#{param2} and id =#{param3}
  </update>

  <!-- 用户过期 -->
  <update id="updateUserExpired" parameterType="com.xue.entity.model.User">
    update user set role=#{param1} where studio=#{param2} and role in ('boss','teacher')
  </update>

  <!-- 用户过期 -->
  <update id="updateUserExpiredTimeAd" parameterType="com.xue.entity.model.User">
    update user set expired_time_ad=#{param2} where openid=#{param1}
  </update>

  <update id="updateUserMember" parameterType="com.xue.entity.model.User">
    update user set member=#{param1} where studio=#{param2} and role in ('boss', 'teacher') and delete_status = 0
  </update>


</mapper>