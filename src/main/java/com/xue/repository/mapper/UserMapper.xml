<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xue.repository.dao.UserMapper">

  <resultMap id="BaseResultMap" type="com.xue.entity.model.Message">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="photo" property="photo" javaType="[B" jdbcType="BLOB"/>
  </resultMap>
  <resultMap id="BaseSchedule" type="com.xue.entity.model.Schedule">
    <result column="add_date" jdbcType="VARCHAR" property="add_date" />
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>
  <resultMap id="BaseUser" type="com.xue.entity.model.User">
    <result column="nick_name" jdbcType="VARCHAR" property="nick_name" />
    <result column="role" jdbcType="VARCHAR" property="role" />
  </resultMap>
  <resultMap id="BaseLesson" type="com.xue.entity.model.Lesson">
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>
  <resultMap id="BaseSignUp" type="com.xue.entity.model.SignUp">
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>
  <resultMap id="BaseGift" type="com.xue.entity.model.Gift">
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>
  <resultMap id="BaseArrangement" type="com.xue.entity.model.Arrangement">
    <result column="dayofweek" jdbcType="VARCHAR" property="dayofweek" />
  </resultMap>
  <resultMap id="BaseLeave" type="com.xue.entity.model.Leave">
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>




  <!-- 获取全部 -->
  <select id="getMessage" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
      select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target not in ('范画','广告','主页','课程体系','奖状','付款码','奖状模板','课件','环境','教程列表','教程详情','礼品乐园') and studio = #{param1}   order by create_time desc limit #{param2},#{param3};
  </select>

  <!-- 获取全部 -->
  <select id="getMessageByName" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target not in ('范画','广告','主页','课程体系','奖状','付款码','奖状模板','课件','环境','教程列表','教程详情','礼品乐园') and student_name = #{param1} and studio = #{param2} order by create_time desc limit #{param3},#{param4};
  </select>

  <!-- 获取全部 -->
  <select id="getMessageClient" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target not in ('范画','广告','主页','课程体系','奖状','付款码','奖状模板','课件','环境','教程列表','教程详情','礼品乐园') and student_name like "%"#{param1}"%" and studio = #{param2} order by create_time desc
  </select>

  <!-- 获取全部 -->
  <select id="getMessageInName" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target not in ('范画','广告','主页','课程体系','奖状','付款码','奖状模板','课件','环境','教程列表','教程详情','礼品乐园') and find_in_set(student_name,#{param1}) and studio = #{param2} order by create_time desc limit #{param3},#{param4};
  </select>

  <!-- 获取范画 -->
  <select id="getModel" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target='范画' and studio = #{param1} order by create_time desc limit #{param2},#{param3};
  </select>

  <!-- 获取广告 -->
  <select id="getAdvertise" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target='广告' and studio = #{param1} order by create_time desc
  </select>

  <!-- 获取奖状模板 -->
  <select id="getCertificateModel" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select photo from class_comment where class_target='奖状模板' and class_name=#{param1} order by create_time desc limit 1
  </select>

  <!-- 获取奖状模板 -->
  <select id="getCertificateModelName" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select class_name from class_comment where class_target='奖状模板'
  </select>

  <!-- 获取课程体系 -->
  <select id="getClassSys" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target = #{param1} and studio = #{param2} order by create_time desc limit #{param3},#{param4};
  </select>

  <!-- 获取教程列表 -->
  <select id="getCourseList" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target = '教程列表' and studio = #{param1} order by create_time desc limit #{param2},#{param3};
  </select>

  <!-- 获取教程详情 -->
  <select id="getCourseDetail" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target = '教程详情' and studio = #{param1} and class_name = #{param2} order by create_time limit #{param3},#{param4};
  </select>

  <!-- 获取主页 -->
  <select id="getHome" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target='主页' and studio = #{param1} order by create_time desc limit 1
  </select>

  <!-- 获取奖状 -->
  <select id="getCertificate" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target='奖状' and studio = #{param1} order by create_time desc
  </select>

  <!-- 获取付款码 -->
  <select id="getPaycode" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target='付款码' and student_name = #{param1} order by create_time desc limit 1
  </select>

  <!-- 获取个人奖状 -->
  <select id="getCertificateByName" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target='奖状' and studio = #{param1} and student_name = #{param2} order by create_time desc
  </select>

  <!-- 获取全部 -->
  <select id="getSearch" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where (student_name like "%"#{param1}"%" or class_name like "%"#{param1}"%") and class_target not in ('范画','广告','主页','课程体系','奖状','付款码','奖状模板','课件','环境','教程列表','教程详情','礼品乐园') and studio = #{param2}  order by create_time desc limit #{param3},#{param4};
  </select>

  <!-- 获取详情 -->
  <select id="getDetails" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where id = #{param1} and class_target not in ('范画','广告','主页','课程体系','奖状','付款码','奖状模板','课件','环境','教程列表','教程详情','礼品乐园')
  </select>

  <!-- 获取详情 -->
  <select id="getPpt" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target = '课件' order by id desc limit #{param1},#{param2};
  </select>

  <!-- 获取学生照片 -->
  <select id="getStudentPhoto" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target = '礼品乐园' and student_name =#{param1} and studio =#{param2} order by create_time desc limit 1;
  </select>

  <!-- 删除详情 -->
  <select id="deleteStudentPhoto" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    delete from class_comment where class_target = '礼品乐园' and student_name =#{param1} and studio =#{param2}
  </select>

  <!-- 删除详情 -->
  <select id="deleteHome" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    delete from class_comment where class_target = '主页' and studio =#{param1}
  </select>

  <!-- 获取详情 -->
  <select id="deleteComment" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    delete from class_comment where id =#{param1}
  </select>

  <!-- 删除安排 -->
  <select id="deleteArrangement" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseResultMap">
    delete from schedule_arrangement where id =#{param1}
  </select>

  <!-- 获取详情 -->
  <select id="deleteSignUpRecord" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    delete from sign_up_record where id =#{param1}
  </select>

  <!-- 获取详情 -->
  <select id="deleteSignUpAllRecord" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    delete from sign_up_record where student_name =#{param1} and studio =#{param2}
  </select>

  <!-- 获取详情 -->
  <select id="deleteGiftRecord" parameterType="com.xue.entity.model.Gift" resultMap="BaseGift">
    delete from gift_record where id =#{param1}
  </select>

  <!-- 获取详情 -->
  <select id="deleteLeaveAllRecord" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    delete from leave_record where student_name =#{param1} and studio =#{param2}
  </select>

  <!-- 删除请假记录 -->
  <select id="deleteLeaveRecord" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    delete from leave_record where id =#{param1}
  </select>

  <!-- 刪除课程表 -->
  <select id="deleteSchedule" parameterType="com.xue.entity.model.Schedule" resultMap="BaseResultMap">
    delete from class_schedule where id =#{param1}
  </select>

  <!-- 获取删除学生 -->
  <select id="deleteLesson" parameterType="com.xue.entity.model.Lesson" resultMap="BaseResultMap">
    delete from lesson where id =#{param1}
  </select>

  <!-- 获取课程表 -->
  <select id="getClassNumber" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseArrangement">
    select id,dayofweek,class_number,duration,limits,photo,studio from schedule_arrangement where studio = #{param1} and dayofweek =#{param2} and duration =#{param3} order by class_number
  </select>

  <!-- 获取课程表 -->
  <select id="getSchedule" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select id,add_date,age,student_name,duration,create_time,studio,update_time,student_type from class_schedule where dayofweek(add_date)=#{param1} and studio = #{param2} and student_type ='ordinary' order by duration
  </select>

  <!-- 获取课插班生 -->
  <select id="getTransfer" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select id,add_date,age,student_name,duration,create_time,studio,update_time,student_type from class_schedule where add_date = #{param1} and studio = #{param2} and student_type ='transferred' order by duration
  </select>

  <!-- 插入信息 -->
  <insert id="push" parameterType="com.xue.entity.model.Message">
      insert class_comment(student_name,photo,comment,create_time,class_name,class_target,studio) values(#{student_name},#{photo},#{comment},#{create_time},#{class_name},#{class_target},#{studio})
  </insert>

  <!-- 插入课程表 -->
  <insert id="insertSchedule" parameterType="com.xue.entity.model.Schedule">
    insert class_schedule(add_date,age,student_name,duration,create_time,studio,update_time,student_type) values(#{add_date},#{age},#{student_name},#{duration},#{create_time},#{studio},#{update_time},#{student_type})
  </insert>

  <!-- 插入签到记录 -->
  <insert id="insertSignUp" parameterType="com.xue.entity.model.SignUp">
    insert sign_up_record(student_name,create_time,studio,sign_time,mark) values(#{student_name},#{create_time},#{studio},#{sign_time},#{mark})
  </insert>

  <!-- 插入请假记录 -->
  <insert id="insertLeave" parameterType="com.xue.entity.model.Leave">
    insert leave_record(student_name,date_time,studio,create_time,duration) values(#{student_name},#{date_time},#{studio},#{create_time},#{duration})
  </insert>

  <!-- 插入课程安排 -->
  <insert id="insertArrangement" parameterType="com.xue.entity.model.Arrangement">
    insert schedule_arrangement(dayofweek,class_number,duration,limits,photo,studio) values(#{dayofweek},#{class_number},#{duration},#{limits},#{photo},#{studio})
  </insert>

  <!-- 查找课程表 -->
  <select id="getArrangement" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseArrangement">
    select id,dayofweek,class_number,duration,limits,photo,studio from schedule_arrangement where studio = #{param1} and dayofweek =#{param2} order by duration
  </select>

  <!-- 查找请假记录 -->
  <select id="getLeaveRecord" parameterType="com.xue.entity.model.Leave" resultMap="BaseLeave">
    select id,student_name,date_time,studio,create_time,duration from leave_record where student_name =#{param1} and studio = #{param2} order by date_time
  </select>

  <!-- 发放礼物记录 -->
  <insert id="insertGift" parameterType="com.xue.entity.model.Gift">
    insert gift_record(student_name,gift_name,create_time,expired_time,studio,gift_amount,status) values(#{student_name},#{gift_name},#{create_time},#{expired_time},#{studio},#{gift_amount},#{status})
  </insert>

  <!-- 查找签到记录 -->
  <select id="getSignUp" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select id,student_name,create_time,studio,sign_time,mark from sign_up_record where student_name =#{param1} and studio = #{param2} order by create_time
  </select>

  <!-- 查找签到记录 -->
  <select id="getSignUpByDate" parameterType="com.xue.entity.model.SignUp" resultMap="BaseSignUp">
    select id,student_name,create_time,studio,sign_time,mark from sign_up_record where student_name =#{param1} and studio = #{param2} and create_time=#{param3}  order by create_time
  </select>

  <!-- 查找礼物记录 -->
  <select id="getGift" parameterType="com.xue.entity.model.Gift" resultMap="BaseGift">
    select id,student_name,gift_name,create_time,expired_time,studio,gift_amount,status from gift_record where student_name =#{param1} and studio = #{param2} order by expired_time desc
  </select>

  <!-- 更新课时 -->
  <update id="updateSchedule" parameterType="com.xue.entity.model.Schedule">
    update class_schedule set update_time=#{update_time} where student_name=#{student_name} and studio = #{studio}
  </update>

  <!-- 更新名字 -->
  <update id="updateScheduleName" parameterType="com.xue.entity.model.Schedule">
    update class_schedule set student_name=#{param1} where student_name=#{param2} and studio = #{param3}
  </update>

  <update id="updateCommentName" parameterType="com.xue.entity.model.Message">
    update class_comment set student_name=#{param1} where student_name=#{param2} and studio = #{param3}
  </update>

  <update id="updateGiftRecordName" parameterType="com.xue.entity.model.Gift">
    update gift_record set student_name=#{param1} where student_name=#{param2} and studio = #{param3}
  </update>

  <update id="updateLessonName" parameterType="com.xue.entity.model.Lesson">
    update lesson set student_name=#{param1} where student_name=#{param2} and studio = #{param3}
  </update>

  <update id="updateSignUpRecordName" parameterType="com.xue.entity.model.SignUp">
    update sign_up_record set student_name=#{param1} where student_name=#{param2} and studio = #{param3}
  </update>

  <!-- 更新课评 -->
  <update id="updateComment" parameterType="com.xue.entity.model.Message">
    update class_comment set class_target=#{class_target},comment=#{comment} where id=#{id} and studio = #{studio}
  </update>

  <!-- 更新课评 -->
  <update id="updateDetailPhoto" parameterType="com.xue.entity.model.Message">
    update class_comment set photo=#{photo} where id=#{id} and studio = #{studio}
  </update>

  <!-- 更新课时 -->
  <update id="updateGift" parameterType="com.xue.entity.model.Gift">
    update gift_record set status=1 where id=#{param1}
  </update>

  <!-- 插入客户信息 -->
  <insert id="insertUser" parameterType="com.xue.entity.model.User">
    insert user(nick_name,student_name,role,openid,create_time,avatarurl,studio,user_type,expired_time,comment_style) values(#{nick_name},#{student_name},#{role},#{openid},#{create_time},#{avatarurl},#{studio},#{user_type},#{expired_time},#{comment_style})
  </insert>

  <select id="getUser" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select id,nick_name,student_name,role,openid,create_time,avatarurl,studio,user_type,expired_time,coins,comment_style from user where openid =#{param1} order by create_time desc limit 1
  </select>

  <select id="getUserByOpenid" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select id,nick_name,student_name,role,openid,create_time,avatarurl,studio,user_type,expired_time,coins,comment_style from user where openid =#{param1} order by create_time desc
  </select>

  <select id="getUserByNickName" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select id,nick_name,student_name,role,openid,create_time,avatarurl,studio,user_type,expired_time,coins,comment_style from user where (nick_name like "%"#{nick_name}"%" or studio like "%"#{nick_name}"%") order by create_time desc
  </select>

  <select id="getAllUser" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select id,nick_name,student_name,role,openid,create_time,avatarurl,studio,user_type,expired_time,coins,comment_style from user order by role
  </select>

  <!-- 更新工作室 -->
  <update id="updateUser" parameterType="com.xue.entity.model.User">
    update user set studio=#{studio}, create_time=#{create_time} where openid = #{openid}
  </update>

  <!-- 更新课评风格 -->
  <update id="updateComentStyle" parameterType="com.xue.entity.model.User">
    update user set comment_style=#{comment_style} where studio = #{studio}
  </update>

  <select id="getComentStyle" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select comment_style from user where studio = #{studio} order by create_time limit 1
  </select>

  <select id="getStudio" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select distinct studio from user
  </select>

  <select id="getArrangements" parameterType="com.xue.entity.model.Arrangement" resultMap="BaseArrangement">
    select distinct dayofweek,class_number,duration,studio from schedule_arrangement where studio =#{param1} order by dayofweek,duration
  </select>

  <select id="getOpenidByNick" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select distinct openid from user where student_name =#{param1} and studio = #{param2}
  </select>

  <!-- 插入课时 -->
  <insert id="insertLesson" parameterType="com.xue.entity.model.Lesson">
    insert lesson(student_name,total_amount,left_amount,points,create_time,studio,minus,coins) values(#{student_name},#{total_amount},#{left_amount},#{points},#{create_time},#{studio},#{minus},#{coins})
  </insert>

  <!-- 获取课时 -->
  <select id="getLesson" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select id,student_name,total_amount,left_amount,create_time,points,studio,minus,coins from lesson where studio =#{param1} order by student_name
  </select>

  <!-- 获取总人数 -->
  <select id="getLessonAllCount" parameterType="com.xue.entity.model.Lesson" resultType="java.lang.Integer">
    select count(distinct student_name) from lesson where studio =#{param1}
  </select>

  <!-- 获取总人数 -->
  <select id="getLessonAllCountByDay" parameterType="com.xue.entity.model.Schedule" resultType="java.lang.Integer">
    select count(distinct student_name) from class_schedule where studio =#{param1} and dayofweek(add_date) =#{param2} and replace(replace(duration,':',''),'-','') =replace(replace(#{param3},':',''),'-','')
  </select>

  <!-- 获取课时 -->
  <select id="getLessonLikeName" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select id,student_name,total_amount,left_amount,create_time,points,studio,minus,coins from lesson where studio =#{param1} and student_name like "%"#{param2}"%" order by student_name
  </select>

  <!-- 获取课时 -->
  <select id="getLessonInName" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select id,student_name,total_amount,left_amount,create_time,points,studio,minus,coins from lesson where studio =#{param1} and find_in_set(student_name,#{param2}) order by student_name limit #{param3},#{param4};
  </select>

  <!-- 获取课时 -->
  <select id="getRating" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select id,student_name,total_amount,left_amount,create_time,points,studio,coins from lesson where studio =#{param1} order by points desc limit #{param2},#{param3};
  </select>

  <!-- 获取课时 -->
  <select id="getRatingByName" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select id,student_name,total_amount,left_amount,create_time,points,studio from lesson where studio =#{param1} and student_name like "%"#{param2}"%" order by student_name limit #{param3},#{param4};
  </select>


  <!-- 更新课时 -->
  <update id="updateLesson" parameterType="com.xue.entity.model.Lesson">
    update lesson set left_amount=#{left_amount}, total_amount=#{total_amount},minus=#{minus},,coins=#{coins} where student_name=#{student_name} and studio = #{studio}
  </update>

  <!-- 更新用户类型 -->
  <update id="updateUsertype" parameterType="com.xue.entity.model.User">
    update user set role=#{role}, user_type=#{user_type},create_time=#{create_time},expired_time=#{expired_time} where openid=#{openid}
  </update>

  <!-- 获取学生名课时 -->
  <select id="getLessonByName" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select id,student_name,total_amount,left_amount,points,create_time,studio,minus from lesson where student_name=#{student_name} and studio = #{studio}
  </select>

  <!-- 更新积分 -->
  <update id="updateLessonPoint" parameterType="com.xue.entity.model.Lesson">
    update lesson set points=#{points} where student_name=#{student_name} and studio = #{studio}
  </update>

  <!-- 更新用户金币 -->
  <update id="updateCoins" parameterType="com.xue.entity.model.User">
    update user set coins=#{coins} where openid=#{openid}
  </update>

</mapper>