<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xue.repository.dao.UserMapper">

  <resultMap id="BaseResultMap" type="com.xue.entity.model.Message">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="photo" property="photo" javaType="[B" jdbcType="BLOB"/>
  </resultMap>
  <resultMap id="BaseSchedule" type="com.xue.entity.model.Schedule">
    <result column="add_date" jdbcType="VARCHAR" property="add_date" />
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>
  <resultMap id="BaseUser" type="com.xue.entity.model.User">
    <result column="nick_name" jdbcType="VARCHAR" property="nick_name" />
    <result column="role" jdbcType="VARCHAR" property="role" />
  </resultMap>
  <resultMap id="BaseLesson" type="com.xue.entity.model.Lesson">
    <result column="student_name" jdbcType="VARCHAR" property="student_name" />
  </resultMap>


  <!-- 获取全部 -->
  <select id="getMessage" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
      select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target not in ('范画','广告','主页','课程体系') and studio = #{0}   order by create_time desc
  </select>

  <!-- 获取全部 -->
  <select id="getMessageClient" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target not in ('范画','广告','主页','课程体系') and student_name like "%"#{param1}"%" and studio = #{param2} order by create_time desc
  </select>

  <!-- 获取范画 -->
  <select id="getModel" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target='范画' and studio = #{param1} order by create_time desc limit 6
  </select>

  <!-- 获取广告 -->
  <select id="getAdvertise" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target='广告' and studio = #{0} order by create_time desc limit 1
  </select>

  <!-- 获取课程体系 -->
  <select id="getClassSys" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target='课程体系' and studio = #{0} order by create_time desc limit 6
  </select>

  <!-- 获取主页 -->
  <select id="getHome" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where class_target='主页' and studio = #{0} order by create_time desc limit 3
  </select>

  <!-- 获取全部 -->
  <select id="getSearch" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where student_name like "%"#{param1}"%" or class_name like "%"#{param1}"%" and class_target not in ('范画','广告','主页','课程体系') and studio = #{param2}  order by create_time desc
  </select>

  <!-- 获取详情 -->
  <select id="getDetails" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    select id,student_name,photo,comment,create_time,class_name,class_target,studio from class_comment where id = #{0} and class_target not in ('范画','广告','主页','课程体系')
  </select>

  <!-- 获取详情 -->
  <select id="deleteComment" parameterType="com.xue.entity.model.Message" resultMap="BaseResultMap">
    delete from class_comment where id =#{0}
  </select>

  <!-- 获取详情 -->
  <select id="deleteSchedule" parameterType="com.xue.entity.model.Schedule" resultMap="BaseResultMap">
    delete from class_schedule where id =#{0}
  </select>

  <!-- 获取课程表 -->
  <select id="getSchedule" parameterType="com.xue.entity.model.Schedule" resultMap="BaseSchedule">
    select id,add_date,age,student_name,duration,create_time,studio from class_schedule where dayofweek(add_date)=#{param1} and studio = #{param2} order by create_time
  </select>

  <!-- 插入信息 -->
  <insert id="push" parameterType="com.xue.entity.model.Message">
      insert class_comment(student_name,photo,comment,create_time,class_name,class_target,studio) values(#{student_name},#{photo},#{comment},#{create_time},#{class_name},#{class_target},#{studio})
  </insert>

  <!-- 插入课程表 -->
  <insert id="insertSchedule" parameterType="com.xue.entity.model.Schedule">
    insert class_schedule(add_date,age,student_name,duration,create_time,studio) values(#{add_date},#{age},#{student_name},#{duration},#{create_time},#{studio})
  </insert>

  <!-- 插入客户信息 -->
  <insert id="insertUser" parameterType="com.xue.entity.model.User">
    insert user(nick_name,student_name,role,openid,create_time,avatarurl,studio) values(#{nick_name},#{student_name},#{role},#{openid},#{create_time},#{avatarurl},#{studio})
  </insert>

  <select id="getUser" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select id,nick_name,student_name,role,openid,create_time,avatarurl,studio from user where openid =#{0} limit 1
  </select>

  <select id="getOpenidByNick" parameterType="com.xue.entity.model.User" resultMap="BaseUser">
    select distinct openid from user where student_name =#{0} and studio = #{1}
  </select>

  <!-- 插入课时 -->
  <insert id="insertLesson" parameterType="com.xue.entity.model.Lesson">
    insert lesson(student_name,total_amount,left_amount,points,create_time,studio) values(#{student_name},#{total_amount},#{left_amount},#{points},#{create_time},#{studio})
  </insert>

  <!-- 获取课时 -->
  <select id="getLesson" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select id,student_name,total_amount,left_amount,create_time,points,studio from lesson where studio =#{0} order by points desc
  </select>

  <!-- 更新课时 -->
  <update id="updateLesson" parameterType="com.xue.entity.model.Lesson">
    update lesson set left_amount=#{left_amount}, total_amount=#{total_amount} where student_name=#{student_name} and studio = #{studio}
  </update>

  <!-- 获取学生名课时 -->
  <select id="getLessonByName" parameterType="com.xue.entity.model.Lesson" resultMap="BaseLesson">
    select id,student_name,total_amount,left_amount,points,create_time,studio from lesson where student_name=#{student_name} and studio = #{studio}
  </select>

  <!-- 更新积分 -->
  <update id="updateLessonPoint" parameterType="com.xue.entity.model.Lesson">
    update lesson set points=#{points} where student_name=#{student_name} and studio = #{studio}
  </update>

</mapper>